<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ebc2a722279de71968689deb766ae5159cae4090" />
    <Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/28/2018" />
    <Meta Name="ms.locfileid" Value="52455169" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fa834-101">使用可延伸樣式表語言轉換 (XSLT) 樣式表，轉換 XML 資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa834-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-102"><xref:System.Xml.Xsl.XslTransform>類別是 Microsoft.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-103"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-104">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-105"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-106">XSLT 樣式表必須使用命名空間`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-107">其他引數也可以加入至樣式表使用<xref:System.Xml.Xsl.XsltArgumentList>類別。</span><span class="sxs-lookup"><span data-stu-id="fa834-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="fa834-108">這個類別包含樣式表和擴充物件可從樣式表呼叫的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="fa834-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-109">若要將 XML 資料的轉換：</span><span class="sxs-lookup"><span data-stu-id="fa834-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="fa834-110">建立<xref:System.Xml.Xsl.XslTransform>物件。</span><span class="sxs-lookup"><span data-stu-id="fa834-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="fa834-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法來載入樣式表轉換。</span><span class="sxs-lookup"><span data-stu-id="fa834-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="fa834-112">此方法有數個多載，可以載入樣式表 using <xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或使用檔案的位置 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="fa834-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>來轉換 XML 資料的方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="fa834-114">這個方法有數個多載，以及可處理不同類型的輸入和輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="fa834-115">您也可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在轉換期間使用做為輸入的其他引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="fa834-116">**安全性考量**</span><span class="sxs-lookup"><span data-stu-id="fa834-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="fa834-117">建立使用 <xref:System.Xml.Xsl.XslTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="fa834-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="fa834-118">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="fa834-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="fa834-119">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="fa834-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="fa834-120">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="fa834-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="fa834-121">惡意使用者可以利用這一點，藉由提供給您的資料或樣式表執行時將會導致您的系統處理，直到電腦資源不足。</span><span class="sxs-lookup"><span data-stu-id="fa834-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="fa834-122">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="fa834-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="fa834-123">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="fa834-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="fa834-124">您可以降低這些安全性問題不接受<xref:System.Xml.Xsl.XslTransform>物件、 XSLT 樣式表或從不受信任來源的 XML 來源資料。</span><span class="sxs-lookup"><span data-stu-id="fa834-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="fa834-125">**指令碼支援**</span><span class="sxs-lookup"><span data-stu-id="fa834-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="fa834-126">此類別支援使用內嵌指令碼`msxsl:script`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="fa834-127">在.NET Framework 版本 1.1，樣式表的辨識項會決定哪些權限都各有內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="fa834-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="fa834-128">如果樣式表載入從統一資源識別元 (URI)，則 URI 用來建立辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="fa834-129">這個辨識項包括加上其站台和區域的 URI。</span><span class="sxs-lookup"><span data-stu-id="fa834-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="fa834-130">如果使用其他來源載入樣式表，您還可以提供辨識項，藉由傳遞<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>物件至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="fa834-131">否則，指令碼組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="fa834-132">非完全信任呼叫端：`UnmanagedCode`權限，才能編譯內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="fa834-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="fa834-133">`ControlEvidence` 權限，才能提供<xref:System.Security.Policy.Evidence>至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="fa834-134">A<xref:System.Security.SecurityException>如果呼叫端沒有必要的權限，就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="fa834-135">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 和 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="fa834-136">`msxsl:script`項目具有下列需求：</span><span class="sxs-lookup"><span data-stu-id="fa834-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="fa834-137">`msxsl:script`項目屬於`urn:schemas-microsoft-com:xslt`命名空間。</span><span class="sxs-lookup"><span data-stu-id="fa834-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="fa834-138">樣式表必須包含命名空間宣告`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="fa834-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="fa834-139">`msxsl:script`元素可以包含`language`屬性，指定要使用的指令碼語言。</span><span class="sxs-lookup"><span data-stu-id="fa834-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="fa834-140">值`language`屬性必須是下列其中之一： C#、 CSharp、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="fa834-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="fa834-141">語言名稱不區分大小寫，因為 JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="fa834-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="fa834-142">如果`language`屬性未指定，則會預設為 JScript。</span><span class="sxs-lookup"><span data-stu-id="fa834-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="fa834-143">`msxsl:script`元素必須包含`implements-prefix`包含表示指令碼區塊相關聯的命名空間的前置詞的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="fa834-144">此命名空間必須定義樣式表中。</span><span class="sxs-lookup"><span data-stu-id="fa834-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="fa834-145">樣式表可以包含多個指令碼區塊會依命名空間。</span><span class="sxs-lookup"><span data-stu-id="fa834-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="fa834-146">您不能有相同的命名空間內的多個語言的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="fa834-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="fa834-147">指令碼區塊可以呼叫另一個的指令碼區塊中定義的函式，提供指令碼區塊會位於相同的命名空間。</span><span class="sxs-lookup"><span data-stu-id="fa834-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="fa834-148">根據規則和指令碼語言的語法會剖析指令碼區塊的內容 (藉由提供`language`屬性)。</span><span class="sxs-lookup"><span data-stu-id="fa834-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="fa834-149">例如，如果您有 C# 指令碼區塊，註解會加上`//`字元。</span><span class="sxs-lookup"><span data-stu-id="fa834-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="fa834-150">註解必須是有效的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="fa834-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="fa834-151">`Note` 建議您將指令碼區塊包裝在 CDATA 區段。</span><span class="sxs-lookup"><span data-stu-id="fa834-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="fa834-152">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 物件是只轉換作業的執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa834-152">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="fa834-153">其他作業不保證是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa834-153">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="fa834-154">您必須確定沒有其他方法，會在載入作業期間在物件上呼叫。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa834-154">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa834-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa834-156">載入 XSLT 樣式表，包括 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 項目中參考的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-157"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-158"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-159">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="fa834-160">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-160">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-161">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-161">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-162"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-163"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-164">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-165"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-166">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="fa834-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="fa834-167">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-168">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa834-169">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa834-170">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-171">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="fa834-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-172">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-172">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-173">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-173">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-174">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-174">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa834-175">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="fa834-175">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fa834-176">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="fa834-176">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-177">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-177">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-178">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-178">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-179">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-179">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-180">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-180">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-181"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-181">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-182"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-182">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-183">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-183">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-184"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-184"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-185">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-185">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-186">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-186">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-187">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-187">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa834-188">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-188">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa834-189">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="fa834-189">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa834-190">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="fa834-190">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="fa834-191">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-191">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa834-192">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="fa834-192">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa834-193">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="fa834-193">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa834-194">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="fa834-194">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="fa834-195">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-195">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-196">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-196">The assembly has full trust.</span></span> <span data-ttu-id="fa834-197">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-197">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-198">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-198">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-199">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-199">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-200">下列範例會將轉換依標題排序所有書籍的 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="fa834-200">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="fa834-201">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="fa834-201">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-202">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-202">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-203">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-203">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-204">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-204">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-205">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-205">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-206">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-206">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-207"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-207">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-208"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-208">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-209">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-209">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-210"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-210"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-211">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-211">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-212">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-212">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-213">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-213">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa834-214">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-214">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa834-215">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-215">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-216">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-216">The assembly has full trust.</span></span> <span data-ttu-id="fa834-217">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-217">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-218">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-218">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-219">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-219">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-220">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-220">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-221">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-221">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-222">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-222">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-223">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-223">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-224"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-224">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-225"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-225">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-226">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-226">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-227"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-227"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-228">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-228">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-229">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-229">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-230">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-230">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="fa834-231">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-231">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa834-232">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="fa834-232">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa834-233">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-233">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa834-234">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="fa834-234">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="fa834-235">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-235">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-236">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-236">The assembly has full trust.</span></span> <span data-ttu-id="fa834-237">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-237">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-238">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-238">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-239">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-239">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-240">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-240">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-241">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-241">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="fa834-242">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-242">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-243">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入樣式表和 <c>xsl:import</c> 與 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-243">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-244">如果值為 <see langword="null" />，則會使用不具有使用者認證的預設 <see cref="T:System.Xml.XmlUrlResolver" />，開啟樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-244">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="fa834-245">因為沒有使用預設的 <see cref="T:System.Xml.XmlUrlResolver" /> 解析樣式表中的任何外部資源，所以不會解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-245">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-246">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-246">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-247">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-247">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-248"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-248">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-249"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-249">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-250">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-250">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-251"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-251"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-252">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-252">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-253">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-253">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-254">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="fa834-254">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-255">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-255">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-256">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-256">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-257">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-257">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa834-258">此範例會載入 XSLT 樣式表包含`xsl:include`參考另一個樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-258">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="fa834-259"><xref:System.Xml.XmlUrlResolver>傳遞至<xref:System.Xml.Xsl.XslTransform.Load%2A>設定的認證存取網路資源，包含的樣式表所需的方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-259">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="fa834-260">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="fa834-260">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-261">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-261">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-262">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-262">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-263">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-263">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-264">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-264">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-265">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-265">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-266">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-266">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-267">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-267">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-268"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-268">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-269"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-269">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-270">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-270">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-271"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-271"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-272">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-272">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-273">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-273">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-274">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="fa834-274">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa834-275">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="fa834-275">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-276">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-276">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa834-277">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="fa834-277">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa834-278">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="fa834-278">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa834-279">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="fa834-279">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="fa834-280">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-280">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-281">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-281">The assembly has full trust.</span></span> <span data-ttu-id="fa834-282">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-282">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-283">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-284">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-285">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-285">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-286">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-286">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-287">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-287">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-288">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-288">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-289">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-289">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-290">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-290">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-291">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-291">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-292">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-292">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-293"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-293">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-294"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-294">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-295">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-295">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-296"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-296"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-297">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-297">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-298">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-298">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-299">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-299">The assembly has full trust.</span></span> <span data-ttu-id="fa834-300">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-300">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-301">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-301">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-302">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-302">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-303">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-303">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-304">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-304">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-305">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-305">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-306">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-306">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-307">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-307">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-308">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-308">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-309">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-309">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-310"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-310">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-311"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-311">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-312">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-312">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-313"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-313"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-314">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-314">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-315">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="fa834-315">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa834-316">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-316">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa834-317">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="fa834-317">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="fa834-318">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="fa834-318">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="fa834-319">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="fa834-319">The assembly has full trust.</span></span> <span data-ttu-id="fa834-320">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="fa834-320">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="fa834-321">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="fa834-321">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="fa834-322">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fa834-322">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-323">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-323">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-324">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-324">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-325">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-325">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-326">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-326">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-327">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-327">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-328">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-328">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="fa834-329">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-329">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="fa834-330">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-330">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="fa834-331">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-331">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="fa834-332">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-332">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-333">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-333">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="fa834-334">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-334">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-335"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-335">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-336"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-336">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-337">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-337">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-338"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-338"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-339">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-339">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-340">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-340">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="fa834-341">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="fa834-341">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="fa834-342">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="fa834-342">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-343">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-343">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="fa834-344">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="fa834-344">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="fa834-345">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="fa834-345">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="fa834-346">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="fa834-346">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="fa834-347">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-347">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa834-348">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="fa834-348">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa834-349">情節</span><span class="sxs-lookup"><span data-stu-id="fa834-349">Scenario</span></span>|<span data-ttu-id="fa834-350">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="fa834-350">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa834-351">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="fa834-351">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa834-352">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-352">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa834-353">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-353">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-354">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-354">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa834-355">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-355">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa834-356">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-356">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-357">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="fa834-357">The origin of the source is not known.</span></span>|<span data-ttu-id="fa834-358">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-358">Set evidence to `null`.</span></span> <span data-ttu-id="fa834-359">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="fa834-359">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa834-360">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-360">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa834-361">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="fa834-361">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa834-362">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-363">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="fa834-363">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa834-364">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="fa834-364">Request evidence from the caller.</span></span> <span data-ttu-id="fa834-365">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="fa834-365">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="fa834-366">下列範例會執行 XSLT 轉換所在`xsltReader`是<xref:System.Xml.XmlReader>包含樣式表並`secureURL`是受信任的 URL，可用來建立<xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="fa834-366">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="fa834-367"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用來建立<xref:System.Security.Policy.Evidence>套用至樣式表。</span><span class="sxs-lookup"><span data-stu-id="fa834-367">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-368">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-368">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-369">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-369">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="fa834-370">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-370">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fa834-371">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-371">for providing evidence.</span>
          </span>
          <span data-ttu-id="fa834-372">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-373">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-373">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-374">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-374">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-375">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-375">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-376">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-376">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-377">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-377">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="fa834-378">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-378">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="fa834-379">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-379">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="fa834-380">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-380">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="fa834-381">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-381">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-382">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-382">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="fa834-383">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-383">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-384"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-384">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-385"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-385">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-386">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-386">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-387"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-387"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-388">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-388">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="fa834-389">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-389">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa834-390">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="fa834-390">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa834-391">情節</span><span class="sxs-lookup"><span data-stu-id="fa834-391">Scenario</span></span>|<span data-ttu-id="fa834-392">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="fa834-392">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa834-393">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="fa834-393">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa834-394">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-394">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa834-395">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-395">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-396">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-396">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa834-397">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-397">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa834-398">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-398">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-399">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="fa834-399">The origin of the source is not known.</span></span>|<span data-ttu-id="fa834-400">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-400">Set evidence to `null`.</span></span> <span data-ttu-id="fa834-401">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="fa834-401">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa834-402">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-402">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa834-403">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="fa834-403">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa834-404">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-404">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-405">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="fa834-405">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa834-406">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="fa834-406">Request evidence from the caller.</span></span> <span data-ttu-id="fa834-407">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="fa834-407">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-408">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-408">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-409">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-409">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="fa834-410">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-410">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fa834-411">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-411">for providing evidence.</span>
          </span>
          <span data-ttu-id="fa834-412">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-412">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="fa834-413">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-413">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-414">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-414">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="fa834-415">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-415">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="fa834-416">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-416">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="fa834-417">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-417">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="fa834-418">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-418">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="fa834-419">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-419">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="fa834-420">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-420">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-421">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-421">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="fa834-422">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-422">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-423"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-423">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-424"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-424">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-425">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-425">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-426"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-426"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-427">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-427">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-428">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="fa834-428">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="fa834-429">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-429">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="fa834-430">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="fa834-430">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="fa834-431">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-431">There are different ways to provide evidence.</span></span> <span data-ttu-id="fa834-432">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="fa834-432">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="fa834-433">情節</span><span class="sxs-lookup"><span data-stu-id="fa834-433">Scenario</span></span>|<span data-ttu-id="fa834-434">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="fa834-434">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="fa834-435">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="fa834-435">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="fa834-436">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="fa834-436">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="fa834-437">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-437">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-438">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-438">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="fa834-439">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="fa834-439">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="fa834-440">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-440">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-441">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="fa834-441">The origin of the source is not known.</span></span>|<span data-ttu-id="fa834-442">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-442">Set evidence to `null`.</span></span> <span data-ttu-id="fa834-443">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="fa834-443">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="fa834-444">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-444">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="fa834-445">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="fa834-445">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="fa834-446">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="fa834-446">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="fa834-447">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="fa834-447">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="fa834-448">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="fa834-448">Request evidence from the caller.</span></span> <span data-ttu-id="fa834-449">API 的呼叫端必須提供一個方法，通常提供辨識項，`Evidence`類別。</span><span class="sxs-lookup"><span data-stu-id="fa834-449">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fa834-450">下列範例會使用從外部來源的樣式表的 XSLT 轉換。</span><span class="sxs-lookup"><span data-stu-id="fa834-450">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="fa834-451">樣式表來自受信任的來源，因為`resolver`並`evidence`參數會設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="fa834-451">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="fa834-452">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-452">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="fa834-453">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-453">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="fa834-454">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-454">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="fa834-455">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-455">for providing evidence.</span>
          </span>
          <span data-ttu-id="fa834-456">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-456">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa834-457">使用載入的 XSLT 樣式表轉換 XML 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-457">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-458"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-458">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-459"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-459">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-460">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-460">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="fa834-461">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-461">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="fa834-462">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-462">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-463">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-463">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-464"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-464">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-465"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-465">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-466">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-466">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-467"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-467"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-468">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-468">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-469">這個方法是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-469">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="fa834-470">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-470">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-471">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-471">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-472">下列範例會轉換`books.xml`檔案中，使用`output.xsl`樣式表並將結果輸出至`books.html`檔案。</span><span class="sxs-lookup"><span data-stu-id="fa834-472">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="fa834-473">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="fa834-473">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-474">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-474">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-475">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-475">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-476">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-476">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-477">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-477">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-478">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-478">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-479">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-479">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa834-480">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-480">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-481"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-481">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-482"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-482">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-483">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-483">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-484"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-484"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-485">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-485">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-486">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-486">This method is now obsolete.</span></span> <span data-ttu-id="fa834-487">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-487">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-488">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-488">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa834-489">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-489">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-490">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-490">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="fa834-491">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-491">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-492">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-492">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="fa834-493">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-493">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-494">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-494">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-495">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-495">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-496">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-496">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa834-497">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-497">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-498">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-498">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-499">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-499">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-500">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-500">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-501">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-501">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-502">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-502">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa834-503">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-503">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-504"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-504">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-505"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-505">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-506">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-506">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-507"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-507"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-508">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-508">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-509">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-509">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-510">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-510">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-511">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-511">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-512">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-512">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-513">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-513">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-514">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="fa834-514">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="fa834-515">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-515">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-516">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-516">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-517">這個方法已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-517">This method is obsolete.</span></span> <span data-ttu-id="fa834-518">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT document （） 函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-518">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="fa834-519">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-519">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-520">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-520">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-521">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-521">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-522">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-522">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-523">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-523">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="fa834-524">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-524">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="fa834-525">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-525">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-526">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-526">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-527">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-527">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-528">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-528">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-529">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-529">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-530"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-530">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-531"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-531">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-532">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-532">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-533"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-533"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-534">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-534">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-535">下列範例會執行 XSLT 轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="fa834-535">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="fa834-536"><xref:System.Xml.XmlUrlResolver>認證會使用有預設外部資源解析。</span><span class="sxs-lookup"><span data-stu-id="fa834-536">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="fa834-537">如需詳細資訊，請參閱<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="fa834-537">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-538">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-538">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-539">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-539">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-540">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-540">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-541">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-541">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-542">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-542">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-543"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-543">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-544"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-544">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-545">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-545">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-546"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-546"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-547">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-547">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-548">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-548">This method is now obsolete.</span></span> <span data-ttu-id="fa834-549">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-549">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-550">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-550">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa834-551">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-551">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-552">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-552">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-553">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-553">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-554">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-554">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-555">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-555">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa834-556">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-556">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-557">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-557">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-558">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-558">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-559">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-559">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-560">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-560">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-561">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-561">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-562">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-562">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-563">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-563">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-564">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-564">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-565">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-565">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-566">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-566">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-567"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-567">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-568"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-568">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-569">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-569">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-570"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-570"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-571">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-571">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-572">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-572">This method is now obsolete.</span></span> <span data-ttu-id="fa834-573">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-573">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-574">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-574">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa834-575">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-575">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-576">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="fa834-576">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa834-577">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-577">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="fa834-578">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-578">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-579">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-579">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-580">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-580">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-581">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-581">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa834-582">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-582">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-583">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-583">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-584">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-584">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-585">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-585">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-586">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-586">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-587">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-587">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-588">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-588">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-589">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-589">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-590">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-590">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-591">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-591">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-592">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-592">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-593">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-593">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-594">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa834-595">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-595">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-596"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-597"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-598">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-599"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-600">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-601">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-601">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-602">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-602">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="fa834-603">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-603">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-604">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-604">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="fa834-605">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-605">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-606">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-606">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-607">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-607">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-608">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-608">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa834-609">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-609">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa834-610">下列範例會將轉換 XML 文件，並將結果輸出至`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="fa834-610">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="fa834-611"><xref:System.Xml.XmlUrlResolver>具有必要認證用來處理所有 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="fa834-611">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-612">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-612">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-613">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-613">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-614">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-614">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-615">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-615">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-616">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-617">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-617">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-618">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-619"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-620"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-621">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-622"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-623">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-624">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-624">This method is now obsolete.</span></span> <span data-ttu-id="fa834-625">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-626">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="fa834-627">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-627">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-628">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-628">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa834-629">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-630">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-630">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-631">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-631">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-632">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-632">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-633">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-633">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="fa834-634">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-634">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-635">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-635">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-636">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-636">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-637">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-637">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-638">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-638">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-639">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-639">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-640">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-640">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-641">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-641">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-642">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-642">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-643">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-643">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-644"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-644">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-645"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-645">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-646">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-646">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-647"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-647"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-648">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-648">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-649">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-650">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-650">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-651">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-651">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-652">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-652">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-653">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-653">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-654">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-654">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-655">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-655">This method is now obsolete.</span></span> <span data-ttu-id="fa834-656">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-656">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-657">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-657">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-658">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-658">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-659">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-659">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-660">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-660">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-661">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-661">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-662">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-663">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-664">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-664">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-665">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-666"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-667"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-668">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-669"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-670">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-671">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-672">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-673">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-674">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-674">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-675">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-676">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="fa834-676">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa834-677">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-677">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-678">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-678">This method is now obsolete.</span></span> <span data-ttu-id="fa834-679">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-679">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-680">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-680">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-681">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-681">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-682">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-682">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-683">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-683">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-684">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-684">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-685">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-685">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-686">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-686">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-687">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-687">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-688">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-688">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-689">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-689">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-690">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-690">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa834-691">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-691">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-692"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-692">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-693"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-693">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-694">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-694">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-695"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-695"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-696">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-696">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-697">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-697">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-698">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-698">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-699">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-699">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-700">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-700">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-701">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-701">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-702">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="fa834-702">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="fa834-703">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-703">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-704">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-704">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-705">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-705">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-706">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-706">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-707">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-707">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-708">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-708">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-709">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-709">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-710">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-710">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-711">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-711">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-712">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-713"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-713">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-714"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-714">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-715">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-715">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-716"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-716"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-717">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-717">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-718">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-718">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-719">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-719">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-720">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-720">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-721">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-721">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-722">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-722">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-723">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-723">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa834-724">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-724">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-725">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-725">This method is now obsolete.</span></span> <span data-ttu-id="fa834-726">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="fa834-726">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="fa834-727">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-727">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-728">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-728">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-729">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-729">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-730">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-730">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-731">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-731">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-732">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-732">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-733">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-733">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-734">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-734">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-735">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-735">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-736">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-736">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-737">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-737">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-738">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-738">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-739">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-739">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-740"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-740">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-741"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-741">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-742">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-742">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-743"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-743"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-744">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-744">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-745">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-745">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-746">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-746">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-747">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-747">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-748">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-748">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-749">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-749">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa834-750">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-750">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa834-751">下列範例會執行 ASP.NET 頁面內的轉換。</span><span class="sxs-lookup"><span data-stu-id="fa834-751">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-752">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-752">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-753">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-753">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-754">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-754">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-755">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-755">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-756">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-756">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-757">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-757">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-758">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-758">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-759">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-759">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-760">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-760">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-761">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-761">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-762">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-762">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-763">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-763">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-764">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-764">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-765"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-765">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-766"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-766">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-767">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-767">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-768"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-768"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-769">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-769">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-770">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-770">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="fa834-771">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="fa834-771">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa834-772">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-772">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="fa834-773">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-773">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-774">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-774">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-775">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-775">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-776">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-776">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa834-777">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-777">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa834-778">下列範例會轉換為 XML 檔案，並將輸出 HTML 字串。</span><span class="sxs-lookup"><span data-stu-id="fa834-778">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="fa834-779"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>類別用來讀取和寫入字串。</span><span class="sxs-lookup"><span data-stu-id="fa834-779">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="fa834-780">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="fa834-780">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-781">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-781">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-782">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-782">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-783">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-783">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-784">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-784">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-785">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-785">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-786">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-786">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="fa834-787">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-787">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-788">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-788">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-789">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-789">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-790">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-790">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-791">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-791">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-792">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-792">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-793">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-793">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-794"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-794">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-795"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-795">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-796">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-796">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-797"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-797"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-798">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-798">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-799">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-799">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-800">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-800">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa834-801">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-801">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="fa834-802">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-802">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="fa834-803">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-803">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-804">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-804">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="fa834-805">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="fa834-805">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="fa834-806">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="fa834-806">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="fa834-807">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="fa834-807">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="fa834-808">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="fa834-808">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="fa834-809">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="fa834-809">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-810">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-810">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-811">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-811">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-812">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-812">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-813">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-813">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="fa834-814">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-814">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-815">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-815">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-816">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-817">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-817">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-818">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-819">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-820">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-821">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-822"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-823"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-824">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-825"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-826">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-827">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-828">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-828">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-829">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-829">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-830">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-830">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-831">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-831">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-832">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-832">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-833">下列範例會載入至 customer 資料表<xref:System.Xml.XmlDataDocument>和執行 XSLT 轉換成 HTML 表提取客戶資料。</span><span class="sxs-lookup"><span data-stu-id="fa834-833">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="fa834-834">此範例會使用 Microsoft SQL Server 2000 的 Northwind 資料庫。</span><span class="sxs-lookup"><span data-stu-id="fa834-834">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="fa834-835">該範例使用 `customers.xsl` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="fa834-835">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-836">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-836">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-837">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-837">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-838">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-838">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-839">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-839">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-840">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-840">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-841">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-841">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-842">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-842">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-843">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-843">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-844">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-844">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-845">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-845">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-846">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-846">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-847"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-847">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-848"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-848">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-849">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-849">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-850"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-850"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-851">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-851">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-852">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-852">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-853">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-853">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-854">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-854">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-855">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-855">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-856">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-856">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-857">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="fa834-857">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="fa834-858">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="fa834-858">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-859">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-859">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-860">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-860">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-861">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-861">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-862">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-862">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="fa834-863">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-863">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="fa834-864">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-864">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="fa834-865">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-865">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="fa834-866">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-866">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="fa834-867">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-867">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="fa834-868">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-868">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa834-869">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-869">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-870"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-870">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-871"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-871">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-872">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-872">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-873"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="fa834-873"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="fa834-874">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="fa834-874">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="fa834-875">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-875">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="fa834-876">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-876">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="fa834-877">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="fa834-877">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="fa834-878">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="fa834-878">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="fa834-879">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="fa834-879">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="fa834-880">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="fa834-880">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="fa834-881">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="fa834-881">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa834-882">下列範例會載入並編輯 XML 文件執行 XSLT 轉換之前。</span><span class="sxs-lookup"><span data-stu-id="fa834-882">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fa834-883">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-883">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="fa834-884">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-884">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="fa834-885">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-885">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="fa834-886">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-886">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa834-887">呼叫 <see cref="T:System.Xml.XmlResolver" /> 方法時，設定用來解析外部資源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-887">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa834-888">轉換期間所使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-888">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="fa834-889">如果設定為<see langword="null" />，XSLT <c>document （)</c>函式不會解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa834-889">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fa834-890"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-890">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="fa834-891"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="fa834-891">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="fa834-892">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="fa834-892">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="fa834-893">在 1.1 版的.NET framework，應用程式的信任層級會決定預設的行為：</span><span class="sxs-lookup"><span data-stu-id="fa834-893">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="fa834-894">`Fully trusted code:` 預設值<xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來解析`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="fa834-894">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="fa834-895">如果驗證才能存取外部資源，使用這個屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="fa834-895">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="fa834-896">`Semi-trusted code:` 屬性設定為`null`，這表示`document()`函式不會解析。</span><span class="sxs-lookup"><span data-stu-id="fa834-896">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="fa834-897">由於完全信任，才能指定<xref:System.Xml.XmlResolver>，這個屬性也無法設定。</span><span class="sxs-lookup"><span data-stu-id="fa834-897">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="fa834-898">使用這個解析程式時 XSLT`document()`函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="fa834-898">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="fa834-899">它將不會用來解決`xsl:import`和`xsl:include`樣式表中所參考的項目。</span><span class="sxs-lookup"><span data-stu-id="fa834-899">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="fa834-900">指定<xref:System.Xml.XmlResolver>要用來解析`xsl:import`並`xsl:include`樣式表中所參考的項目會使用<xref:System.Xml.Xsl.XslTransform.Load%2A>多載，這個方法會接受<xref:System.Xml.XmlResolver>為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="fa834-900">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fa834-901">這個屬性是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="fa834-901">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="fa834-902">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建議的做法。</span><span class="sxs-lookup"><span data-stu-id="fa834-902">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="fa834-903">在此情況下，<xref:System.Xml.XmlResolver>不會快取之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="fa834-903">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>