<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81fa99e134b122c00ba34e5b60f3908753d15c5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39986072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2ca9f-101">使用 XSLT 樣式表轉換 XML 資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-101">Transforms XML data using an XSLT style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-102"><xref:System.Xml.Xsl.XslCompiledTransform>類別是支援 XSLT 1.0 語法的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-102">The <xref:System.Xml.Xsl.XslCompiledTransform> class is an XSLT processor that supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-103">它是新的實作，並包含的效能提升相較於過時<xref:System.Xml.Xsl.XslTransform>類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-103">It is a new implementation and includes performance gains when compared to the obsolete <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="2ca9f-104">結構<xref:System.Xml.Xsl.XslCompiledTransform>類別是非常類似於<xref:System.Xml.Xsl.XslTransform>類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-104">The structure of the <xref:System.Xml.Xsl.XslCompiledTransform> class is very similar to the <xref:System.Xml.Xsl.XslTransform> class.</span></span> <span data-ttu-id="2ca9f-105"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法載入並編譯樣式表，同時<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法執行 XSLT 轉換。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-105">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads and compiles the style sheet, while the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method executes the XSLT transform.</span></span>  
  
 <span data-ttu-id="2ca9f-106">Xslt 支援`document()`函式和內嵌指令碼區塊預設會停用。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-106">Support for the XSLT `document()` function and embedded script blocks are disabled by default.</span></span> <span data-ttu-id="2ca9f-107">可以啟用這些功能，藉由建立<xref:System.Xml.Xsl.XsltSettings>物件，並將其傳遞至<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-107">These features can be enabled by creating an <xref:System.Xml.Xsl.XsltSettings> object and passing it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
 <span data-ttu-id="2ca9f-108">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-108">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="2ca9f-109">安全性考量</span><span class="sxs-lookup"><span data-stu-id="2ca9f-109">Security Considerations</span></span>  
 <span data-ttu-id="2ca9f-110">建立使用 <xref:System.Xml.Xsl.XslCompiledTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-110">When creating an application that uses the <xref:System.Xml.Xsl.XslCompiledTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="2ca9f-111">依預設會停用 XSLT 指令碼。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-111">XSLT scripting is disabled by default.</span></span> <span data-ttu-id="2ca9f-112">僅當需要指令碼支援且在完全受信任的環境中運作時，才應啟用 XSLT 指令碼。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-112">XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</span></span>  
  
-   <span data-ttu-id="2ca9f-113">依預設會停用 XSLT `document()` 函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-113">The XSLT `document()` function is disabled by default.</span></span> <span data-ttu-id="2ca9f-114">如果您啟用 `document()` 函式，則藉由傳遞 <xref:System.Xml.XmlSecureResolver> 物件至 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，限制可存取的資源。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-114">If you enable the `document()` function, restrict the resources that can be accessed by passing an <xref:System.Xml.XmlSecureResolver> object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
-   <span data-ttu-id="2ca9f-115">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-115">Extension objects are enabled by default.</span></span> <span data-ttu-id="2ca9f-116">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-116">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="2ca9f-117">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-117">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="2ca9f-118">居心不良的使用者會利用這一點，藉由提供您資料或樣式表，使您因執行他們而導致系統持續處理，直到電腦資源不足，來進行攻擊。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-118">A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="2ca9f-119">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-119">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="2ca9f-120">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-120">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="2ca9f-121">不啟用指令碼或 `document()` 函式 (除非樣式表來自信任的來源)，不接受來自不受信任來源的 <xref:System.Xml.Xsl.XslCompiledTransform> 物件、XSLT 樣式表或 XML 來源資料，可減輕這些安全性問題。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-121">These security issues can be mitigated by not enabling scripting or the `document()` function unless the style sheet comes from a trusted source, and by not accepting <xref:System.Xml.Xsl.XslCompiledTransform> objects, XSLT style sheets, or XML source data from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-122">下列範例會執行轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-122">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="2ca9f-123">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-123">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="2ca9f-124">
        <see cref="T:System.Xml.Xsl.XslCompiledTransform" />載入之後，物件是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-124">The <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object is thread safe once it has been loaded.</span>
      </span>
      <span data-ttu-id="2ca9f-125">換句話說，在後<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />順利完成方法時，<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />可以同時呼叫方法，從多個執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-125">In other words, after the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has successfully completed, the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method can be called simultaneously from multiple threads.</span>
      </span>
      <span data-ttu-id="2ca9f-126">如果<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法時的一個執行緒中呼叫一次<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />方法呼叫另一個執行緒，<see cref="T:System.Xml.Xsl.XslCompiledTransform" />物件完成執行<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />呼叫繼續使用舊的狀態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-126">If the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is called again in one thread while the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> method is being called in another thread, the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> object finishes executing the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> call by continuing to use the old state.</span>
      </span>
      <span data-ttu-id="2ca9f-127">會使用新的狀態時<see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法成功完成。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-127">The new state is used when the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method successfully completes.</span>
      </span>
      <span data-ttu-id="2ca9f-128">
        <block subset="none" type="note">
          <para>
            <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />方法不是從多個執行緒同時呼叫時的安全執行緒。  </para>
        </block>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="2ca9f-128">
          <block subset="none" type="note">
            <para> The <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method is not thread safe when called simultaneously from multiple threads.  </para>
          </block>
        </span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-129">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-129">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-130">初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-130">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug">
          <span data-ttu-id="2ca9f-131">
            <see langword="true" /> 表示產生偵錯資訊，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-131">
              <see langword="true" /> to generate debug information; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2ca9f-132">將它設為 <see langword="true" />，可讓您用 Microsoft Visual Studio 偵錯工具對樣式表進行偵錯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-132">Setting this to <see langword="true" /> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-133">使用指定的偵錯設定，初始化 <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-133">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> class with the specified debug setting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-134">若要逐步執行程式碼和偵錯樣式表，就必須符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-134">The following conditions must be met in order to step into the code and debug the style sheet:</span></span>  
  
-   <span data-ttu-id="2ca9f-135">`enableDebug` 參數設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-135">The `enableDebug` parameter is set to `true`.</span></span>  
  
-   <span data-ttu-id="2ca9f-136">樣式表傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法，做為 URI 或實作<xref:System.Xml.XmlReader>可實作類別<xref:System.Xml.IXmlLineInfo>介面。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-136">The style sheet is passed to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method either as a URI, or an implementation of the <xref:System.Xml.XmlReader> class that implements the <xref:System.Xml.IXmlLineInfo> interface.</span></span> <span data-ttu-id="2ca9f-137"><xref:System.Xml.IXmlLineInfo>介面的實作上所有的文字剖析<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-137">The <xref:System.Xml.IXmlLineInfo> interface is implemented on all text-parsing <xref:System.Xml.XmlReader> objects.</span></span>  
  
     <span data-ttu-id="2ca9f-138">換句話說，如果使用來載入樣式表<xref:System.Xml.XPath.IXPathNavigable>物件，例如<xref:System.Xml.XmlDocument>或<xref:System.Xml.XPath.XPathDocument>，或有<xref:System.Xml.XmlReader>未實作的實作<xref:System.Xml.IXmlLineInfo>介面，您無法偵錯樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-138">In other words, if the style sheet is loaded using an <xref:System.Xml.XPath.IXPathNavigable> object, such as an <xref:System.Xml.XmlDocument> or <xref:System.Xml.XPath.XPathDocument>, or an <xref:System.Xml.XmlReader> implementation that does not implement the <xref:System.Xml.IXmlLineInfo> interface, you cannot debug the style sheet.</span></span>  
  
-   <span data-ttu-id="2ca9f-139"><xref:System.Xml.XmlResolver>用來載入樣式表是以檔案為基礎<xref:System.Xml.XmlResolver>，例如<xref:System.Xml.XmlUrlResolver>(這是預設<xref:System.Xml.XmlResolver>供<xref:System.Xml.Xsl.XslCompiledTransform>類別)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-139">The <xref:System.Xml.XmlResolver> used to load the style sheet is a file-based <xref:System.Xml.XmlResolver>, such as the <xref:System.Xml.XmlUrlResolver> (this is the default <xref:System.Xml.XmlResolver> used by the <xref:System.Xml.Xsl.XslCompiledTransform> class).</span></span>  
  
-   <span data-ttu-id="2ca9f-140">樣式表位於本機電腦上或內部網路上。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-140">The style sheet is located on the local machine or on the intranet.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-141">下列範例示範如何啟用 XSLT 偵錯。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-141">The following example shows how to enable XSLT debugging.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="debug" Type="System.Boolean" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2ca9f-142">
            <see cref="T:System.Xml.XmlReader" />，位於要編譯的樣式表開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-142">An <see cref="T:System.Xml.XmlReader" /> positioned at the beginning of the style sheet to be compiled.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="2ca9f-143">要套用至樣式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-143">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to be applied to the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-144">如果它是 <see langword="null" />，則會套用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-144">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> will be applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="2ca9f-145">
            <see cref="T:System.Xml.XmlResolver" /> 會用來解析 <see langword="xsl:import" /> 和 <see langword="xsl:include" /> 項目中所參考的樣式表模組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-145">The <see cref="T:System.Xml.XmlResolver" /> use to resolve style sheet modules referenced in <see langword="xsl:import" /> and <see langword="xsl:include" /> elements.</span>
          </span>
          <span data-ttu-id="2ca9f-146">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-146">If this is <see langword="null" />, external resources will not be resolved.</span>
          </span>
        </param>
        <param name="debug">
          <span data-ttu-id="2ca9f-147">將它設定為 <see langword="true" />，可讓您用偵錯工具對樣式表進行偵錯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-147">Setting this to <see langword="true" /> enables debugging the style sheet with a debugger.</span>
          </span>
        </param>
        <param name="typeBuilder">
          <span data-ttu-id="2ca9f-148">用於樣式表編譯的 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-148">The <see cref="T:System.Reflection.Emit.TypeBuilder" /> used for the style sheet compilation.</span>
          </span>
          <span data-ttu-id="2ca9f-149">所提供的 TypeBuilder 用於產生結果類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-149">The provided TypeBuilder is used to generate the resulting type.</span>
          </span>
        </param>
        <param name="scriptAssemblyPath">
          <span data-ttu-id="2ca9f-150">為 <see langword="msxsl:script" /> 項目所產生組件的基底路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-150">The base path for the assemblies generated for <see langword="msxsl:script" /> elements.</span>
          </span>
          <span data-ttu-id="2ca9f-151">如果只產生一個指令碼組件，這個參數會指定該組件的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-151">If only one script assembly is generated, this parameter specifies the path for that assembly.</span>
          </span>
          <span data-ttu-id="2ca9f-152">在多個指令碼組件的情況下，相異後置字元會附加至檔案名稱，確保組件名稱唯一性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-152">In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-153">將 XSLT 樣式表編譯為指定的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-153">Compiles an XSLT style sheet to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2ca9f-154">
            <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> 物件，包含表示編譯結果的編譯器錯誤和警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-154">A <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> object containing compiler errors and warnings that indicate the results of the compilation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-155">`xsltc.exe`工具是一個包裝函式<xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-155">The `xsltc.exe` tool is a wrapper around the <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method.</span></span> <span data-ttu-id="2ca9f-156">編譯樣式表與`xsltc.exe`會符合運用使用已編譯的樣式表的大部分應用程式的需求。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-156">Compiling style sheets with the `xsltc.exe` will meet the demands of most applications that leverage the use of compiled style sheets.</span></span> <span data-ttu-id="2ca9f-157"><xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>建置自訂的編譯工具時，就應該使用方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-157">The <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A> method should be used when building custom compilation tools.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-158">編譯樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-158">Compiles the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-159">雖然 <xref:System.Xml.Xsl.XslCompiledTransform> 類別的整體效能優於 <xref:System.Xml.Xsl.XslTransform> 類別，但是在轉換時第一次呼叫 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 類別的 <xref:System.Xml.Xsl.XslCompiledTransform> 方法之執行速度可能會比 <xref:System.Xml.Xsl.XslTransform.Load%2A> 類別的 <xref:System.Xml.Xsl.XslTransform> 方法慢許多。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-159">Although the overall performance of the <xref:System.Xml.Xsl.XslCompiledTransform> class is better than the <xref:System.Xml.Xsl.XslTransform> class, the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslCompiledTransform> class might perform more slowly than the <xref:System.Xml.Xsl.XslTransform.Load%2A> method of the <xref:System.Xml.Xsl.XslTransform> class the first time it is called on a transformation.</span></span> <span data-ttu-id="2ca9f-160">這是因為在載入之前必須先編譯 XSLT 檔案。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-160">This is because the XSLT file must be compiled before it is loaded.</span></span> <span data-ttu-id="2ca9f-161">如需詳細資訊，請參閱下列部落格文章：[XslCompiledTransform 比 XslTransform 還慢嗎？](http://go.microsoft.com/fwlink/?LinkId=130590) (英文)</span><span class="sxs-lookup"><span data-stu-id="2ca9f-161">For more information, see the following blog post: [XslCompiledTransform Slower than XslTransform?](http://go.microsoft.com/fwlink/?LinkId=130590)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-162">在偵錯模式中編譯的 XSLT 與在發行模式中編譯的 XSLT 之間有一些差異。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-162">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="2ca9f-163">在某些情況下，偵測模式中編譯的樣式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期間將不會擲回錯誤，但是稍後會在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期間失敗。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-163">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="2ca9f-164">在發行模式中編譯的相同樣式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期間將會失敗。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-164">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="2ca9f-165">這類行為範例的情況是在將非節點集型別的變數指派給需要節點集的運算式時。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-165">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="2ca9f-166">樣式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-166">The URI of the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-167">載入並編譯位於指定之 URI 的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-167">Loads and compiles the style sheet located at the specified URI.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-168"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-168">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-169">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-169">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="2ca9f-170">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-170">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="2ca9f-171"><xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來解析樣式表 URI，並處理任何`xsl:import`或`xsl:include`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-171">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the style sheet URI, and process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="2ca9f-172"><xref:System.Xml.XmlReader>預設設定用來載入樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-172">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="2ca9f-173">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-173">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-174">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-174">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
-   <span data-ttu-id="2ca9f-175">`document()`函式會停用。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-175">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="2ca9f-176">不支援內嵌指令碼。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-176">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="2ca9f-177">您可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>多載來指定<xref:System.Xml.XmlResolver>使用必要的驗證認證，或指定不同的 XSLT 設定。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-177">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-178">下列範例會執行轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-178">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-179">
            <paramref name="stylesheetUri" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-179">The <paramref name="stylesheetUri" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-180">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-180">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2ca9f-181">找不到樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-181">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-182">
            <paramref name="stylesheetUri" /> 值包含找不到的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-182">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-183">無法保留 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-183">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-184">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-184">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-185">處理這個要求時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-185">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-186">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-186">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-187">載入樣式表時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-187">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet">
          <span data-ttu-id="2ca9f-188">包含已編譯樣式表的類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-188">The name of the class that contains the compiled style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-189">這通常是樣式表名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-189">This is usually the name of the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-190">除非另有指定，否則 xsltc.exe 工具會將樣式表名稱使用於類別和組件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-190">Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-191">載入已編譯的樣式表，此樣式表是使用 [XSLT 編譯器 (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md)所建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-191">Loads the compiled style sheet that was created using the [XSLT Compiler (xsltc.exe)](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-192">Xsltc.exe 工具用來編譯樣式表，並從樣式表產生組件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-192">The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</span></span> <span data-ttu-id="2ca9f-193"><xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法會從組件載入已編譯的樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-193">The <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method loads the compiled style sheet from the assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-194">您也必須在您的應用程式中包含 XSLT 組件，做為參考。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-194">You must also include the XSLT assembly as a reference in your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-195">下列範例會示範如何從 XSLT 組件載入已編譯的樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-195">The following example shows how to load a compiled style sheet from an XSLT assembly.</span></span> <span data-ttu-id="2ca9f-196">此範例假設 xsltc.exe 工具用來建立名為類別，名為 bookOrders bookOrders.dll 組件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-196">The example assumes that the xsltc.exe tool was used to create an assembly named bookOrders.dll with a class named bookOrders.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-197">您不必編譯程式碼時，參考 XSLT 組件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-197">You have to reference the XSLT assembly when compiling the code.</span></span> <span data-ttu-id="2ca9f-198">例如，`csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-198">For example, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.</span></span>  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2ca9f-199">包含樣式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-199">An <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-200">編譯包含在 <see cref="T:System.Xml.XmlReader" /> 中的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-200">Compiles the style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-201"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-201">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-202">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-202">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="2ca9f-203">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-203">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="2ca9f-204">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-204">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="2ca9f-205">之後<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-205">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="2ca9f-206">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-206">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="2ca9f-207">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-207">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="2ca9f-208"><xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來處理任何`xsl:import`或`xsl:include`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-208">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="2ca9f-209">`document()`函式會停用。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-209">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="2ca9f-210">不支援內嵌指令碼。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-210">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="2ca9f-211">您可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29>多載來指定<xref:System.Xml.XmlResolver>使用必要的驗證認證，或指定不同的 XSLT 設定。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-211">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-212">下列範例會載入樣式表中所包含<xref:System.Xml.XmlReader>物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-212">The following example loads a style sheet contained in an <xref:System.Xml.XmlReader> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-213">
            <paramref name="stylesheet" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-213">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-214">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-214">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2ca9f-215">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-215">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-216">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或包含樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-216">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-217">編譯包含在 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件中的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-217">Compiles the style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-218"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-218">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-219">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-219">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="2ca9f-220">這個方法有下列行為：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-220">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="2ca9f-221"><xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來處理任何`xsl:import`或`xsl:include`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-221">An <xref:System.Xml.XmlUrlResolver> with no user credentials is used to process any `xsl:import` or `xsl:include` elements.</span></span>  
  
-   <span data-ttu-id="2ca9f-222">`document()`函式會停用。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-222">The `document()` function is disabled.</span></span>  
  
-   <span data-ttu-id="2ca9f-223">不支援內嵌指令碼。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-223">Embedded scripts are not supported.</span></span>  
  
 <span data-ttu-id="2ca9f-224">您可以使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>多載來指定<xref:System.Xml.XmlResolver>使用必要的驗證認證，或指定不同的 XSLT 設定。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-224">You can use the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> overload to specify an <xref:System.Xml.XmlResolver> with the necessary authentication credentials, or to specify different XSLT settings.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-225">下列範例會載入樣式表中所包含<xref:System.Xml.XPath.XPathDocument>物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-225">The following example loads a style sheet contained in an <xref:System.Xml.XPath.XPathDocument> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-226">
            <paramref name="stylesheet" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-226">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-227">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-227">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod">
          <span data-ttu-id="2ca9f-228">
            <see cref="T:System.Reflection.MethodInfo" /> 物件，表示已編譯樣式表之編譯器產生的 <c>execute</c> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-228">A <see cref="T:System.Reflection.MethodInfo" /> object representing the compiler-generated <c>execute</c> method of the compiled style sheet.</span>
          </span>
        </param>
        <param name="queryData">
          <span data-ttu-id="2ca9f-229">
            <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> 方法產生的已編譯樣式表中，<c>staticData</c> 欄位中序列化資料結構的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-229">A byte array of serialized data structures in the <c>staticData</c> field of the compiled style sheet as generated by the <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" /> method.</span>
          </span>
        </param>
        <param name="earlyBoundTypes">
          <span data-ttu-id="2ca9f-230">類型陣列，儲存在已編譯樣式表之編譯器產生的 <c>ebTypes</c> 欄位中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-230">An array of types stored in the compiler-generated <c>ebTypes</c> field of the compiled style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-231">從使用 <see langword="XSLTC.exe" /> 公用程式編譯的樣式表中載入方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-231">Loads a method from a style sheet compiled using the <see langword="XSLTC.exe" /> utility.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-232">這個方法可接受的表單中的已編譯的樣式表<xref:System.Reflection.MethodInfo>物件、 位元組陣列和型別陣列。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-232">This method accepts a compiled style sheet in the form of a <xref:System.Reflection.MethodInfo> object, a byte array, and a type array.</span></span> <span data-ttu-id="2ca9f-233"><xref:System.Reflection.Emit.DynamicMethod> 物件可用來允許已編譯的樣式表方法都是捨棄時<xref:System.Xml.Xsl.XslCompiledTransform>收回物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-233"><xref:System.Reflection.Emit.DynamicMethod> objects may be used to allow compiled style sheet methods to be discarded when the <xref:System.Xml.Xsl.XslCompiledTransform> object is reclaimed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-234">下列程式碼範例會使用<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>載入已編譯的樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-234">The code example below uses the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> to load a compiled style sheet.</span></span> <span data-ttu-id="2ca9f-235">轉換可減少的值`Price`百分之 10 的項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-235">The transformation reduces the value of the `Price` element by ten percent.</span></span>  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-236">建置此範例中使用 [轉換] 組件時使用 xsltc.exe 公用程式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-236">The "Transform" assembly used in this example was built using the xsltc.exe utility.</span></span> <span data-ttu-id="2ca9f-237">如需使用這個命令列工具的詳細資訊，請參閱 <<c0> [ 如何： 使用組件執行 XSLT 轉換](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-237">For detailed information on using this command line tool, see [How to: Perform an XSLT Transformation by Using an Assembly](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).</span></span>  
  
 <span data-ttu-id="2ca9f-238">上述程式碼範例會使用下列轉換：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-238">The code example above uses the following transformation:</span></span>  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"  
  xmlns:msxsl="urn:schemas-microsoft-com:xslt"  
  xmlns:user="urn:my-scripts">  
  <msxsl:script language="C#" implements-prefix="user">  
    <![CDATA[  
  public double modifyPrice(double price){  
    price*=0.9;  
    return price;  
  }  
  ]]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">
          <span data-ttu-id="2ca9f-239">樣式表的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-239">The URI of the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="2ca9f-240">套用至樣式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-240">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-241">如果這是 <see langword="null" />，則會套用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-241">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="2ca9f-242">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析樣式表 URI 和 XSLT <c>import</c> 與 <c>include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-242">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the style sheet URI and any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-243">載入並編譯 URI 所指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-243">Loads and compiles the XSLT style sheet specified by the URI.</span>
          </span>
          <span data-ttu-id="2ca9f-244">
            <see cref="T:System.Xml.XmlResolver" /> 會解析所有 XSLT <c>import</c> 或 <c>include</c> 元素，且 XSLT 設定會決定樣式表的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-244">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-245"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-245">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-246">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-246">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="2ca9f-247"><xref:System.Xml.XmlReader>預設設定用來載入樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-247">An <xref:System.Xml.XmlReader> with default settings is used to load the style sheet.</span></span> <span data-ttu-id="2ca9f-248">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-248">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-249">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-249">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-250">下列範例會載入樣式表儲存在網路資源。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-250">The following example loads a style sheet that is stored on a network resource.</span></span> <span data-ttu-id="2ca9f-251"><xref:System.Xml.XmlSecureResolver> 物件指定存取樣式表所需的認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-251">An <xref:System.Xml.XmlSecureResolver> object specifies the credentials necessary to access the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-252">
            <paramref name="stylesheetUri" /> 或 <paramref name="stylesheetResolver" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-252">The <paramref name="stylesheetUri" /> or <paramref name="stylesheetResolver" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-253">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-253">The style sheet contains an error.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2ca9f-254">找不到樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-254">The style sheet cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-255">
            <paramref name="stylesheetUri" /> 值包含找不到的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-255">The <paramref name="stylesheetUri" /> value includes a filename or directory that cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-256">無法保留 <paramref name="stylesheetUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-256">The <paramref name="stylesheetUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-257">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-257">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-258">處理這個要求時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-258">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-259">
            <paramref name="stylesheetUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-259">
              <paramref name="stylesheetUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-260">載入樣式表時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-260">There was a parsing error loading the style sheet.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2ca9f-261">包含樣式表的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-261">The <see cref="T:System.Xml.XmlReader" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="2ca9f-262">套用至樣式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-262">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-263">如果這是 <see langword="null" />，則會套用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-263">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="2ca9f-264">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>import</c> 和 <c>include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-264">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="2ca9f-265">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-265">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-266">編譯包含在 <see cref="T:System.Xml.XmlReader" /> 中的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-266">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="2ca9f-267">
            <see cref="T:System.Xml.XmlResolver" /> 會解析所有 XSLT <c>import</c> 或 <c>include</c> 元素，且 XSLT 設定會決定樣式表的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-267">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-268"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-268">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-269">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-269">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
 <span data-ttu-id="2ca9f-270">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-270">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="2ca9f-271">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-271">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="2ca9f-272">之後<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法完成，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-272">After the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method completes, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="2ca9f-273">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-273">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-274">下列範例會載入樣式表，並啟用 XSLT 指令碼的支援。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-274">The following example loads a style sheet and enables support for XSLT scripting.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-275">
            <paramref name="stylesheet" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-275">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-276">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-276">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="2ca9f-277">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-277">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-278">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或包含樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-278">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the style sheet.</span>
          </span>
        </param>
        <param name="settings">
          <span data-ttu-id="2ca9f-279">套用至樣式表的 <see cref="T:System.Xml.Xsl.XsltSettings" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-279">The <see cref="T:System.Xml.Xsl.XsltSettings" /> to apply to the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-280">如果這是 <see langword="null" />，則會套用 <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> 設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-280">If this is <see langword="null" />, the <see cref="P:System.Xml.Xsl.XsltSettings.Default" /> setting is applied.</span>
          </span>
        </param>
        <param name="stylesheetResolver">
          <span data-ttu-id="2ca9f-281">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>import</c> 和 <c>include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-281">The <see cref="T:System.Xml.XmlResolver" /> used to resolve any style sheets referenced in XSLT <c>import</c> and <c>include</c> elements.</span>
          </span>
          <span data-ttu-id="2ca9f-282">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-282">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-283">編譯包含在 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-283">Compiles the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="2ca9f-284">
            <see cref="T:System.Xml.XmlResolver" /> 會解析所有 XSLT <c>import</c> 或 <c>include</c> 元素，且 XSLT 設定會決定樣式表的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-284">The <see cref="T:System.Xml.XmlResolver" /> resolves any XSLT <c>import</c> or <c>include</c> elements and the XSLT settings determine the permissions for the style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-285"><xref:System.Xml.Xsl.XslCompiledTransform>類別支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-285">The <xref:System.Xml.Xsl.XslCompiledTransform> class supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="2ca9f-286">XSLT 樣式表必須使用`http://www.w3.org/1999/XSL/Transform`命名空間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-286">The XSLT style sheet must use the `http://www.w3.org/1999/XSL/Transform` namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-287">下列範例會載入樣式表。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-287">The following example loads a style sheet.</span></span> <span data-ttu-id="2ca9f-288"><xref:System.Xml.XmlSecureResolver>物件包含存取任何所需的認證`import`或`include`樣式表中找到的項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-288">The <xref:System.Xml.XmlSecureResolver> object contains the credentials necessary to access any `import` or `include` elements found in the style sheet.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-289">
            <paramref name="stylesheet" /> 值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-289">The <paramref name="stylesheet" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-290">此樣式表包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-290">The style sheet contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-291">取得 <see cref="T:System.Xml.XmlWriterSettings" /> 物件，其中包含衍生自樣式表之 <c>xsl:output</c> 元素的輸出資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-291">Gets an <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ca9f-292">唯讀<see cref="T:System.Xml.XmlWriterSettings" />物件，其中包含輸出資訊衍生自<c>xsl: output</c>樣式表的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-292">A read-only <see cref="T:System.Xml.XmlWriterSettings" /> object that contains the output information derived from the <c>xsl:output</c> element of the style sheet.</span>
          </span>
          <span data-ttu-id="2ca9f-293">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-293">This value can be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-294">在成功呼叫之後填入這個屬性<xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-294">This property is populated after a successful call to the <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> method.</span></span> <span data-ttu-id="2ca9f-295">它包含資訊衍生自`xsl:output`已編譯的樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-295">It contains information derived from the `xsl:output` element of a compiled style sheet.</span></span> <span data-ttu-id="2ca9f-296">這<xref:System.Xml.XmlWriterSettings>物件可以傳遞給<xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>方法，以建立<xref:System.Xml.XmlWriter>您要輸出的物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-296">This <xref:System.Xml.XmlWriterSettings> object can be passed to the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method to create the <xref:System.Xml.XmlWriter> object to which you want to output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-297">下列範例示範如何使用<xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A>屬性，以建立<xref:System.Xml.XmlWriter>將文字寫入至主控台的物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-297">The following example shows how to use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to create an <xref:System.Xml.XmlWriter> object that writes text to the console.</span></span>  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 <span data-ttu-id="2ca9f-298">此範例會使用`books.xml`和`outputConsole.xsl`檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-298">The example uses the `books.xml` and `outputConsole.xsl` files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-299">取得 <see cref="T:System.CodeDom.Compiler.TempFileCollection" />，包含成功呼叫 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法後，在磁碟上產生的暫存檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-299">Gets the <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk after a successful call to the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2ca9f-300">
            <see cref="T:System.CodeDom.Compiler.TempFileCollection" />，包含磁碟上產生的暫存檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-300">The <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> that contains the temporary files generated on disk.</span>
          </span>
          <span data-ttu-id="2ca9f-301">如果尚未成功呼叫 <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> 方法，或尚未啟用偵錯，則這個值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-301">This value is <see langword="null" /> if the <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> method has not been successfully called, or if debugging has not been enabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-302">這個屬性會識別 XSLT 期間所產生的檔案處理。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-302">This property identifies the files that were generated during XSLT processing.</span></span> <span data-ttu-id="2ca9f-303">檔案會放在暫存目錄 （%TEMP%環境變數所指定） 您可以刪除這些檔案在 XSLT 處理完成後。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-303">The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-304">下列範例會將暫存檔的名稱寫入主控台。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-304">The following example writes the names of temporary files to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-305">只有在與載入樣式表時，才會建立暫存檔案\<msxsl: script > 區塊。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-305">Temporary files are created only when loading style sheets with \<msxsl:script> blocks.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2ca9f-306">執行 XSLT 轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-306">Executes the XSLT transformation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2ca9f-307">在偵錯模式中編譯的 XSLT 與在發行模式中編譯的 XSLT 之間有一些差異。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-307">There are differences between XSLT compiled in Debug mode and XSLT compiled in Release mode.</span></span> <span data-ttu-id="2ca9f-308">在某些情況下，偵測模式中編譯的樣式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期間將不會擲回錯誤，但是稍後會在 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 期間失敗。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-308">In some situations, style sheets compiled in Debug mode will not throw errors during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, but will later fail during <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.</span></span> <span data-ttu-id="2ca9f-309">在發行模式中編譯的相同樣式表在 <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> 期間將會失敗。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-309">The same style sheet compiled in Release mode will fail during <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.</span></span> <span data-ttu-id="2ca9f-310">這類行為範例的情況是在將非節點集型別的變數指派給需要節點集的運算式時。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-310">An example of such behavior is when a variable that is not of a node-set type is assigned to an expression where a node-set is required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="2ca9f-311">輸入文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-311">The URI of the input document.</span>
          </span>
        </param>
        <param name="resultsFile">
          <span data-ttu-id="2ca9f-312">輸出檔案的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-312">The URI of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-313">使用 URI 所指定的輸入文件執行轉換，並將結果輸出至檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-313">Executes the transform using the input document specified by the URI and outputs the results to a file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-314">這個方法會使用預設值<xref:System.Xml.XmlUrlResolver>與不具使用者認證，若要解決的輸入和輸出文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-314">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input and output documents.</span></span> <span data-ttu-id="2ca9f-315">如果任何這些資源位於網路資源需要驗證，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-315">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-316"><xref:System.Xml.XmlReader>與預設設定用來載入輸入文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-316">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="2ca9f-317">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-317">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-318">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-318">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-319">下列範例會執行轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-319">The following example executes a transform and outputs to a file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 <span data-ttu-id="2ca9f-320">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="2ca9f-320">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-321">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-321">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-322">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-322">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="2ca9f-323">找不到輸入文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-323">The input document cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-324">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值包含找不到的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-324">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-325">無法解析 <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-325">The <paramref name="inputUri" /> or <paramref name="resultsFile" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-326">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-326">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-327">處理要求時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-327">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-328">
            <paramref name="inputUri" /> 或 <paramref name="resultsFile" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-328">
              <paramref name="inputUri" /> or <paramref name="resultsFile" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-329">載入輸入文件時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-329">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="2ca9f-330">輸入文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-330">The URI of the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-331">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-331">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-332">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-332">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-333">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-333">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-334">使用 URI 所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-334">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-335">這個方法會使用預設值<xref:System.Xml.XmlUrlResolver>解析的輸入文件和 XSLT 的任何執行個體不具使用者認證與`document()`樣式表中找到的函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-335">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="2ca9f-336">如果任何這些資源位於網路資源需要驗證，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-336">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-337"><xref:System.Xml.XmlReader>與預設設定用來載入輸入文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-337">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="2ca9f-338">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-338">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-339">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-339">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="2ca9f-340">此方法不支援`xsl:strip-space`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-340">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="2ca9f-341">如果您已編譯的樣式表包含`xsl:strip-space`項目，您必須使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>多載，這個方法會接受<xref:System.Xml.XmlReader>做為輸入引數。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-341">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-342">下列範例會執行 XSLT 轉換，並將輸出至<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-342">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-343">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-343">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-344">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-344">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-345">找不到 <paramref name="inputUri" /> 值所包含的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-345">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-346">無法保留 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-346">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-347">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-347">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-348">處理這個要求時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-348">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-349">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-349">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-350">載入輸入文件時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-350">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-351">包含輸入文件的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-351">The <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-352">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-352">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-353">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-353">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-354">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-354">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-355">使用 <see cref="T:System.Xml.XmlReader" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-355">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-356">如果 XSLT`document()`啟用函式時，就會解析使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-356">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-357">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-357">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-358">下列範例會將轉換 books.xml 檔的第一本書。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-358">The following example transforms the first book in the books.xml file.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-359">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-359">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-360">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-360">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-361">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-361">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-362">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或是包含要轉換的資料的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-362">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-363">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-363">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-364">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-364">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-365">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-365">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-366">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-366">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-367">如果 XSLT`document()`啟用函式時，就會解析使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-367">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-368">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-368">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-369">此方法不支援`xsl:strip-space`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-369">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="2ca9f-370">如果您已編譯的樣式表包含`xsl:strip-space`項目，您必須使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>多載，這個方法會接受<xref:System.Xml.XmlReader>做為輸入引數。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-370">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="2ca9f-371"><xref:System.Xml.XPath.IXPathNavigable> 介面是在 <xref:System.Xml.XmlNode> 及 <xref:System.Xml.XPath.XPathDocument> 類別中實作的。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-371">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="2ca9f-372">這些類別代表 XML 資料的記憶體中快取。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-372">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="2ca9f-373"><xref:System.Xml.XmlNode> 類別是以 W3C 文件物件模型 (DOM) 為基礎，並包含編輯功能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-373">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="2ca9f-374"><xref:System.Xml.XPath.XPathDocument> 類別是以 XPath 資料模型為基礎的唯讀資料存放區。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-374">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="2ca9f-375"><xref:System.Xml.XPath.XPathDocument> 是建議用於 XSLT 處理的類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-375"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="2ca9f-376">與 <xref:System.Xml.XmlNode> 類別相比，它可提供更高的效能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-376">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="2ca9f-377">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-377">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2ca9f-378">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-378">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2ca9f-379">若要轉換節點片段，您必須建立只包含節點片段的物件，並將該物件傳遞至 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-379">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="2ca9f-380">如需詳細資訊，請參閱[如何：轉換節點片段](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-380">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-381">下列範例會執行 XSLT 轉換，並將輸出至<xref:System.Xml.XmlWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-381">The following example executes an XSLT transformation and outputs to an <xref:System.Xml.XmlWriter> object.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-382">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-382">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-383">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-383">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="2ca9f-384">輸入文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-384">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-385">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-385">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-386">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-386">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-387">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-387">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-388">使用 URI 所指定的輸入文件執行轉換，並將結果輸出至資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-388">Executes the transform using the input document specified by the URI and outputs the results to stream.</span>
          </span>
          <span data-ttu-id="2ca9f-389">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-389">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-390">這個方法會使用預設值<xref:System.Xml.XmlUrlResolver>解析的輸入文件和 XSLT 的任何執行個體不具使用者認證與`document()`樣式表中找到的函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-390">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="2ca9f-391">如果任何這些資源位於網路資源需要驗證，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-391">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-392"><xref:System.Xml.XmlReader>與預設設定用來載入輸入文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-392">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="2ca9f-393">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-393">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-394">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-394">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-395">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-395">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-396">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-396">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-397">找不到 <paramref name="inputUri" /> 值所包含的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-397">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-398">無法保留 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-398">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-399">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-399">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-400">處理要求時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-400">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-401">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-401">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-402">載入輸入文件時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-402">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="2ca9f-403">輸入文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-403">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-404">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-404">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-405">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-405">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-406">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-406">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-407">使用 URI 所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-407">Executes the transform using the input document specified by the URI and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-408">這個方法會使用預設值<xref:System.Xml.XmlUrlResolver>解析的輸入文件和 XSLT 的任何執行個體不具使用者認證與`document()`樣式表中找到的函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-408">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="2ca9f-409">如果任何這些資源位於網路資源需要驗證，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-409">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-410"><xref:System.Xml.XmlReader>與預設設定用來載入輸入文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-410">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="2ca9f-411">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-411">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-412">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-412">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-413">下列範例會執行 XSLT 轉換，並將輸出字串。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-413">The following example executes an XSLT transformation and outputs a string.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-414">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-414">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-415">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-415">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-416">找不到 <paramref name="inputUri" /> 值所包含的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-416">The <paramref name="inputUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-417">無法保留 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-417">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-418">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-418">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-419">處理要求時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-419">An error occurred while processing the request</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-420">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-420">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-421">載入輸入文件時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-421">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">
          <span data-ttu-id="2ca9f-422">輸入文件的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-422">The URI of the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-423">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-423">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-424">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-424">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-425">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-425">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-426">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-426">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-427">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-427">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-428">使用 URI 所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-428">Executes the transform using the input document specified by the URI and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-429">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-429">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-430">這個方法會使用預設值<xref:System.Xml.XmlUrlResolver>解析的輸入文件和 XSLT 的任何執行個體不具使用者認證與`document()`樣式表中找到的函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-430">This method uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials to resolve the input document and any instances of the XSLT `document()` function found in the style sheet.</span></span> <span data-ttu-id="2ca9f-431">如果任何這些資源位於網路資源需要驗證，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-431">If any of these resources are located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-432"><xref:System.Xml.XmlReader>與預設設定用來載入輸入文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-432">An <xref:System.Xml.XmlReader> with default settings is used to load the input document.</span></span> <span data-ttu-id="2ca9f-433">在停用 DTD 處理<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-433">DTD processing is disabled on the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="2ca9f-434">如果您需要 DTD 處理，建立<xref:System.Xml.XmlReader>透過這項功能已啟用，並將它傳遞給<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-434">If you require DTD processing, create an <xref:System.Xml.XmlReader> with this feature enabled, and pass it to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-435">下列範例會使用<xref:System.Xml.Xsl.XsltArgumentList>物件來建立參數，代表目前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-435">The following example uses an <xref:System.Xml.Xsl.XsltArgumentList> object to create a parameter representing the current date and time.</span></span>  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 <span data-ttu-id="2ca9f-436">此範例會使用下列的兩個資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-436">The example uses the following two data files as input.</span></span>  
  
 <span data-ttu-id="2ca9f-437">order.xml</span><span class="sxs-lookup"><span data-stu-id="2ca9f-437">order.xml</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 <span data-ttu-id="2ca9f-438">order.xsl</span><span class="sxs-lookup"><span data-stu-id="2ca9f-438">order.xsl</span></span>  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-439">
            <paramref name="inputUri" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-439">The <paramref name="inputUri" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-440">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-440">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="2ca9f-441">找不到 <paramref name="inputtUri" /> 值所包含的檔案名稱或目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-441">The <paramref name="inputtUri" /> value includes a filename or directory cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="2ca9f-442">無法保留 <paramref name="inputUri" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-442">The <paramref name="inputUri" /> value cannot be resolved.</span>
          </span>
          <span data-ttu-id="2ca9f-443">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-443">-or-</span>
          </span>
          <span data-ttu-id="2ca9f-444">處理這個要求時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-444">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.UriFormatException">
          <span data-ttu-id="2ca9f-445">
            <paramref name="inputUri" /> 不是有效的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-445">
              <paramref name="inputUri" /> is not a valid URI.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="2ca9f-446">載入輸入文件時，發生剖析錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-446">There was a parsing error loading the input document.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-447">包含輸入文件的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-447">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-448">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-448">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-449">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-449">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-450">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-450">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-451">使用 <see cref="T:System.Xml.XmlReader" /> 物件所指定的輸入文件執行轉換，並將結果輸出至資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-451">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="2ca9f-452">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-452">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-453">如果樣式表包含 XSLT`document()`函式，它已解決使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-453">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-454">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-454">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-455">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-455">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-456">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-456">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-457">包含輸入文件的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-457">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-458">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-458">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-459">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-459">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-460">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-460">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-461">使用 <see cref="T:System.Xml.XmlReader" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-461">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-462">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-462">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-463">如果樣式表包含 XSLT`document()`函式，它已解決使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-463">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-464">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-464">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-465">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-465">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-466">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-466">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-467">包含輸入文件的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-467">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-468">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-468">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-469">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-469">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-470">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-470">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-471">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-471">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-472">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-472">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-473">使用 <see cref="T:System.Xml.XmlReader" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-473">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-474">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-474">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-475">如果樣式表包含 XSLT`document()`函式，它已解決使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-475">If the style sheet includes an XSLT `document()` function, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-476">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-476">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-477">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-477">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-478">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-478">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-479">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-479">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-480">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或是包含要轉換的資料的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-480">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-481">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-481">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-482">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-482">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-483">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-483">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-484">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件所指定的輸入文件執行轉換，並將結果輸出至資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-484">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to a stream.</span>
          </span>
          <span data-ttu-id="2ca9f-485">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-485">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional runtime arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-486">如果 XSLT`document()`啟用函式時，就會解析使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-486">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-487">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-487">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-488">此方法不支援`xsl:strip-space`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-488">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="2ca9f-489">如果您已編譯的樣式表包含`xsl:strip-space`項目，您必須使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>多載，這個方法會接受<xref:System.Xml.XmlReader>做為輸入引數。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-489">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="2ca9f-490"><xref:System.Xml.XPath.IXPathNavigable> 介面是在 <xref:System.Xml.XmlNode> 及 <xref:System.Xml.XPath.XPathDocument> 類別中實作的。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-490">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="2ca9f-491">這些類別代表 XML 資料的記憶體中快取。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-491">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="2ca9f-492"><xref:System.Xml.XmlNode> 類別是以 W3C 文件物件模型 (DOM) 為基礎，並包含編輯功能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-492">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="2ca9f-493"><xref:System.Xml.XPath.XPathDocument> 類別是以 XPath 資料模型為基礎的唯讀資料存放區。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-493">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="2ca9f-494"><xref:System.Xml.XPath.XPathDocument> 是建議用於 XSLT 處理的類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-494"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="2ca9f-495">與 <xref:System.Xml.XmlNode> 類別相比，它可提供更高的效能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-495">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="2ca9f-496">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-496">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2ca9f-497">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-497">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2ca9f-498">若要轉換節點片段，您必須建立只包含節點片段的物件，並將該物件傳遞至 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-498">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="2ca9f-499">如需詳細資訊，請參閱[如何：轉換節點片段](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-499">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ca9f-500">下列範例會執行 XSLT 轉換，並將輸出至<xref:System.IO.FileStream>。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-500">The following example executes an XSLT transformation and outputs to a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-501">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-501">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-502">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-502">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-503">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-503">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-504">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或是包含要轉換的資料的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-504">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-505">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-505">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-506">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-506">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-507">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-507">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-508">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-508">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-509">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-509">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-510">如果 XSLT`document()`啟用函式時，就會解析使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-510">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-511">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-511">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-512">此方法不支援`xsl:strip-space`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-512">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="2ca9f-513">如果您已編譯的樣式表包含`xsl:strip-space`項目，您必須使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>多載，這個方法會接受<xref:System.Xml.XmlReader>做為輸入引數。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-513">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="2ca9f-514"><xref:System.Xml.XPath.IXPathNavigable> 介面是在 <xref:System.Xml.XmlNode> 及 <xref:System.Xml.XPath.XPathDocument> 類別中實作的。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-514">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="2ca9f-515">這些類別代表 XML 資料的記憶體中快取。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-515">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="2ca9f-516"><xref:System.Xml.XmlNode> 類別是以 W3C 文件物件模型 (DOM) 為基礎，並包含編輯功能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-516">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="2ca9f-517"><xref:System.Xml.XPath.XPathDocument> 類別是以 XPath 資料模型為基礎的唯讀資料存放區。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-517">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="2ca9f-518"><xref:System.Xml.XPath.XPathDocument> 是建議用於 XSLT 處理的類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-518"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="2ca9f-519">與 <xref:System.Xml.XmlNode> 類別相比，它可提供更高的效能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-519">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="2ca9f-520">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-520">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2ca9f-521">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-521">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2ca9f-522">若要轉換節點片段，您必須建立只包含節點片段的物件，並將該物件傳遞至 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-522">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="2ca9f-523">如需詳細資訊，請參閱[如何：轉換節點片段](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-523">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-524">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-524">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-525">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-525">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-526">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-526">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="2ca9f-527">在 Microsoft .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或是包含要轉換的資料的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-527">In the Microsoft .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-528">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-528">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-529">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-529">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-530">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-530">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-531">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-531">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-532">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-532">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-533">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-533">Executes the transform using the input document specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-534">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-534">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ca9f-535">如果 XSLT`document()`啟用函式時，就會解析使用<xref:System.Xml.XmlUrlResolver>使用沒有使用者認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-535">If the XSLT `document()` function is enabled, it is resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="2ca9f-536">如果在需要驗證的網路資源位於外部的資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-536">If the external resource is located on a network resource that requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="2ca9f-537">此方法不支援`xsl:strip-space`項目。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-537">This method does not support the `xsl:strip-space` element.</span></span> <span data-ttu-id="2ca9f-538">如果您已編譯的樣式表包含`xsl:strip-space`項目，您必須使用<xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>多載，這個方法會接受<xref:System.Xml.XmlReader>做為輸入引數。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-538">If your compiled style sheet included the `xsl:strip-space` element, you must use the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> overload which takes an <xref:System.Xml.XmlReader> as the input argument.</span></span>  
  
 <span data-ttu-id="2ca9f-539"><xref:System.Xml.XPath.IXPathNavigable> 介面是在 <xref:System.Xml.XmlNode> 及 <xref:System.Xml.XPath.XPathDocument> 類別中實作的。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-539">The <xref:System.Xml.XPath.IXPathNavigable> interface is implemented in the <xref:System.Xml.XmlNode> and <xref:System.Xml.XPath.XPathDocument> classes.</span></span> <span data-ttu-id="2ca9f-540">這些類別代表 XML 資料的記憶體中快取。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-540">These classes represent an in-memory cache of XML data.</span></span>  
  
-   <span data-ttu-id="2ca9f-541"><xref:System.Xml.XmlNode> 類別是以 W3C 文件物件模型 (DOM) 為基礎，並包含編輯功能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-541">The <xref:System.Xml.XmlNode> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</span></span>  
  
-   <span data-ttu-id="2ca9f-542"><xref:System.Xml.XPath.XPathDocument> 類別是以 XPath 資料模型為基礎的唯讀資料存放區。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-542">The <xref:System.Xml.XPath.XPathDocument> class is a read-only data store based on the XPath data model.</span></span> <span data-ttu-id="2ca9f-543"><xref:System.Xml.XPath.XPathDocument> 是建議用於 XSLT 處理的類別。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-543"><xref:System.Xml.XPath.XPathDocument> is the recommended class for XSLT processing.</span></span> <span data-ttu-id="2ca9f-544">與 <xref:System.Xml.XmlNode> 類別相比，它可提供更高的效能。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-544">It provides faster performance when compared to the <xref:System.Xml.XmlNode> class.</span></span>  
  
 <span data-ttu-id="2ca9f-545">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-545">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="2ca9f-546">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-546">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="2ca9f-547">若要轉換節點片段，您必須建立只包含節點片段的物件，並將該物件傳遞至 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-547">To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method.</span></span> <span data-ttu-id="2ca9f-548">如需詳細資訊，請參閱[如何：轉換節點片段](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-548">For more information, see [How to: Transform a Node Fragment](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-549">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-549">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-550">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-550">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-551">包含輸入文件的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-551">An <see cref="T:System.Xml.XmlReader" /> containing the input document.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-552">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用來當做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-552">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transform.</span>
          </span>
          <span data-ttu-id="2ca9f-553">這個值可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-553">This value can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-554">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-554">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-555">如果樣式表包含 <c>xsl:output</c> 元素，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" />物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-555">If the style sheet contains an <c>xsl:output</c> element, you should create the <see cref="T:System.Xml.XmlWriter" /> using the <see cref="T:System.Xml.XmlWriterSettings" /> object returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-556">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-556">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="2ca9f-557">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-557">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="2ca9f-558">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-558">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-559">使用 <see cref="T:System.Xml.XmlReader" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-559">Executes the transform using the input document specified by the <see cref="T:System.Xml.XmlReader" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-560">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數，且 XmlResolver 會解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-560">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the XmlResolver resolves the XSLT <c>document()</c> function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2ca9f-561">下列範例會使用<xref:System.Xml.XmlSecureResolver>解析 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="2ca9f-561">The following example uses an <xref:System.Xml.XmlSecureResolver> to resolve the XSLT `document()` function.</span></span>  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2ca9f-562">
            <paramref name="input" /> 或 <paramref name="results" /> 的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-562">The <paramref name="input" /> or <paramref name="results" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Xsl.XsltException">
          <span data-ttu-id="2ca9f-563">執行 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-563">There was an error executing the XSLT transform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="2ca9f-564">
            <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件指定要轉換的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-564">The document to transform that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="2ca9f-565">做為 <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 的引數清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-565">Argument list as <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</span>
          </span>
        </param>
        <param name="results">
          <span data-ttu-id="2ca9f-566">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-566">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
          <span data-ttu-id="2ca9f-567">如果樣式表包含 <see langword="xsl:output" /> 項目，您應該使用從 <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> 屬性傳回的 <see cref="T:System.Xml.XmlWriterSettings" /> 物件建立 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-567">If the style sheet contains an <see langword="xsl:output" /> element, you should create the <see cref="T:System.Xml.XmlWriter" /> by using the <see cref="T:System.Xml.XmlWriterSettings" /> object that is returned from the <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> property.</span>
          </span>
          <span data-ttu-id="2ca9f-568">如此可確保 <see cref="T:System.Xml.XmlWriter" /> 具有正確的輸出設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-568">This ensures that the <see cref="T:System.Xml.XmlWriter" /> has the correct output settings.</span>
          </span>
        </param>
        <param name="documentResolver">
          <span data-ttu-id="2ca9f-569">
            <see cref="T:System.Xml.XmlResolver" />，用於解析 XSLT <see langword="document()" /> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-569">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <see langword="document()" /> function.</span>
          </span>
          <span data-ttu-id="2ca9f-570">如果值為 <see langword="null" />，則不會解析 <see langword="document()" /> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-570">If this is <see langword="null" />, the <see langword="document()" /> function is not resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2ca9f-571">使用 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 物件所指定的輸入文件執行轉換，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-571">Executes the transform by using the input document that is specified by the <see cref="T:System.Xml.XPath.IXPathNavigable" /> object and outputs the results to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="2ca9f-572">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" /> 會提供額外的執行階段引數，且 <see cref="T:System.Xml.XmlResolver" /> 會解析 XSLT <see langword="document()" /> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2ca9f-572">The <see cref="T:System.Xml.Xsl.XsltArgumentList" /> provides additional run-time arguments and the <see cref="T:System.Xml.XmlResolver" /> resolves the XSLT <see langword="document()" /> function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>