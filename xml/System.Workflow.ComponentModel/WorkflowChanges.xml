<Type Name="WorkflowChanges" FullName="System.Workflow.ComponentModel.WorkflowChanges">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="435ddeb200c892fde1ad8dc6f3e64e7bbcd6449b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30686372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowChanges" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowChanges extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.WorkflowChanges" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowChanges" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowChanges sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一組對執行中工作流程執行個體建議的變更。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 必須使用 <xref:System.Workflow.ComponentModel.WorkflowChanges> 物件，對執行中的工作流程執行個體進行所有建議的變更。  
  
 當以應用程式程式碼建構 <xref:System.Workflow.ComponentModel.WorkflowChanges> 物件時 (在工作流程執行個體之外)，傳遞到建構函式的 <xref:System.Workflow.ComponentModel.Activity> 物件必須是由 <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> 類別的 <xref:System.Workflow.Runtime.WorkflowInstance> 方法傳回的物件。  
  
   
  
## Examples  
 下列範例將示範如何建立 <xref:System.Workflow.ComponentModel.WorkflowChanges> 物件的新執行個體。 這個範例來自＜訂購狀態機器 SDK＞範例。 如需詳細資訊，請參閱[訂購狀態機器範例](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)。  
  
 [!code-csharp[WF_Samples#87](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#87)]
 [!code-vb[WF_Samples#87](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#87)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowChanges (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowChanges(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">工作流程的根 <see cref="T:System.Workflow.ComponentModel.Activity" />。</param>
        <summary>初始化 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rootActivity" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="rootActivity" /> 不是 <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rootActivity" /> 為設計模式。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConditionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ConditionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定條件，也就是必須滿足才能套用 <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> 的條件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以在根活動上設定，以不允許對執行中工作流程進行動態更新。  
  
 當在根活動上設定該屬性且條件評估為 `false` 時，不允許在工作流程執行個體上動態更新。 如果條件評估為 `true` 或條件未設定，則允許動態更新。  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCondition">
      <MemberSignature Language="C#" Value="public static object GetCondition (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCondition(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCondition (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetCondition(System::Object ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (或衍生型別)，包含條件屬性，如 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 和 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 活動。</param>
        <summary>在相依性物件上取得條件屬性。</summary>
        <returns>條件屬性型別，如 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> 是附加的相依性屬性，也就是它是由一個型別宣告與使用，並設在另一個型別上。 因此，在宣告屬性的型別上必須有靜態 `get` 和 `set` 方法。  
  
 用於取得 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> 的 Helper 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="dependencyObject" /> 不是 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 或衍生自 <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> 的型別。</exception>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCondition (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCondition(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (或衍生型別)，包含條件屬性，如 <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> 和 <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> 活動。</param>
        <param name="value">設定相依性物件的條件型別，如 <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />。</param>
        <summary>在相依性物件上設定條件屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> 是附加的相依性屬性，也就是它是由一個型別宣告與使用，並設在另一個型別上。 因此，在宣告屬性的型別上必須有靜態 `get` 和 `set` 方法。  
  
 用於設定 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> 的 Helper 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="TransientWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity TransientWorkflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity TransientWorkflow" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransientWorkflow As CompositeActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::CompositeActivity ^ TransientWorkflow { System::Workflow::ComponentModel::CompositeActivity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回複製的活動樹狀，變更會先對這個樹狀進行，然後再套用到執行中的工作流程執行個體。</summary>
        <value>
          <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />，包含工作流程的複製根活動。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下範例示範將活動加入至 TransientWorkflow 屬性。 這個範例來自＜訂購狀態機器 SDK＞範例。 如需詳細資訊，請參閱[訂購狀態機器範例](http://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c)。  
  
 [!code-csharp[WF_Samples#88](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#88)]
 [!code-vb[WF_Samples#88](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate () As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>驗證目前的建議變更集，這些變更已對 <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" /> 屬性表示的活動樹狀結構進行。</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> 物件，包含驗證期間發生的任何錯誤或警告。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>