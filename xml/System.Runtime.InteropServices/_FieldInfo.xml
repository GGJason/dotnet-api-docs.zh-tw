<Type Name="_FieldInfo" FullName="System.Runtime.InteropServices._FieldInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b4fab79e63a5c23f3ab318a04e928d8e98e34e9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36536791" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _FieldInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FieldInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._FieldInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FieldInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FieldInfo" />
  <TypeSignature Language="F#" Value="type _FieldInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8A7C1442-A9FB-366B-80D8-4939FFA6DBE0")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.FieldInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dec45-101">公開 <see cref="T:System.Reflection.FieldInfo" /> 類別的公用成員至 Unmanaged 程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dec45-101">Exposes the public members of the <see cref="T:System.Reflection.FieldInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-102">此介面會從 unmanaged 程式碼，是對存取 managed 類別，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-103">這個介面會保留 vtable 順序的<xref:System.Reflection.FieldInfo?displayProperty=nameWithType>類別可由 unmanaged COM 物件存取的成員。</span><span class="sxs-lookup"><span data-stu-id="dec45-103">This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.FieldAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As FieldAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::FieldAttributes Attributes { System::Reflection::FieldAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.FieldAttributes" Usage="System.Runtime.InteropServices._FieldInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-104">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.Attributes" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-105">這個欄位的 <see cref="T:System.Reflection.FieldAttributes" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-105">The <see cref="T:System.Reflection.FieldAttributes" /> for this field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-106">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-106">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-107"><xref:System.Reflection.FieldInfo.Attributes%2A>屬性會取得與這個欄位相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="dec45-107">The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._FieldInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-108">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-109">宣告這個成員之類別的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-109">The <see cref="T:System.Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-110">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-110">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-111"><xref:System.Reflection.MemberInfo.DeclaringType%2A>屬性會取得宣告此成員的類別。</span><span class="sxs-lookup"><span data-stu-id="dec45-111">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_FieldInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="dec45-112">與目前的 <see cref="T:System.Object" /> 相比較的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-112">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-113">為 COM 物件提供與版本無關的 <see cref="M:System.Object.Equals(System.Object)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-113">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-114">如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-114">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-115">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-115">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-116"><xref:System.Object.Equals%2A>方法會判斷是否指定<xref:System.Object>是否等於目前<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="dec45-116">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle FieldHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeFieldHandle FieldHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.FieldHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldHandle As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeFieldHandle FieldHandle { RuntimeFieldHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldHandle : RuntimeFieldHandle" Usage="System.Runtime.InteropServices._FieldInfo.FieldHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-117">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.FieldHandle" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-117">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.FieldHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-118">欄位內部中繼資料表示的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-118">A handle to the internal metadata representation of a field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-119">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-119">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-120"><xref:System.Reflection.FieldInfo.FieldHandle%2A>屬性會取得<xref:System.RuntimeFieldHandle>，這是一個欄位的內部中繼資料表示法的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="dec45-120">The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldType">
      <MemberSignature Language="C#" Value="public Type FieldType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FieldType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.FieldType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ FieldType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldType : Type" Usage="System.Runtime.InteropServices._FieldInfo.FieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-121">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.FieldType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-121">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.FieldType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-122">這個欄位物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-122">The type of this field object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-123">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-123">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-124"><xref:System.Reflection.FieldInfo.FieldType%2A>屬性會取得這個欄位物件的類型。</span><span class="sxs-lookup"><span data-stu-id="dec45-124">The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-125">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-126">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-126">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-127"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回所有套用至這個成員的屬性。</span><span class="sxs-lookup"><span data-stu-id="dec45-127">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_FieldInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="dec45-128">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-128">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-129">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-129">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-130">包含所有自訂屬性的陣列，如果沒有定義屬性，則為包含零元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-130">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-131">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-131">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-132"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回陣列，其中包含的所有自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="dec45-132">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_FieldInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="dec45-133">要搜尋的屬性類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-133">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="dec45-134">只會傳回可指派給這種類型的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-134">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="dec45-135">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-135">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-136">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-137">套用至這個成員的自訂屬性陣列，如果沒有套用屬性，則為包含零 (0) 元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-137">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-138">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-139"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回所識別的自訂屬性陣列<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="dec45-139">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_FieldInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dec45-140">為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetHashCode" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-140">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-141">目前執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-141">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-142">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-142">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-143"><xref:System.Object.GetHashCode%2A>方法做為特定類型的雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="dec45-143">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="dec45-144"><xref:System.Object.GetHashCode%2A> 適用於雜湊演算法和雜湊資料表這類的資料結構。</span><span class="sxs-lookup"><span data-stu-id="dec45-144"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_FieldInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="dec45-145">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-145">Reserved for future use.</span>
          </span>
          <span data-ttu-id="dec45-146">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-146">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="dec45-147">要對應之傳入的名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-147">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="dec45-148">要對應的名稱計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-148">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dec45-149">用於解譯名稱的地區設定內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-149">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="dec45-150">呼叫端配置的陣列，用於接收對應於名稱的 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-150">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-151">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-151">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-152">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dec45-153">如需有關`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="dec45-153">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_FieldInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dec45-154">為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetType" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-154">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-155">
            <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-155">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-156">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-156">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-157"><xref:System.Object.GetType%2A>方法會取得目前的執行個體的類型。</span><span class="sxs-lookup"><span data-stu-id="dec45-157">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_FieldInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="dec45-158">要傳回的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-158">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dec45-159">類型資訊的地區設定識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-159">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="dec45-160">接收要求的類型資訊物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-160">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-161">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-161">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-162">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-162">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dec45-163">如需有關`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="dec45-163">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_FieldInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="dec45-164">指向接收物件提供的類型資訊介面數目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-164">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-165">擷取物件提供的類型資訊介面數目 (0 或 1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-165">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-166">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-166">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dec45-167">如需有關`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="dec45-167">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="_FieldInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dec45-168">將傳回其欄位值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-168">The object whose field value will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-169">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-169">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-170">物件，包含這個執行個體所反映欄位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-170">An object containing the value of the field reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-171">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-171">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-172"><xref:System.Reflection.FieldInfo.GetValue%2A>方法會傳回指定物件所支援的欄位值。</span><span class="sxs-lookup"><span data-stu-id="dec45-172">The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueDirect">
      <MemberSignature Language="C#" Value="public object GetValueDirect (TypedReference obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValueDirect(valuetype System.TypedReference obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueDirect (obj As TypedReference) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueDirect(TypedReference obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValueDirect : TypedReference -&gt; obj" Usage="_FieldInfo.GetValueDirect obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dec45-173">
            <see cref="T:System.TypedReference" /> 結構，其封裝位置的 Managed 指標和可能儲存在該位置之型別的執行階段表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-173">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-174">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-174">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-175">含有欄位值的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-175">An <see cref="T:System.Object" /> containing a field value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-176">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-176">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-177"><xref:System.Reflection.FieldInfo.GetValueDirect%2A>方法會傳回指定物件所支援的欄位值。</span><span class="sxs-lookup"><span data-stu-id="dec45-177">The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_FieldInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="dec45-178">辨識成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-178">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="dec45-179">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-179">Reserved for future use.</span>
          </span>
          <span data-ttu-id="dec45-180">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-180">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="dec45-181">地區設定內容，用於解譯引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-181">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="dec45-182">描述呼叫之內容的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-182">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="dec45-183">結構的指標，此結構包含引數陣列、指名引數之 DISPID 引數的陣列，以及陣列中項目數目的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-183">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="dec45-184">指向用於儲存結果之位置的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-184">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="dec45-185">包含例外狀況資訊的結構指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-185">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="dec45-186">第一個有錯誤的引數索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-186">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-187">提供物件所公開的屬性和方法的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-187">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-188">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-188">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="dec45-189">如需有關`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="dec45-189">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssembly : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-190">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsAssembly" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-190">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-191">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="Assembly" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-191">
              <see langword="true" /> if the field has the <see langword="Assembly" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-192">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-192">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-193"><xref:System.Reflection.FieldInfo.IsAssembly%2A>屬性會取得值，指出這個欄位是否具有`Assembly`層級的可見性。</span><span class="sxs-lookup"><span data-stu-id="dec45-193">The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property gets a value indicating whether this field has `Assembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_FieldInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="dec45-194">套用自訂屬性的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-194">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="dec45-195">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-195">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-196">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-196">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-197">如果一或多個 <paramref name="attributeType" /> 的執行個體套用至這個成員，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-197">
              <see langword="true" /> if one or more instance of <paramref name="attributeType" /> is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-198">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-198">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-199"><xref:System.Reflection.MemberInfo.IsDefined%2A>方法會指出是否有一個或多個執行個體`attributeType`套用至這個成員。</span><span class="sxs-lookup"><span data-stu-id="dec45-199">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamily : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-200">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsFamily" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-200">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-201">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="Family" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-201">
              <see langword="true" /> if the field has the <see langword="Family" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-202">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-202">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-203"><xref:System.Reflection.FieldInfo.IsFamily%2A>屬性會取得值，指出這個欄位是否具有`Family`層級的可見性。</span><span class="sxs-lookup"><span data-stu-id="dec45-203">The <xref:System.Reflection.FieldInfo.IsFamily%2A> property gets a value indicating whether this field has `Family` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyAndAssembly : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-204">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-204">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-205">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="FamANDAssem" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-205">
              <see langword="true" /> if the field has the <see langword="FamANDAssem" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-206">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-206">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-207"><xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A>屬性會取得值，指出這個欄位是否具有`FamilyAndAssembly`層級的可見性。</span><span class="sxs-lookup"><span data-stu-id="dec45-207">The <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> property gets a value indicating whether this field has `FamilyAndAssembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyOrAssembly : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-208">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-208">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-209">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="FamORAssem" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-209">
              <see langword="true" /> if the field has the <see langword="FamORAssem" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-210">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-210">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-211"><xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>屬性會取得值，指出這個欄位是否具有`FamilyOrAssembly`層級的可見性。</span><span class="sxs-lookup"><span data-stu-id="dec45-211">The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property gets a value indicating whether this field has `FamilyOrAssembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitOnly">
      <MemberSignature Language="C#" Value="public bool IsInitOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitOnly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsInitOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitOnly : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsInitOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-212">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsInitOnly" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-212">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsInitOnly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-213">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="InitOnly" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-213">
              <see langword="true" /> if the field has the <see langword="InitOnly" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-214">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-214">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-215"><xref:System.Reflection.FieldInfo.IsInitOnly%2A>屬性會取得值，指出是否可以只在建構函式主體中設定欄位。</span><span class="sxs-lookup"><span data-stu-id="dec45-215">The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public bool IsLiteral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsLiteral" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLiteral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLiteral { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLiteral : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsLiteral" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-216">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsLiteral" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-216">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsLiteral" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-217">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="Literal" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-217">
              <see langword="true" /> if the field has the <see langword="Literal" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-218">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-218">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-219"><xref:System.Reflection.FieldInfo.IsLiteral%2A>屬性會取得值，指出值是否會在編譯時期寫入，且無法變更。</span><span class="sxs-lookup"><span data-stu-id="dec45-219">The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotSerialized">
      <MemberSignature Language="C#" Value="public bool IsNotSerialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsNotSerialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotSerialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotSerialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotSerialized : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsNotSerialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-220">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsNotSerialized" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-220">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsNotSerialized" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-221">如果欄位已設定 <see langword="true" /> 屬性，則為 <see langword="NotSerialized" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-221">
              <see langword="true" /> if the field has the <see langword="NotSerialized" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-222">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-222">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-223"><xref:System.Reflection.FieldInfo.IsNotSerialized%2A>屬性會取得值，指出這個欄位是否具有`NotSerialized`屬性。</span><span class="sxs-lookup"><span data-stu-id="dec45-223">The <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> property gets a value indicating whether this field has the `NotSerialized` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPinvokeImpl">
      <MemberSignature Language="C#" Value="public bool IsPinvokeImpl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinvokeImpl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPinvokeImpl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPinvokeImpl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinvokeImpl : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-224">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsPinvokeImpl" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-224">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPinvokeImpl" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-225">如果在 <see cref="T:System.Reflection.FieldAttributes" /> 中設定 <see langword="true" /> 屬性，則為 <see langword="PinvokeImpl" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-225">
              <see langword="true" /> if the <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-226">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-226">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-227"><xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A>屬性會取得值，指出是否對應`PinvokeImpl`設定屬性<xref:System.Reflection.FieldAttributes>。</span><span class="sxs-lookup"><span data-stu-id="dec45-227">The <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property gets a value indicating whether the corresponding `PinvokeImpl` attribute is set in <xref:System.Reflection.FieldAttributes>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivate : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsPrivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-228">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsPrivate" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-228">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-229">如果欄位是私用的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-229">
              <see langword="true" /> if the field is private; otherwise; <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-230">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-230">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-231"><xref:System.Reflection.FieldInfo.IsPrivate%2A>屬性會取得值，指出是否為私用欄位。</span><span class="sxs-lookup"><span data-stu-id="dec45-231">The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-232">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsPublic" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-232">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-233">如果欄位是公用的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-233">
              <see langword="true" /> if this field is public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-234">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-234">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-235"><xref:System.Reflection.FieldInfo.IsPublic%2A>屬性會取得值，指出欄位是否為公用。</span><span class="sxs-lookup"><span data-stu-id="dec45-235">The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-236">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsSpecialName" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-236">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-237">如果在 <see cref="T:System.Reflection.FieldAttributes" /> 中設定 <see langword="true" /> 屬性，則為 <see langword="SpecialName" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-237">
              <see langword="true" /> if the <see langword="SpecialName" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-238">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-238">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-239"><xref:System.Reflection.FieldInfo.IsSpecialName%2A>屬性會取得值，指出是否對應`SpecialName`設定屬性<xref:System.Reflection.FieldAttributes>列舉值。</span><span class="sxs-lookup"><span data-stu-id="dec45-239">The <xref:System.Reflection.FieldInfo.IsSpecialName%2A> property gets a value indicating whether the corresponding `SpecialName` attribute is set in the <xref:System.Reflection.FieldAttributes> enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Runtime.InteropServices._FieldInfo.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-240">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.IsStatic" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-240">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsStatic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-241">如果欄位是靜態的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-241">
              <see langword="true" /> if this field is static; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-242">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-242">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-243"><xref:System.Reflection.FieldInfo.IsStatic%2A>屬性會取得值，指出欄位是否為靜態。</span><span class="sxs-lookup"><span data-stu-id="dec45-243">The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._FieldInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-244">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.FieldInfo.MemberType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-244">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-245">
            <see cref="T:System.Reflection.MemberTypes" /> 值，表示這個成員為欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-245">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-246">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-246">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-247"><xref:System.Reflection.FieldInfo.MemberType%2A>屬性會取得<xref:System.Reflection.MemberTypes>值，指出這個成員欄位。</span><span class="sxs-lookup"><span data-stu-id="dec45-247">The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._FieldInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-248">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.Name" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-248">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-249">含有這個成員名稱的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-249">A <see cref="T:System.String" /> containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-250">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-250">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-251"><xref:System.Reflection.MemberInfo.Name%2A>屬性會取得目前成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="dec45-251">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._FieldInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-252">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-252">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dec45-253">
            <see cref="T:System.Type" /> 物件，用來取得這個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-253">The <see cref="T:System.Type" /> object through which this object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-254">這個屬性會從 unmanaged 程式碼，是對存取 managed 類別，不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-254">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-255"><xref:System.Reflection.MemberInfo.ReflectedType%2A>屬性取得用來取得這個執行個體的類別物件<xref:System.Reflection.MemberInfo>。</span><span class="sxs-lookup"><span data-stu-id="dec45-255">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dec45-256">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.FieldInfo.SetValue" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-256">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.FieldInfo.SetValue" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-257">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-257">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-258"><xref:System.Reflection.FieldInfo.SetValue%2A>方法會將指定的物件欄位的值設為指定的值。</span><span class="sxs-lookup"><span data-stu-id="dec45-258">The <xref:System.Reflection.FieldInfo.SetValue%2A> methods set the value of the field for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit" Usage="_FieldInfo.SetValue (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dec45-259">將設定其欄位值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-259">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dec45-260">要指派給欄位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-260">The value to assign to the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-261">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-261">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-262">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-262">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-263"><xref:System.Reflection.FieldInfo.SetValue%2A>方法設定的給定物件所支援的欄位值。</span><span class="sxs-lookup"><span data-stu-id="dec45-263">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * System.Globalization.CultureInfo -&gt; unit" Usage="_FieldInfo.SetValue (obj, value, invokeAttr, binder, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dec45-264">將設定其欄位值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-264">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dec45-265">要指派給欄位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-265">The value to assign to the field.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="dec45-266">
            <see cref="T:System.Reflection.Binder" /> 的欄位，指定想要繫結的型別 (例如，<see langword="Binder.CreateInstance" /> 或 <see langword="Binder.ExactBinding" /> )。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-266">A field of <see cref="T:System.Reflection.Binder" /> that specifies the type of binding that is desired (for example, <see langword="Binder.CreateInstance" /> or <see langword="Binder.ExactBinding" />).</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="dec45-267">透過反映來啟用繫結、強制引數型別和成員引動過程的一組屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-267">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</span>
          </span>
          <span data-ttu-id="dec45-268">如果「繫結器」<c></c>是 <see langword="null" />，則會使用 <see langword="Binder.DefaultBinding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-268">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dec45-269">特定文化特性 (Culture) 的軟體喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-269">The software preferences of a particular culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-270">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-270">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-271">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-271">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-272"><xref:System.Reflection.PropertyInfo.SetValue%2A>方法設定的給定物件所支援的欄位值。</span><span class="sxs-lookup"><span data-stu-id="dec45-272">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueDirect">
      <MemberSignature Language="C#" Value="public void SetValueDirect (TypedReference obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueDirect(valuetype System.TypedReference obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueDirect (obj As TypedReference, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueDirect(TypedReference obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValueDirect : TypedReference * obj -&gt; unit" Usage="_FieldInfo.SetValueDirect (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="dec45-273">將設定其欄位值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-273">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dec45-274">要指派給欄位的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-274">The value to assign to the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dec45-275">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-275">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-276">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="dec45-277"><xref:System.Reflection.FieldInfo.SetValueDirect%2A>方法設定的給定物件所支援的欄位值。</span><span class="sxs-lookup"><span data-stu-id="dec45-277">The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_FieldInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dec45-278">為 COM 物件提供與版本無關的 <see cref="M:System.Object.ToString" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-278">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dec45-279">字串，代表目前的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dec45-279">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dec45-280">這個方法會從 unmanaged 程式碼，是對存取 managed 類別，並不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="dec45-280">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>