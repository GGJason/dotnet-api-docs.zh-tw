<Type Name="PreserveSigAttribute" FullName="System.Runtime.InteropServices.PreserveSigAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31b2d1f618ccf41eda5ef53f11de1f41b7a09334" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469487" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PreserveSigAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PreserveSigAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.PreserveSigAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PreserveSigAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PreserveSigAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type PreserveSigAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指示應該要抑制 COM Interop 呼叫期間發生的 HRESULT 或 <see langword="retval" /> 簽章轉換。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將此屬性套用至方法中。  
  
 根據預設， [Tlbexp.exe （類型程式庫匯出工具）](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)可確保呼叫可傳回 S_OK HRESULT 會轉換，[out，retval] 參數作為函式的傳回值。 S_OK HRESULT 會被捨棄。 為 S_OK 以外的 Hresult，執行階段會擲回例外狀況，並捨棄 [out，retval] 參數。 當您將套用<xref:System.Runtime.InteropServices.PreserveSigAttribute>managed 的方法簽章的屬性化方法的 managed 和 unmanaged 簽章完全相同。  
  
 如果成員傳回多個成功的 HRESULT 值，而且您想要偵測不同的值，保留原始的方法簽章是必要的。 因為大部分的 COM 成員會傳回 HRESULT，藉由套用<xref:System.Runtime.InteropServices.PreserveSigAttribute>，您可以擷取表示成功或失敗 HRESULT 的整數。 Tlbexp.exe 會保留任何 [out，retavl] 做為 managed 簽章中的 out 參數的參數。  
  
 [Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)也適用於此屬性，則它將套用屬性至分配介面，當它匯入類型程式庫。  
  
> [!NOTE]
>  傳回型別的<xref:System.Runtime.InteropServices.UnmanagedType.Currency>， <xref:System.Guid>，並<xref:System.Object>不會受到<xref:System.Runtime.InteropServices.PreserveSigAttribute>類別，在 COM 受管理的程式碼就會發生互通性和 managed 程式碼會以標記<xref:System.Runtime.InteropServices.PreserveSigAttribute>類別。  當您嘗試使用其中一個這些傳回的型別，以及<xref:System.Runtime.InteropServices.PreserveSigAttribute>類別在這些條件，期間<xref:System.TypeLoadException>就會擲回。  
  
   
  
## Examples  
 下列範例示範如何 Tlbexp.exe 轉換而不需要的 C# 方法<xref:System.Runtime.InteropServices.PreserveSigAttribute>時將組件匯出至 COM 類型程式庫。  
  
 Managed 簽章：  
  
```  
int DoSomething (long l);  
```  
  
 Unmanaged 簽章：  
  
```  
HRESULT DoSomething ([in] long l, [out, retval] int * i);  
```  
  
 當您將套用<xref:System.Runtime.InteropServices.PreserveSigAttribute>相同的 C# 方法和匯出組件，方法轉換不同於前一個範例。 請注意，Tlbexp.exe 會移除 HRESULT 和 [out，retval] 參數修飾詞。  
  
 Managed 簽章：  
  
```  
[PreserveSig] int DoSomething (long l);  
```  
  
 Unmanaged 簽章：  
  
```  
int DoSomething ([in] long l);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PreserveSigAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.PreserveSigAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PreserveSigAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.InteropServices.PreserveSigAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>