<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultDllImportSearchPathsAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5da8900ee314d413b3f2ad6a343e8af84c58c1c39.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da8900ee314d413b3f2ad6a343e8af84c58c1c39</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>Specifies the paths that are used to search for DLLs that provide functions for platform invokes.</source>
          <target state="translated">指定用來搜尋提供平台叫用函式之 DLL 的路徑。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>When applied to an assembly, this attribute specifies the paths that are used by default to search for any DLL that provides a function for a platform invoke, in any code in the assembly.</source>
          <target state="translated">套用至組件時，這個屬性會指定預設用於任何平台提供的函式的 DLL 搜尋路徑叫用時，在組件中的任何程式碼。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>When applied to an individual platform invoke, this attribute overrides the default search paths that were specified for the assembly.</source>
          <target state="translated">當套用到個別的平台叫用時，此屬性會覆寫指定的組件的預設搜尋路徑。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>This attribute is ignored for any platform invoke that specifies an absolute path.</source>
          <target state="translated">對任何平台叫用指定的絕對路徑，則會忽略此屬性。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>Use this attribute to prevent the Win32 <ph id="ph1">`LoadLibraryEx`</ph> function from searching the current working directory.</source>
          <target state="translated">使用這個屬性來防止 Win32<ph id="ph1">`LoadLibraryEx`</ph>函式，從搜尋目前工作目錄。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>This helps protect your application from attacks in which malicious software places a DLL in the current working directory, so that when a platform invoke calls the Win32 <ph id="ph1">`LoadLibraryEx`</ph> function, the function's default search order finds the malicious DLL instead of the system DLL it was intended to find.</source>
          <target state="translated">這可以協助保護您的應用程式從 DLL 的惡意軟體放置在目前工作目錄中的攻擊，因此當平台叫用呼叫 Win32<ph id="ph1">`LoadLibraryEx`</ph>函式，函式的預設搜尋順序找出惡意的 DLL 改為系統 DLL，它被用來尋找。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>The common language runtime handles the call to the <bpt id="p1">[</bpt>LoadLibraryEx<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=236091)</ept>function according to the following algorithm:</source>
          <target state="translated">Common language runtime 會處理呼叫<bpt id="p1">[</bpt>LoadLibraryEx<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=236091)</ept>函式，根據下列演算法：</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>If the attribute is applied to an individual platform invoke, use the values specified by that instance of the attribute.</source>
          <target state="translated">如果屬性套用至個別的平台叫用，使用該執行個體的屬性所指定的值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>Otherwise, if the attribute is applied to the assembly that contains the platform invoke, use the values specified by that instance of the attribute.</source>
          <target state="translated">否則，如果屬性套用至組件包含平台叫用，使用該執行個體的屬性所指定的值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
          <source>Otherwise, search the assembly directory and then call the <ph id="ph1">`LoadLibraryEx`</ph> function with the <ph id="ph2">`LOAD_WITH_ALTERED_SEARCH_PATH`</ph> flag.</source>
          <target state="translated">否則，搜尋的組件目錄，然後呼叫<ph id="ph1">`LoadLibraryEx`</ph>函式與<ph id="ph2">`LOAD_WITH_ALTERED_SEARCH_PATH`</ph>旗標。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
          <source>A bitwise combination of enumeration values that specify the paths that the <bpt id="p1">&lt;c&gt;</bpt>LoadLibraryEx<ept id="p1">&lt;/c&gt;</ept> function searches during platform invokes.</source>
          <target state="translated">列舉值的位元組合，這些值會指定 <bpt id="p1">&lt;c&gt;</bpt>LoadLibraryEx<ept id="p1">&lt;/c&gt;</ept> 函式在平台叫用期間的搜尋路徑。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.#ctor(System.Runtime.InteropServices.DllImportSearchPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /&gt;</ph> class, specifying the paths to use when searching for the targets of platform invokes.</source>
          <target state="translated">指定在搜尋平台叫用目標時所使用的路徑，初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
          <source>Gets a bitwise combination of enumeration values that specify the paths that the <bpt id="p1">&lt;c&gt;</bpt>LoadLibraryEx<ept id="p1">&lt;/c&gt;</ept> function searches during platform invokes.</source>
          <target state="translated">取得列舉值的位元組合，這些值會指定 <bpt id="p1">&lt;c&gt;</bpt>LoadLibraryEx<ept id="p1">&lt;/c&gt;</ept> 函式在平台叫用期間的搜尋路徑。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
          <source>A bitwise combination of enumeration values that specify search paths for platform invokes.</source>
          <target state="translated">列舉值的位元組合，這些值會指定平台叫用的搜尋路徑。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
          <source>When the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&gt;</ph> attribute is applied to an assembly, the paths are used by default to search for the targets of any platform invokes that are performed by code in the assembly.</source>
          <target state="translated">當<ph id="ph1">&lt;xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute&gt;</ph>屬性套用至組件，預設使用的路徑中搜尋的任何平台目標會叫用執行的組件中的程式碼。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute.Paths">
          <source>When the attribute is applied to an individual platform invoke, the paths are used to search for the target of the individual platform invoke and override the paths that are specified for the assembly.</source>
          <target state="translated">當屬性會套用至個別的平台叫用，路徑會用來搜尋的目標平台叫用，並且覆寫指定的組件的路徑。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>