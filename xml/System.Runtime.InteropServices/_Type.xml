<Type Name="_Type" FullName="System.Runtime.InteropServices._Type">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9641773d43fbed2f01575be9521f133bea011738" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239542" /></Metadata><TypeSignature Language="C#" Value="public interface _Type" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Type" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Type" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Type" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Type" />
  <TypeSignature Language="F#" Value="type _Type = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="221cb-101">公開 <see cref="T:System.Type" /> 類別的公用成員至 Unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-101">Exposes the public members of the <see cref="T:System.Type" /> class to the unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-102">此介面是以 managed 類別從 unmanaged 程式碼存取，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="221cb-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-103">此介面保留的 vtable 順序<xref:System.Type?displayProperty=nameWithType>類別可由 unmanaged 的 COM 物件存取的成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-103">This interface preserves the vtable order of the <xref:System.Type?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Runtime.InteropServices._Type.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-104">為 COM 物件提供與版本無關的 <see cref="P:System.Type.Assembly" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-104">Provides COM objects with version-independent access to the <see cref="P:System.Type.Assembly" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-105"><see cref="T:System.Reflection.Assembly" /> 執行個體，描述包含目前類型的組件。</span><span class="sxs-lookup"><span data-stu-id="221cb-105">An <see cref="T:System.Reflection.Assembly" /> instance that describes the assembly containing the current type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-106">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-106">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-107"><xref:System.Type.Assembly%2A?displayProperty=nameWithType>屬性會取得<xref:System.Reflection.Assembly>中宣告的型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-107">The <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property gets the <xref:System.Reflection.Assembly> in which the type is declared.</span></span> <span data-ttu-id="221cb-108">對於泛型型別，這個屬性會取得<xref:System.Reflection.Assembly>中定義此泛型類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-108">For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyQualifiedName">
      <MemberSignature Language="C#" Value="public string AssemblyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.AssemblyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyQualifiedName : string" Usage="System.Runtime.InteropServices._Type.AssemblyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-109">為 COM 物件提供與版本無關的 <see cref="P:System.Type.AssemblyQualifiedName" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-109">Provides COM objects with version-independent access to the <see cref="P:System.Type.AssemblyQualifiedName" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-110"><see cref="T:System.Type" /> 的組件完整名稱，包含載入 <see cref="T:System.Type" /> 的組件名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-110">The assembly-qualified name of the <see cref="T:System.Type" />, including the name of the assembly from which the <see cref="T:System.Type" /> was loaded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-111">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-111">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-112"><xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>屬性取得的組件限定名稱<xref:System.Type>，包括組件名稱<xref:System.Type>已載入。</span><span class="sxs-lookup"><span data-stu-id="221cb-112">The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::TypeAttributes Attributes { System::Reflection::TypeAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.TypeAttributes" Usage="System.Runtime.InteropServices._Type.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-113">為 COM 物件提供與版本無關的 <see cref="P:System.Type.Attributes" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-113">Provides COM objects with version-independent access to the <see cref="P:System.Type.Attributes" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-114">代表 <see cref="T:System.Reflection.TypeAttributes" /> 屬性集的 <see cref="T:System.Type" /> 物件；若 <see cref="T:System.Type" /> 代表的是泛型型別參數，則這個值就是未指定的。</span><span class="sxs-lookup"><span data-stu-id="221cb-114">A <see cref="T:System.Reflection.TypeAttributes" /> object representing the attribute set of the <see cref="T:System.Type" />, unless the <see cref="T:System.Type" /> represents a generic type parameter, in which case the value is unspecified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-115">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-115">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-116"><xref:System.Type.Attributes%2A?displayProperty=nameWithType>屬性會取得相關聯的屬性<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-116">The <xref:System.Type.Attributes%2A?displayProperty=nameWithType> property gets the attributes associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public Type BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ BaseType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : Type" Usage="System.Runtime.InteropServices._Type.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-117">為 COM 物件提供與版本無關的 <see cref="P:System.Type.BaseType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-117">Provides COM objects with version-independent access to the <see cref="P:System.Type.BaseType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-118">目前直接繼承自 <see cref="T:System.Type" /> 的 <see cref="T:System.Type" />；而當目前 <see langword="null" /> 代表的是 <see cref="T:System.Object" /> 類別時，則為 <see langword="Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-118">The <see cref="T:System.Type" /> from which the current <see cref="T:System.Type" /> directly inherits, or <see langword="null" /> if the current <see langword="Type" /> represents the <see cref="T:System.Object" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-119">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-119">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-120"><xref:System.Type.BaseType%2A?displayProperty=nameWithType>屬性取得型別從其目前<xref:System.Type>直接繼承。</span><span class="sxs-lookup"><span data-stu-id="221cb-120">The <xref:System.Type.BaseType%2A?displayProperty=nameWithType> property gets the type from which the current <xref:System.Type> directly inherits.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._Type.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-121">為 COM 物件提供與版本無關的 <see cref="P:System.Type.DeclaringType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-121">Provides COM objects with version-independent access to the <see cref="P:System.Type.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-122">宣告這個成員之類別的 <see cref="T:System.Type" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-122">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span> <span data-ttu-id="221cb-123">如果型別是巢狀型別，這個屬性會傳回封入型別 (Enclosing Type)。</span><span class="sxs-lookup"><span data-stu-id="221cb-123">If the type is a nested type, this property returns the enclosing type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-124">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-124">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-125"><xref:System.Type.DeclaringType%2A?displayProperty=nameWithType>屬性取得宣告這個成員的類別。</span><span class="sxs-lookup"><span data-stu-id="221cb-125">The <xref:System.Type.DeclaringType%2A?displayProperty=nameWithType> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-126">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.Equals" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-126">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.Equals" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-127">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-127">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-128"><xref:System.Type.Equals%2A?displayProperty=nameWithType>方法會判斷目前的基礎系統類型，是否<xref:System.Type>所指定的基礎系統類型相同<xref:System.Object>或<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-128">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object> or <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="221cb-129">。</span><span class="sxs-lookup"><span data-stu-id="221cb-129">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Type.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="221cb-130"><see cref="T:System.Object" />，其基礎系統類型將與目前 <see cref="T:System.Type" /> 的基礎系統類型進行比較。</span><span class="sxs-lookup"><span data-stu-id="221cb-130">The <see cref="T:System.Object" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="221cb-131">為 COM 物件提供與版本無關的 <see cref="M:System.Type.Equals(System.Object)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-131">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-132">如果 <see langword="true" /> 的基礎系統類型與目前 <paramref name="o" /> 的基礎系統類型相同，則為 <see cref="T:System.Type" />否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-132"><see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-133">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-133">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-134"><xref:System.Type.Equals%2A?displayProperty=nameWithType>方法會判斷目前的基礎系統類型，是否<xref:System.Type>等同於指定的基礎系統類型<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="221cb-134">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Type o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Type o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Equals(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (o As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Type ^ o);" />
      <MemberSignature Language="F#" Value="abstract member Equals : Type -&gt; bool" Usage="_Type.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="221cb-135"><see cref="T:System.Type" />，其基礎系統類型將與目前 <see cref="T:System.Type" /> 的基礎系統類型進行比較。</span><span class="sxs-lookup"><span data-stu-id="221cb-135">The <see cref="T:System.Type" /> whose underlying system type is to be compared with the underlying system type of the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="221cb-136">為 COM 物件提供與版本無關的 <see cref="M:System.Type.Equals(System.Type)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-136">Provides COM objects with version-independent access to the <see cref="M:System.Type.Equals(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-137">如果 <see langword="true" /> 的基礎系統類型與目前 <paramref name="o" /> 的基礎系統類型相同，則為 <see cref="T:System.Type" />否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-137"><see langword="true" /> if the underlying system type of <paramref name="o" /> is the same as the underlying system type of the current <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-138">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-139"><xref:System.Type.Equals%2A?displayProperty=nameWithType>方法會判斷目前的基礎系統類型，是否<xref:System.Type>等同於指定的基礎系統類型<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-139">The <xref:System.Type.Equals%2A?displayProperty=nameWithType> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindInterfaces">
      <MemberSignature Language="C#" Value="public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] FindInterfaces(class System.Reflection.TypeFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindInterfaces (filter As TypeFilter, filterCriteria As Object) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ FindInterfaces(System::Reflection::TypeFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberSignature Language="F#" Value="abstract member FindInterfaces : System.Reflection.TypeFilter * obj -&gt; Type[]" Usage="_Type.FindInterfaces (filter, filterCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Reflection.TypeFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="221cb-140">根據 <paramref name="filterCriteria" /> 比較介面的 <see cref="T:System.Reflection.TypeFilter" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="221cb-140">The <see cref="T:System.Reflection.TypeFilter" /> delegate that compares the interfaces against <paramref name="filterCriteria" />.</span></span></param>
        <param name="filterCriteria"><span data-ttu-id="221cb-141">判斷在傳回陣列中是否應包含介面的搜尋準則。</span><span class="sxs-lookup"><span data-stu-id="221cb-141">The search criteria that determines whether an interface should be included in the returned array.</span></span></param>
        <summary><span data-ttu-id="221cb-142">為 COM 物件提供與版本無關的 <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-142">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-143"><see cref="T:System.Type" /> 物件的陣列，表示由目前 <see cref="T:System.Type" /> 所實作或繼承之介面的篩選清單。</span><span class="sxs-lookup"><span data-stu-id="221cb-143">An array of <see cref="T:System.Type" /> objects representing a filtered list of the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-144">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-144">-or-</span></span> 
<span data-ttu-id="221cb-145"><see cref="T:System.Type" /> 類型的空陣列 (如果目前 <see cref="T:System.Type" /> 沒有實作或繼承任何符合篩選條件的介面時)。</span><span class="sxs-lookup"><span data-stu-id="221cb-145">An empty array of type <see cref="T:System.Type" />, if no interfaces matching the filter are implemented or inherited by the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-146">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-146">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-147"><xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType>方法傳回的陣列<xref:System.Type>物件代表之介面的篩選的清單所實作或繼承目前<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-147">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] FindMembers(valuetype System.Reflection.MemberTypes memberType, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MemberFilter filter, object filterCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMembers (memberType As MemberTypes, bindingAttr As BindingFlags, filter As MemberFilter, filterCriteria As Object) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ FindMembers(System::Reflection::MemberTypes memberType, System::Reflection::BindingFlags bindingAttr, System::Reflection::MemberFilter ^ filter, System::Object ^ filterCriteria);" />
      <MemberSignature Language="F#" Value="abstract member FindMembers : System.Reflection.MemberTypes * System.Reflection.BindingFlags * System.Reflection.MemberFilter * obj -&gt; System.Reflection.MemberInfo[]" Usage="_Type.FindMembers (memberType, bindingAttr, filter, filterCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="filter" Type="System.Reflection.MemberFilter" />
        <Parameter Name="filterCriteria" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberType"><span data-ttu-id="221cb-148"><see langword="MemberTypes" /> 物件，表示要搜尋的成員類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-148">A <see langword="MemberTypes" /> object indicating the type of member to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-149">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-149">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-150">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-150">-or-</span></span> 
<span data-ttu-id="221cb-151">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-151">Zero, to return <see langword="null" />.</span></span></param>
        <param name="filter"><span data-ttu-id="221cb-152">執行比較的委派，如果目前進行檢查的成員符合 <see langword="true" />，則傳回 <paramref name="filterCriteria" />，否則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-152">The delegate that does the comparisons, returning <see langword="true" /> if the member currently being inspected matches the <paramref name="filterCriteria" /> and <see langword="false" /> otherwise.</span></span> <span data-ttu-id="221cb-153">您可以使用這個類別所提供的 <see langword="FilterAttribute" />、<see langword="FilterName" /> 和 <see langword="FilterNameIgnoreCase" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="221cb-153">You can use the <see langword="FilterAttribute" />, <see langword="FilterName" />, and <see langword="FilterNameIgnoreCase" /> delegates supplied by this class.</span></span> <span data-ttu-id="221cb-154">第一個委派使用 <see langword="FieldAttributes" />、<see langword="MethodAttributes" /> 和 <see langword="MethodImplAttributes" /> 的欄位做為搜尋準則，而其他兩個委派則使用 <see langword="String" /> 物件做為搜尋準則。</span><span class="sxs-lookup"><span data-stu-id="221cb-154">The first uses the fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> as search criteria, and the other two delegates use <see langword="String" /> objects as the search criteria.</span></span></param>
        <param name="filterCriteria"><span data-ttu-id="221cb-155">判斷在 <see langword="MemberInfo" /> 物件的陣列中是否傳回成員的搜尋準則。</span><span class="sxs-lookup"><span data-stu-id="221cb-155">The search criteria that determines whether a member is returned in the array of <see langword="MemberInfo" /> objects.</span></span>  
  
<span data-ttu-id="221cb-156"><see langword="FieldAttributes" />、<see langword="MethodAttributes" /> 和 <see langword="MethodImplAttributes" /> 的欄位可以與這個類別所提供的 <see langword="FilterAttribute" /> 委派結合使用。</span><span class="sxs-lookup"><span data-stu-id="221cb-156">The fields of <see langword="FieldAttributes" />, <see langword="MethodAttributes" />, and <see langword="MethodImplAttributes" /> can be used in conjunction with the <see langword="FilterAttribute" /> delegate supplied by this class.</span></span></param>
        <summary><span data-ttu-id="221cb-157">為 COM 物件提供與版本無關的 <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-157">Provides COM objects with version-independent access to the <see cref="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-158">指定之成員類型的 <see cref="T:System.Reflection.MemberInfo" /> 物件篩選陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-158">A filtered array of <see cref="T:System.Reflection.MemberInfo" /> objects of the specified member type.</span></span>  
  
<span data-ttu-id="221cb-159">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-159">-or-</span></span> 
<span data-ttu-id="221cb-160"><see cref="T:System.Reflection.MemberInfo" /> 類型的空陣列，如果目前 <see cref="T:System.Type" /> 沒有符合篩選條件的 <paramref name="memberType" /> 類型的成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-160">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have members of type <paramref name="memberType" /> that match the filter criteria.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-161">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-161">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-162"><xref:System.Type.FindMembers%2A?displayProperty=nameWithType>方法會傳回已篩選的陣列<xref:System.Reflection.MemberInfo>指定的成員類型的物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-162">The <xref:System.Type.FindMembers%2A?displayProperty=nameWithType> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Runtime.InteropServices._Type.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-163">為 COM 物件提供與版本無關的 <see cref="P:System.Type.FullName" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-163">Provides COM objects with version-independent access to the <see cref="P:System.Type.FullName" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-164">含有 <see cref="T:System.Type" /> 完整名稱的字串，包含 <see cref="T:System.Type" /> 的命名空間，但不含組件。</span><span class="sxs-lookup"><span data-stu-id="221cb-164">A string containing the fully qualified name of the <see cref="T:System.Type" />, including the namespace of the <see cref="T:System.Type" /> but not the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-165">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-165">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-166"><xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性取得的完整格式的名稱<xref:System.Type>，包括命名空間的<xref:System.Type>但不是含組件。</span><span class="sxs-lookup"><span data-stu-id="221cb-166">The <xref:System.Type.FullName%2A?displayProperty=nameWithType> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArrayRank">
      <MemberSignature Language="C#" Value="public int GetArrayRank ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetArrayRank() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayRank () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetArrayRank();" />
      <MemberSignature Language="F#" Value="abstract member GetArrayRank : unit -&gt; int" Usage="_Type.GetArrayRank " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-167">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetArrayRank" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-167">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetArrayRank" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-168"><see cref="T:System.Int32" />，包含目前 <see cref="T:System.Type" /> 中的維度數目。</span><span class="sxs-lookup"><span data-stu-id="221cb-168">An <see cref="T:System.Int32" /> containing the number of dimensions in the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-169">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-169">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-170"><xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType>方法會取得中的維度數目<xref:System.Array>。</span><span class="sxs-lookup"><span data-stu-id="221cb-170">The <xref:System.Type.GetArrayRank%2A?displayProperty=nameWithType> method gets the number of dimensions in an <xref:System.Array>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-171">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetConstructor" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-171">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructor" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-172">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-172">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-173"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType>方法會取得目前的特定建構函式<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-173">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method gets a specific constructor of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructor (types As Type()) As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetConstructor : Type[] -&gt; System.Reflection.ConstructorInfo" Usage="_Type.GetConstructor types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="221cb-174">由 <see cref="T:System.Type" /> 物件組成的陣列，表示所要建構函式參數的數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-174">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the desired constructor.</span></span>  
  
<span data-ttu-id="221cb-175">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-175">-or-</span></span> 
<span data-ttu-id="221cb-176">由 <see cref="T:System.Type" /> 物件組成的空陣列，用來取得不需任何參數的建構函式。</span><span class="sxs-lookup"><span data-stu-id="221cb-176">An empty array of <see cref="T:System.Type" /> objects, to get a constructor that takes no parameters.</span></span> <span data-ttu-id="221cb-177">這種供陣列是由 <see langword="static" /> 欄位 <see cref="F:System.Type.EmptyTypes" /> 提供的。</span><span class="sxs-lookup"><span data-stu-id="221cb-177">Such an empty array is provided by the <see langword="static" /> field <see cref="F:System.Type.EmptyTypes" />.</span></span></param>
        <summary><span data-ttu-id="221cb-178">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetConstructor(System.Type[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-178">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-179"><see cref="T:System.Reflection.ConstructorInfo" /> 物件，表示其參數符合參數類型陣列中之類型的公用執行個體建構函式 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-179">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-180">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-180">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-181"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType>方法會搜尋其參數符合指定的陣列中之類型的公用執行個體建構函式。</span><span class="sxs-lookup"><span data-stu-id="221cb-181">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a public instance constructor whose parameters match the types in the specified array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetConstructor : System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.ConstructorInfo" Usage="_Type.GetConstructor (bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-182">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-182">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-183">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-183">-or-</span></span> 
<span data-ttu-id="221cb-184">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-184">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-185"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-185">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-186">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-186">-or-</span></span> 
 <span data-ttu-id="221cb-187"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-187"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-188"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之建構函式的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-188">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span></span>  
  
<span data-ttu-id="221cb-189">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-189">-or-</span></span> 
<span data-ttu-id="221cb-190">用以取得沒有參數的建構函式之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-190">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span></span>  
  
<span data-ttu-id="221cb-191">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-191">-or-</span></span> 
 <span data-ttu-id="221cb-192"><see cref="F:System.Type.EmptyTypes" />.</span><span class="sxs-lookup"><span data-stu-id="221cb-192"><see cref="F:System.Type.EmptyTypes" />.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-193"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在參數類型陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-193">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the parameter type array.</span></span> <span data-ttu-id="221cb-194">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-194">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-195">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-195">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-196"><see cref="T:System.Reflection.ConstructorInfo" /> 物件，代表符合指定之需求的建構函式 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-196">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-197">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-198"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType>方法會搜尋其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束的建構函式。</span><span class="sxs-lookup"><span data-stu-id="221cb-198">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructor">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo GetConstructor(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ConstructorInfo ^ GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetConstructor : System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.ConstructorInfo" Usage="_Type.GetConstructor (bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-199">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-199">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-200">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-200">-or-</span></span> 
<span data-ttu-id="221cb-201">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-201">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-202"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-202">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-203">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-203">-or-</span></span> 
 <span data-ttu-id="221cb-204"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-204"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="callConvention"><span data-ttu-id="221cb-205"><see cref="T:System.Reflection.CallingConventions" /> 物件，其指定一組所要使用的規則，而這些規則是關於引數的順序和配置、如何傳遞傳回值、引數使用哪些暫存器以及清除堆疊。</span><span class="sxs-lookup"><span data-stu-id="221cb-205">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-206"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之建構函式的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-206">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the constructor to get.</span></span>  
  
<span data-ttu-id="221cb-207">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-207">-or-</span></span> 
<span data-ttu-id="221cb-208">用以取得沒有參數的建構函式之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-208">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-209"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-209">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-210">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-210">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-211">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-211">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-212"><see cref="T:System.Reflection.ConstructorInfo" /> 物件，代表符合指定之需求的建構函式 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-212">A <see cref="T:System.Reflection.ConstructorInfo" /> object representing the constructor that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-213">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-213">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-214"><xref:System.Type.GetConstructor%2A?displayProperty=nameWithType>方法會搜尋其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束和指定的呼叫慣例的建構函式。</span><span class="sxs-lookup"><span data-stu-id="221cb-214">The <xref:System.Type.GetConstructor%2A?displayProperty=nameWithType> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-215">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetConstructors" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-215">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetConstructors" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-216">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-216">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-217"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType>方法會取得目前的建構函式<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-217">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method gets the constructors of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors () As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors();" />
      <MemberSignature Language="F#" Value="abstract member GetConstructors : unit -&gt; System.Reflection.ConstructorInfo[]" Usage="_Type.GetConstructors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-218">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetConstructors" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-218">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-219">由 <see cref="T:System.Reflection.ConstructorInfo" /> 物件組成的陣列，表示定義給目前 <see cref="T:System.Type" /> 的所有公用執行個體建構函式，但不含類型初始設定式 (靜態建構函式)。</span><span class="sxs-lookup"><span data-stu-id="221cb-219">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all the public instance constructors defined for the current <see cref="T:System.Type" />, but not including the type initializer (static constructor).</span></span> <span data-ttu-id="221cb-220">如果目前的 <see cref="T:System.Type" /> 沒有定義任何公用執行個體建構函式，或目前的 <see cref="T:System.Type" /> 代表的是泛型型別或方法定義的型別參數，則會傳回 <see cref="T:System.Reflection.ConstructorInfo" /> 型別的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-220">If no public instance constructors are defined for the current <see cref="T:System.Type" />, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition, an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-221">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-221">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-222"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType>方法會傳回所有的公用建構函式定義給目前<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-222">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method returns all the public constructors defined for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConstructors">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ConstructorInfo[] GetConstructors(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructors (bindingAttr As BindingFlags) As ConstructorInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ConstructorInfo ^&gt; ^ GetConstructors(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetConstructors : System.Reflection.BindingFlags -&gt; System.Reflection.ConstructorInfo[]" Usage="_Type.GetConstructors bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-223">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-223">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-224">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-224">-or-</span></span> 
<span data-ttu-id="221cb-225">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-225">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-226">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-226">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetConstructors(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-227"><see cref="T:System.Reflection.ConstructorInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義之符合指定繫結條件約束的所有建構函式，包括類型初始設定式 (如果已定義)。</span><span class="sxs-lookup"><span data-stu-id="221cb-227">An array of <see cref="T:System.Reflection.ConstructorInfo" /> objects representing all constructors defined for the current <see cref="T:System.Type" /> that match the specified binding constraints, including the type initializer if it is defined.</span></span> <span data-ttu-id="221cb-228">如果目前的 <see cref="T:System.Type" /> 沒有定義建構函式，或所定義的建構函式都不符合繫結條件約束，或目前的 <see cref="T:System.Type" /> 代表的是泛型型別或方法定義的型別參數，則傳回 <see cref="T:System.Reflection.ConstructorInfo" /> 型別的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-228">Returns an empty array of type <see cref="T:System.Reflection.ConstructorInfo" /> if no constructors are defined for the current <see cref="T:System.Type" />, if none of the defined constructors match the binding constraints, or if the current <see cref="T:System.Type" /> represents a type parameter of a generic type or method definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-229">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-229">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-230"><xref:System.Type.GetConstructors%2A?displayProperty=nameWithType>方法會搜尋定義給目前的建構函式<xref:System.Type>，使用指定<xref:System.Reflection.BindingFlags>。</span><span class="sxs-lookup"><span data-stu-id="221cb-230">The <xref:System.Type.GetConstructors%2A?displayProperty=nameWithType> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-231">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-231">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-232">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-232">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-233"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>方法會傳回套用至這個成員的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-233">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_Type.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="221cb-234">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-234">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="221cb-235">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-235">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-236">套用至這個成員的自訂屬性陣列，如果沒有套用屬性，則為包含零 (0) 元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-236">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-237">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-238"><xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType>方法會傳回套用至這個成員的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-238">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_Type.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="221cb-239">要搜尋的屬性類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-239">The type of attribute to search for.</span></span> <span data-ttu-id="221cb-240">只會傳回可指派給這種類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-240">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="221cb-241">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-241">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="221cb-242">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-242">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-243">套用至這個成員的自訂屬性陣列，如果沒有套用屬性，則為包含零 (0) 元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-243">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-244">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-245"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>方法會傳回套用至這個成員的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-245">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> method returns all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetDefaultMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetDefaultMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetDefaultMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetDefaultMembers();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultMembers : unit -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetDefaultMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-246">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetDefaultMembers" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-246">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetDefaultMembers" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-247"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 的所有預設成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-247">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all default members of the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-248">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-248">-or-</span></span> 
<span data-ttu-id="221cb-249"><see cref="T:System.Reflection.MemberInfo" /> 類型的空陣列 (如果目前 <see cref="T:System.Type" /> 沒有預設成員)。</span><span class="sxs-lookup"><span data-stu-id="221cb-249">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have default members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-250">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-251"><xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType>方法搜尋定義給目前的成員<xref:System.Type>其<xref:System.Reflection.DefaultMemberAttribute>設定。</span><span class="sxs-lookup"><span data-stu-id="221cb-251">The <xref:System.Type.GetDefaultMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetElementType">
      <MemberSignature Language="C#" Value="public Type GetElementType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetElementType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetElementType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetElementType();" />
      <MemberSignature Language="F#" Value="abstract member GetElementType : unit -&gt; Type" Usage="_Type.GetElementType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-252">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetElementType" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-252">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetElementType" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-253">由目前陣列、指標或參考型別所包含或參考物件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-253">The <see cref="T:System.Type" /> of the object encompassed or referred to by the current array, pointer or reference type.</span></span>  
  
<span data-ttu-id="221cb-254">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-254">-or-</span></span> 
 <span data-ttu-id="221cb-255">如果目前的 <see cref="T:System.Type" /> 不是陣列或指標，並未透過參考傳遞，代表的是泛型型別，或代表的是泛型型別或方法定義的型別參數，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-255"><see langword="null" /> if the current <see cref="T:System.Type" /> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-256">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-256">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-257"><xref:System.Type.GetElementType%2A?displayProperty=nameWithType>方法會傳回<xref:System.Type>內含或參考由目前陣列、 指標或參考類型的物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-257">The <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvent">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-258">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetEvent" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-258">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvent" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-259">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-259">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-260"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType>方法會取得目前所宣告或繼承的特定事件<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-260">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method gets a specific event declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string -&gt; System.Reflection.EventInfo" Usage="_Type.GetEvent name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-261">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-261">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-262">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-262">-or-</span></span> 
<span data-ttu-id="221cb-263">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-263">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-264">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetEvent(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-264">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-265"><see cref="T:System.Reflection.EventInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 所宣告或繼承之符合指定繫結條件約束的所有事件。</span><span class="sxs-lookup"><span data-stu-id="221cb-265">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-266">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-266">-or-</span></span> 
<span data-ttu-id="221cb-267">如果目前 <see cref="T:System.Reflection.EventInfo" /> 沒有事件，或沒有事件符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-267">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-268">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-268">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-269"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType>方法所宣告或繼承的事件會搜尋<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-269">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo GetEvent(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvent (name As String, bindingAttr As BindingFlags) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::EventInfo ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetEvent : string * System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo" Usage="_Type.GetEvent (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-270"><see cref="T:System.String" />，其中包含由目前 <see cref="T:System.Type" /> 所宣告或繼承的事件名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-270">The <see cref="T:System.String" /> containing the name of an event that is declared or inherited by the current <see cref="T:System.Type" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-271">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-271">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-272">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-272">-or-</span></span> 
<span data-ttu-id="221cb-273">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-273">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-274">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-274">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-275"><see cref="T:System.Reflection.EventInfo" /> 物件，表示由目前 <see cref="T:System.Type" /> 所宣告或繼承的指定事件 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-275">The <see cref="T:System.Reflection.EventInfo" /> object representing the specified event that is declared or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-276">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-277"><xref:System.Type.GetEvent%2A?displayProperty=nameWithType>方法會傳回<xref:System.Reflection.EventInfo>物件，表示指定的事件，並使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-277">The <xref:System.Type.GetEvent%2A?displayProperty=nameWithType> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-278">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetEvents" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetEvents" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-279">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-280"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType>方法取得的事件所宣告或繼承<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-280">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method gets the events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents () As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents();" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : unit -&gt; System.Reflection.EventInfo[]" Usage="_Type.GetEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-281">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetEvents" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-281">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-282"><see cref="T:System.Reflection.EventInfo" /> 物件的陣列，表示由目前 <see cref="T:System.Type" /> 所宣告或繼承的所有公用事件。</span><span class="sxs-lookup"><span data-stu-id="221cb-282">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all the public events that are declared or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-283">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-283">-or-</span></span> 
<span data-ttu-id="221cb-284"><see cref="T:System.Reflection.EventInfo" /> 類型的空陣列 (如果目前 <see cref="T:System.Type" /> 沒有公用事件)。</span><span class="sxs-lookup"><span data-stu-id="221cb-284">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have public events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-285">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-285">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-286"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType>方法會傳回所有公用事件所宣告或繼承<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-286">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method returns all the public events that are declared or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (bindingAttr As BindingFlags) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Reflection.BindingFlags -&gt; System.Reflection.EventInfo[]" Usage="_Type.GetEvents bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-287">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-287">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-288">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-288">-or-</span></span> 
<span data-ttu-id="221cb-289">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-289">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-290">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-290">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-291"><see cref="T:System.Reflection.EventInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 所宣告或繼承之符合指定繫結條件約束的所有事件。</span><span class="sxs-lookup"><span data-stu-id="221cb-291">An array of <see cref="T:System.Reflection.EventInfo" /> objects representing all events that are declared or inherited by the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-292">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-292">-or-</span></span> 
<span data-ttu-id="221cb-293">如果目前 <see cref="T:System.Reflection.EventInfo" /> 沒有事件，或沒有事件符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-293">An empty array of type <see cref="T:System.Reflection.EventInfo" />, if the current <see cref="T:System.Type" /> does not have events, or if none of the events match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-294">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-295"><xref:System.Type.GetEvents%2A?displayProperty=nameWithType>方法所宣告或繼承的事件會搜尋<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-295">The <xref:System.Type.GetEvents%2A?displayProperty=nameWithType> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetField">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-296">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetField" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-296">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetField" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-297">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-298"><xref:System.Type.GetField%2A?displayProperty=nameWithType>方法會取得目前的特定欄位<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-298">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string -&gt; System.Reflection.FieldInfo" Usage="_Type.GetField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-299"><see cref="T:System.String" />，包含要取得的資料欄位的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-299">The <see cref="T:System.String" /> containing the name of the data field to get.</span></span></param>
        <summary><span data-ttu-id="221cb-300">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetField(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-300">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-301"><see cref="T:System.Reflection.FieldInfo" /> 物件，表示具有指定之名稱的公用欄位 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-301">A <see cref="T:System.Reflection.FieldInfo" /> object representing the public field with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-302">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-303"><xref:System.Type.GetField%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的公用欄位。</span><span class="sxs-lookup"><span data-stu-id="221cb-303">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the public field with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="_Type.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-304"><see cref="T:System.String" />，包含要取得的資料欄位的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-304">The <see cref="T:System.String" /> containing the name of the data field to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-305">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-305">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-306">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-306">-or-</span></span> 
<span data-ttu-id="221cb-307">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-307">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-308">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-308">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-309"><see cref="T:System.Reflection.FieldInfo" /> 物件，表示符合指定之需求的欄位 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-309">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-310">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-311"><xref:System.Type.GetField%2A?displayProperty=nameWithType>方法會搜尋指定的欄位中，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-311">The <xref:System.Type.GetField%2A?displayProperty=nameWithType> method searches for the specified field, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFields">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-312">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetFields" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-312">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetFields" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-313">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-313">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-314"><xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法會取得目前的特定欄位<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-314">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method gets a specific field of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields () As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields();" />
      <MemberSignature Language="F#" Value="abstract member GetFields : unit -&gt; System.Reflection.FieldInfo[]" Usage="_Type.GetFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-315">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetFields" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-315">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-316"><see cref="T:System.Reflection.FieldInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義的所有公用欄位。</span><span class="sxs-lookup"><span data-stu-id="221cb-316">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all the public fields defined for the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-317">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-317">-or-</span></span> 
<span data-ttu-id="221cb-318"><see cref="T:System.Reflection.FieldInfo" /> 類型的空陣列 (如果沒有為目前 <see cref="T:System.Type" /> 定義公用欄位)。</span><span class="sxs-lookup"><span data-stu-id="221cb-318">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no public fields are defined for the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-319">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-320"><xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法會傳回在目前的所有公用欄位<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-320">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method returns all the public fields of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFields (bindingAttr As BindingFlags) As FieldInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="_Type.GetFields bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-321">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-321">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-322">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-322">-or-</span></span> 
<span data-ttu-id="221cb-323">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-323">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-324">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-324">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-325"><see cref="T:System.Reflection.FieldInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義之符合指定繫結條件約束的所有欄位。</span><span class="sxs-lookup"><span data-stu-id="221cb-325">An array of <see cref="T:System.Reflection.FieldInfo" /> objects representing all fields defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-326">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-326">-or-</span></span> 
<span data-ttu-id="221cb-327">如果沒有任何欄位定義給目前 <see cref="T:System.Reflection.FieldInfo" /> 的欄位，或沒有已定義的欄位符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-327">An empty array of type <see cref="T:System.Reflection.FieldInfo" />, if no fields are defined for the current <see cref="T:System.Type" />, or if none of the defined fields match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-328">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-329"><xref:System.Type.GetFields%2A?displayProperty=nameWithType>方法會搜尋定義給目前的欄位<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-329">The <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Type.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-330">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetHashCode" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-330">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-331"><see cref="T:System.Int32" />，包含這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-331">An <see cref="T:System.Int32" /> containing the hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-332">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-333"><xref:System.Type.GetHashCode%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="221cb-333">The <xref:System.Type.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_Type.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="221cb-334">保留供未來使用。</span><span class="sxs-lookup"><span data-stu-id="221cb-334">Reserved for future use.</span></span> <span data-ttu-id="221cb-335">必須是 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="221cb-335">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="221cb-336">要對應之傳入的名稱陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-336">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="221cb-337">要對應的名稱計數。</span><span class="sxs-lookup"><span data-stu-id="221cb-337">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="221cb-338">用於解譯名稱的地區設定內容。</span><span class="sxs-lookup"><span data-stu-id="221cb-338">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="221cb-339">呼叫端配置的陣列，用於接收對應於名稱的 ID。</span><span class="sxs-lookup"><span data-stu-id="221cb-339">Caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="221cb-340">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span><span class="sxs-lookup"><span data-stu-id="221cb-340">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-341">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-341">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="221cb-342">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="221cb-342">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInterface">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-343">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetInterface" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-343">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetInterface" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-344">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-344">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-345"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType>方法會取得目前所實作或繼承的特定介面<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-345">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method gets a specific interface implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string -&gt; Type" Usage="_Type.GetInterface name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-346"><see cref="T:System.String" />，包含要取得的介面名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-346">The <see cref="T:System.String" /> containing the name of the interface to get.</span></span> <span data-ttu-id="221cb-347">若為泛型介面，則為 mangled 名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-347">For generic interfaces, this is the mangled name.</span></span></param>
        <summary><span data-ttu-id="221cb-348">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetInterface(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-348">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-349"><see cref="T:System.Type" /> 物件，表示具有指定之名稱的介面是由目前 <see cref="T:System.Type" /> 所實作或繼承的 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-349">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-350">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-350">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-351"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的介面...</span><span class="sxs-lookup"><span data-stu-id="221cb-351">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the interface with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public Type GetInterface (string name, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetInterface(string name, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (name As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetInterface(System::String ^ name, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetInterface : string * bool -&gt; Type" Usage="_Type.GetInterface (name, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-352"><see cref="T:System.String" />，包含要取得的介面名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-352">The <see cref="T:System.String" /> containing the name of the interface to get.</span></span> <span data-ttu-id="221cb-353">若為泛型介面，則為 mangled 名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-353">For generic interfaces, this is the mangled name.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="221cb-354">為 <paramref name="name" /> 執行不區分大小寫的搜尋，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-354"><see langword="true" /> to perform a case-insensitive search for <paramref name="name" />.</span></span>  
  
<span data-ttu-id="221cb-355">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-355">-or-</span></span> 
 <span data-ttu-id="221cb-356">為 <paramref name="name" /> 執行區分大小寫的搜尋，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-356"><see langword="false" /> to perform a case-sensitive search for <paramref name="name" />.</span></span></param>
        <summary><span data-ttu-id="221cb-357">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-357">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterface(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-358"><see cref="T:System.Type" /> 物件，表示具有指定之名稱的介面是由目前 <see cref="T:System.Type" /> 所實作或繼承的 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-358">A <see cref="T:System.Type" /> object representing the interface with the specified name, implemented or inherited by the current <see cref="T:System.Type" />, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-359">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-359">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-360"><xref:System.Type.GetInterface%2A?displayProperty=nameWithType>方法會搜尋指定的介面，指定是否要執行區分大小寫的搜尋。</span><span class="sxs-lookup"><span data-stu-id="221cb-360">The <xref:System.Type.GetInterface%2A?displayProperty=nameWithType> method searches for the specified interface, specifying whether to do a case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaceMap">
      <MemberSignature Language="C#" Value="public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Reflection.InterfaceMapping GetInterfaceMap(class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaceMap (interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::InterfaceMapping GetInterfaceMap(Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaceMap : Type -&gt; System.Reflection.InterfaceMapping" Usage="_Type.GetInterfaceMap interfaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="interfaceType"><span data-ttu-id="221cb-361">要擷取對應的介面的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-361">The <see cref="T:System.Type" /> of the interface of which to retrieve a mapping.</span></span></param>
        <summary><span data-ttu-id="221cb-362">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetInterfaceMap(System.Type)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-362">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaceMap(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-363"><see cref="T:System.Reflection.InterfaceMapping" /> 物件，表示 <paramref name="interfaceType" /> 的介面對應。</span><span class="sxs-lookup"><span data-stu-id="221cb-363">An <see cref="T:System.Reflection.InterfaceMapping" /> object representing the interface mapping for <paramref name="interfaceType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-364">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-364">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-365"><xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType>方法會傳回指定的介面類型的介面對應。</span><span class="sxs-lookup"><span data-stu-id="221cb-365">The <xref:System.Type.GetInterfaceMap%2A?displayProperty=nameWithType> method returns an interface mapping for the specified interface type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public Type[] GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetInterfaces();" />
      <MemberSignature Language="F#" Value="abstract member GetInterfaces : unit -&gt; Type[]" Usage="_Type.GetInterfaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-366">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetInterfaces" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-366">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetInterfaces" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-367"><see cref="T:System.Type" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 所實作或繼承的所有介面。</span><span class="sxs-lookup"><span data-stu-id="221cb-367">An array of <see cref="T:System.Type" /> objects representing all the interfaces implemented or inherited by the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-368">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-368">-or-</span></span> 
<span data-ttu-id="221cb-369"><see cref="T:System.Type" /> 類型的空陣列 (如果目前 <see cref="T:System.Type" /> 未實作或繼承介面)。</span><span class="sxs-lookup"><span data-stu-id="221cb-369">An empty array of type <see cref="T:System.Type" />, if no interfaces are implemented or inherited by the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-370">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-370">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-371"><xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType>方法會取得目前所實作或繼承的所有介面<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-371">The <xref:System.Type.GetInterfaces%2A?displayProperty=nameWithType> method gets all the interfaces implemented or inherited by the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-372">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetMember" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-372">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMember" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-373">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-373">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-374"><xref:System.Type.GetMember%2A?displayProperty=nameWithType>方法會取得目前的指定的成員<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-374">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method gets the specified members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-375"><see cref="T:System.String" />，包含要取得的公用成員名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-375">The <see cref="T:System.String" /> containing the name of the public members to get.</span></span></param>
        <summary><span data-ttu-id="221cb-376">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMember(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-376">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-377"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表具有指定之名稱的公用成員 (如有找到)，否則為空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-377">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-378">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-378">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-379"><xref:System.Type.GetMember%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的公用成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-379">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the public members with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-380"><see cref="T:System.String" />，包含要取得的成員名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-380">The <see cref="T:System.String" /> containing the name of the members to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-381">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-381">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-382">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-382">-or-</span></span> 
<span data-ttu-id="221cb-383">零，表示傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-383">Zero, to return an empty array.</span></span></param>
        <summary><span data-ttu-id="221cb-384">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-384">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-385"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表具有指定之名稱的公用成員 (如有找到)，否則為空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-385">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-386">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-386">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-387"><xref:System.Type.GetMember%2A?displayProperty=nameWithType>方法會搜尋指定的成員，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-387">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.MemberTypes type, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String, type As MemberTypes, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMember : string * System.Reflection.MemberTypes * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetMember (name, type, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-388"><see cref="T:System.String" />，包含要取得的成員名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-388">The <see cref="T:System.String" /> containing the name of the members to get.</span></span></param>
        <param name="type"><span data-ttu-id="221cb-389">要進行搜尋的 <see cref="T:System.Reflection.MemberTypes" /> 值。</span><span class="sxs-lookup"><span data-stu-id="221cb-389">The <see cref="T:System.Reflection.MemberTypes" /> value to search for.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-390">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-390">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-391">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-391">-or-</span></span> 
<span data-ttu-id="221cb-392">零，表示傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-392">Zero, to return an empty array.</span></span></param>
        <summary><span data-ttu-id="221cb-393">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-393">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-394"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表具有指定之名稱的公用成員 (如有找到)，否則為空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-394">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing the public members with the specified name, if found; otherwise, an empty array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-395">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-395">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-396"><xref:System.Type.GetMember%2A?displayProperty=nameWithType>方法會搜尋指定的成員，使用指定的繫結條件約束的指定的成員型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-396">The <xref:System.Type.GetMember%2A?displayProperty=nameWithType> method searches for the specified members of the specified member type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-397">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetMembers" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-397">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMembers" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-398">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-398">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-399"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType>方法會取得目前成員 （屬性、 方法、 欄位、 事件等等） <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-399">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method gets the members (properties, methods, fields, events, and so on) of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : unit -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-400">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMembers" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-400">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-401"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 的所有公用成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-401">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all the public members of the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-402">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-402">-or-</span></span> 
<span data-ttu-id="221cb-403"><see cref="T:System.Reflection.MemberInfo" /> 類型的空陣列 (如果目前 <see cref="T:System.Type" /> 沒有公用成員)。</span><span class="sxs-lookup"><span data-stu-id="221cb-403">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if the current <see cref="T:System.Type" /> does not have public members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-404">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-404">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-405"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType>方法會傳回在目前的所有公用成員<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-405">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method returns all the public members of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="_Type.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-406">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-406">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-407">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-407">-or-</span></span> 
<span data-ttu-id="221cb-408">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-408">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-409">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-409">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMembers(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-410"><see cref="T:System.Reflection.MemberInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義之符合指定繫結條件約束的所有成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-410">An array of <see cref="T:System.Reflection.MemberInfo" /> objects representing all members defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-411">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-411">-or-</span></span> 
<span data-ttu-id="221cb-412">如果沒有任何成員定義給目前的 <see cref="T:System.Reflection.MemberInfo" />，或沒有已定義的成員符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-412">An empty array of type <see cref="T:System.Reflection.MemberInfo" />, if no members are defined for the current <see cref="T:System.Type" />, or if none of the defined members match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-413">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-413">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-414"><xref:System.Type.GetMembers%2A?displayProperty=nameWithType>方法搜尋定義給目前的成員<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-414">The <xref:System.Type.GetMembers%2A?displayProperty=nameWithType> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-415">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetMethod" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-415">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethod" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-416">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-416">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-417"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="221cb-417">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-418"><see cref="T:System.String" />，包含要取得的公用方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-418">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <summary><span data-ttu-id="221cb-419">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-419">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-420"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示具有指定之名稱的公用方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-420">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-421">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-421">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-422"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的公用方法...</span><span class="sxs-lookup"><span data-stu-id="221cb-422">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the public method with the specified name..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-423"><see cref="T:System.String" />，包含要取得的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-423">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-424">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-424">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-425">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-425">-or-</span></span> 
<span data-ttu-id="221cb-426">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-426">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-427">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-427">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-428"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示符合指定之需求的方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-428">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-429">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-429">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-430"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋指定的方法，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-430">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * Type[] -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod (name, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-431"><see cref="T:System.String" />，包含要取得的公用方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-431">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-432"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之方法的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-432">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
<span data-ttu-id="221cb-433">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-433">-or-</span></span> 
<span data-ttu-id="221cb-434">用以取得沒有參數的方法之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-434">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <summary><span data-ttu-id="221cb-435">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String,System.Type[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-435">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-436"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示其參數符合指定之引數類型的公用方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-436">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-437">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-437">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-438"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋指定的公用方法，其參數符合指定的引數類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-438">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethod (name As String, types As Type(), modifiers As ParameterModifier()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod (name, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-439"><see cref="T:System.String" />，包含要取得的公用方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-439">The <see cref="T:System.String" /> containing the name of the public method to get.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-440"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之方法的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-440">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
<span data-ttu-id="221cb-441">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-441">-or-</span></span> 
<span data-ttu-id="221cb-442">用以取得沒有參數的方法之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-442">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-443"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-443">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-444">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-444">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-445">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-445">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-446"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示符合指定之需求的公用方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-446">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-447">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-447">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-448"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋指定的公用方法，其參數符合指定引數類型和修飾詞。</span><span class="sxs-lookup"><span data-stu-id="221cb-448">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified public method whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod (name, bindingAttr, binder, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-449"><see cref="T:System.String" />，包含要取得的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-449">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-450">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-450">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-451">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-451">-or-</span></span> 
<span data-ttu-id="221cb-452">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-452">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-453"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-453">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-454">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-454">-or-</span></span> 
 <span data-ttu-id="221cb-455"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-455"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-456"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之方法的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-456">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
<span data-ttu-id="221cb-457">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-457">-or-</span></span> 
<span data-ttu-id="221cb-458">用以取得沒有參數的方法之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-458">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-459"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-459">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-460">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-460">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-461">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-461">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-462"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示符合指定之需求的方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-462">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-463">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-463">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-464"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋指定的參數符合指定引數類型和修飾詞，使用指定的繫結條件約束的方法。</span><span class="sxs-lookup"><span data-stu-id="221cb-464">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="_Type.GetMethod (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-465"><see cref="T:System.String" />，包含要取得的方法名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-465">The <see cref="T:System.String" /> containing the name of the method to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-466">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-466">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-467">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-467">-or-</span></span> 
<span data-ttu-id="221cb-468">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-468">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-469"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-469">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-470">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-470">-or-</span></span> 
 <span data-ttu-id="221cb-471"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-471"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="callConvention"><span data-ttu-id="221cb-472"><see cref="T:System.Reflection.CallingConventions" /> 物件，其指定一組所要使用的規則，而這些規則是關於引數的順序和配置、如何傳遞傳回值、引數使用哪些暫存器以及如何清除堆疊。</span><span class="sxs-lookup"><span data-stu-id="221cb-472">The <see cref="T:System.Reflection.CallingConventions" /> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-473"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之方法的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-473">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the method to get.</span></span>  
  
<span data-ttu-id="221cb-474">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-474">-or-</span></span> 
<span data-ttu-id="221cb-475">用以取得沒有參數的方法之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-475">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-476"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-476">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-477">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-477">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-478">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-478">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-479"><see cref="T:System.Reflection.MethodInfo" /> 物件，表示符合指定之需求的方法 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-479">A <see cref="T:System.Reflection.MethodInfo" /> object representing the method that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-480">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-480">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-481"><xref:System.Type.GetMethod%2A?displayProperty=nameWithType>方法會搜尋指定的方法，其參數符合指定引數類型和修飾詞，使用指定的繫結條件約束和指定的呼叫慣例。</span><span class="sxs-lookup"><span data-stu-id="221cb-481">The <xref:System.Type.GetMethod%2A?displayProperty=nameWithType> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethods">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-482">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetMethods" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-482">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetMethods" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-483">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-483">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-484"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType>方法會取得目前的方法<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-484">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method gets the methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods();" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : unit -&gt; System.Reflection.MethodInfo[]" Usage="_Type.GetMethods " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-485">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethods" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-485">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-486"><see cref="T:System.Reflection.MethodInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義的所有公用方法。</span><span class="sxs-lookup"><span data-stu-id="221cb-486">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all the public methods defined for the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-487">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-487">-or-</span></span> 
<span data-ttu-id="221cb-488"><see cref="T:System.Reflection.MethodInfo" /> 類型的空陣列 (如果沒有為目前 <see cref="T:System.Type" /> 定義公用方法)。</span><span class="sxs-lookup"><span data-stu-id="221cb-488">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no public methods are defined for the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-489">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-489">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-490"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType>方法會傳回在目前的所有公用方法<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-490">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method returns all the public methods of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethods (bindingAttr As BindingFlags) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="_Type.GetMethods bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-491">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-491">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-492">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-492">-or-</span></span> 
<span data-ttu-id="221cb-493">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-493">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-494">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-494">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-495"><see cref="T:System.Reflection.MethodInfo" /> 物件的陣列，代表為目前 <see cref="T:System.Type" /> 定義之符合指定繫結條件約束的所有方法。</span><span class="sxs-lookup"><span data-stu-id="221cb-495">An array of <see cref="T:System.Reflection.MethodInfo" /> objects representing all methods defined for the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-496">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-496">-or-</span></span> 
<span data-ttu-id="221cb-497">如果沒有任何方法定義給目前的 <see cref="T:System.Reflection.MethodInfo" />，或沒有已定義的方法符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-497">An empty array of type <see cref="T:System.Reflection.MethodInfo" />, if no methods are defined for the current <see cref="T:System.Type" />, or if none of the defined methods match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-498">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-498">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-499"><xref:System.Type.GetMethods%2A?displayProperty=nameWithType>方法定義給目前的方法會搜尋<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-499">The <xref:System.Type.GetMethods%2A?displayProperty=nameWithType> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-500">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetNestedType" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-500">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedType" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-501">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-501">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-502"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType>方法會取得特定類型在目前的巢狀<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-502">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method gets a specific type nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetNestedType : string -&gt; Type" Usage="_Type.GetNestedType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-503">包含要取得之巢狀類型名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="221cb-503">The string containing the name of the nested type to get.</span></span></param>
        <summary><span data-ttu-id="221cb-504">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetNestedType(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-504">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-505"><see cref="T:System.Type" /> 物件，表示具有指定之名稱的公用巢狀型別 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-505">A <see cref="T:System.Type" /> object representing the public nested type with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-506">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-506">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-507"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的巢狀類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-507">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the public nested type with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedType">
      <MemberSignature Language="C#" Value="public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetNestedType(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedType (name As String, bindingAttr As BindingFlags) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetNestedType(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetNestedType : string * System.Reflection.BindingFlags -&gt; Type" Usage="_Type.GetNestedType (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-508">包含要取得之巢狀類型名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="221cb-508">The string containing the name of the nested type to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-509">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-509">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-510">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-510">-or-</span></span> 
<span data-ttu-id="221cb-511">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-511">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-512">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-512">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-513"><see cref="T:System.Type" /> 物件，表示符合指定之需求的巢狀型別 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-513">A <see cref="T:System.Type" /> object representing the nested type that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-514">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-514">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-515"><xref:System.Type.GetNestedType%2A?displayProperty=nameWithType>方法會搜尋指定的巢狀型別，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-515">The <xref:System.Type.GetNestedType%2A?displayProperty=nameWithType> method searches for the specified nested type, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNestedTypes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-516">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetNestedTypes" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-516">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetNestedTypes" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-517">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-517">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-518"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType>方法會取得在目前的巢狀類型<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-518">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method gets the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetNestedTypes : unit -&gt; Type[]" Usage="_Type.GetNestedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-519">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetNestedTypes" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-519">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-520"><see cref="T:System.Type" /> 物件的陣列，表示在目前 <see cref="T:System.Type" /> 內形成巢狀的所有型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-520">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-521">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-521">-or-</span></span> 
<span data-ttu-id="221cb-522">如果沒有任何型別在目前 <see cref="T:System.Type" /> 內形成巢狀，則為 <see cref="T:System.Type" /> 型別的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-522">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-523">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-523">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-524"><xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType>方法會傳回在目前的巢狀的所有型別<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-524">The <xref:System.Type.GetNestedTypes%2A?displayProperty=nameWithType> method returns all the types nested within the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNestedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetNestedTypes(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedTypes (bindingAttr As BindingFlags) As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetNestedTypes(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetNestedTypes : System.Reflection.BindingFlags -&gt; Type[]" Usage="_Type.GetNestedTypes bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-525">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-525">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-526">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-526">-or-</span></span> 
<span data-ttu-id="221cb-527">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-527">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-528">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> 方法之存取權，並使用指定的繫結條件約束，搜尋在目前 <see cref="T:System.Type" /> 內形成巢狀的型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-528">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)" /> method, and searches for the types nested within the current <see cref="T:System.Type" />, using the specified binding constraints.</span></span></summary>
        <returns><span data-ttu-id="221cb-529"><see cref="T:System.Type" /> 物件的陣列，表示在目前 <see cref="T:System.Type" /> 內形成巢狀的所有型別皆符合指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-529">An array of <see cref="T:System.Type" /> objects representing all the types nested within the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-530">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-530">-or-</span></span> 
<span data-ttu-id="221cb-531">如果沒有任何型別在目前 <see cref="T:System.Type" /> 內形成巢狀，或沒有巢狀型別符合繫結條件約束，則為 <see cref="T:System.Type" /> 型別的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-531">An empty array of type <see cref="T:System.Type" />, if no types are nested within the current <see cref="T:System.Type" />, or if none of the nested types match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-532">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-532">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-533">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetProperties" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-533">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperties" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-534">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-534">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-535"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType>方法會取得目前的屬性<xref:System.Type>...</span><span class="sxs-lookup"><span data-stu-id="221cb-535">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method gets the properties of the current <xref:System.Type>..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties () As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties();" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : unit -&gt; System.Reflection.PropertyInfo[]" Usage="_Type.GetProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-536">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperties" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-536">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-537"><see cref="T:System.Reflection.PropertyInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 的所有公用屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-537">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all public properties of the current <see cref="T:System.Type" />.</span></span>  
  
<span data-ttu-id="221cb-538">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-538">-or-</span></span> 
<span data-ttu-id="221cb-539">類型 <see cref="T:System.Reflection.PropertyInfo" /> 的空陣列，如果目前 <see cref="T:System.Type" /> 並沒有公用屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-539">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have public properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-540">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-540">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-541"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType>方法會傳回所有目前的公用屬性<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-541">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method returns all the public properties of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo[]" Usage="_Type.GetProperties bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="221cb-542">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-542">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-543">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-543">-or-</span></span> 
<span data-ttu-id="221cb-544">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-544">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-545">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-545">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-546"><see cref="T:System.Reflection.PropertyInfo" /> 物件的陣列，代表目前 <see cref="T:System.Type" /> 中符合指定繫結條件約束的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-546">An array of <see cref="T:System.Reflection.PropertyInfo" /> objects representing all properties of the current <see cref="T:System.Type" /> that match the specified binding constraints.</span></span>  
  
<span data-ttu-id="221cb-547">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-547">-or-</span></span> 
<span data-ttu-id="221cb-548">如果目前 <see cref="T:System.Reflection.PropertyInfo" /> 沒有屬性，或沒有屬性符合繫結條件約束，則為 <see cref="T:System.Type" /> 類型的空陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-548">An empty array of type <see cref="T:System.Reflection.PropertyInfo" />, if the current <see cref="T:System.Type" /> does not have properties, or if none of the properties match the binding constraints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-549">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-549">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-550"><xref:System.Type.GetProperties%2A?displayProperty=nameWithType>方法會搜尋目前的屬性<xref:System.Type>，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-550">The <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperty">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-551">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.GetProperty" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-551">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.GetProperty" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-552">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-552">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-553"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會取得目前的特定屬性<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-553">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method gets a specific property of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-554"><see cref="T:System.String" />，包含要取得的公用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-554">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <summary><span data-ttu-id="221cb-555">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-555">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-556"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示具有指定之名稱的公用屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-556">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-557">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-557">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-558"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋具有指定名稱的公用屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-558">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-559"><see cref="T:System.String" />，包含要取得的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-559">The <see cref="T:System.String" /> containing the name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-560">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-560">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-561">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-561">-or-</span></span> 
<span data-ttu-id="221cb-562">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-562">Zero, to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="221cb-563">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-563">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-564"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示符合指定之需求的屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-564">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-565">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-565">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-566"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋指定的屬性，使用指定的繫結條件約束。</span><span class="sxs-lookup"><span data-stu-id="221cb-566">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * Type -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-567"><see cref="T:System.String" />，包含要取得的公用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-567">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="221cb-568">屬性的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-568">The return type of the property.</span></span></param>
        <summary><span data-ttu-id="221cb-569">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Type)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-569">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-570"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示具有指定之名稱的公用屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-570">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property with the specified name, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-571">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-571">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-572"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋具有指定的名稱和傳回類型的公用屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-572">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the public property with the specified name and return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * Type[] -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-573"><see cref="T:System.String" />，包含要取得的公用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-573">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-574"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之索引屬性的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-574">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
<span data-ttu-id="221cb-575">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-575">-or-</span></span> 
<span data-ttu-id="221cb-576">用以取得未編製索引的屬性之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-576">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <summary><span data-ttu-id="221cb-577">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Type[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-577">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-578"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示其參數符合指定之引數類型的公用屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-578">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-579">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-579">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-580"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋指定的公用屬性，其參數符合指定的引數類型...</span><span class="sxs-lookup"><span data-stu-id="221cb-580">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types..</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * Type * Type[] -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, returnType, types)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-581"><see cref="T:System.String" />，包含要取得的公用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-581">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="221cb-582">屬性的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-582">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-583"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之索引屬性的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-583">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
<span data-ttu-id="221cb-584">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-584">-or-</span></span> 
<span data-ttu-id="221cb-585">用以取得未編製索引的屬性之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-585">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <summary><span data-ttu-id="221cb-586">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-586">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-587"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示其參數符合指定之引數類型的公用屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-587">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property whose parameters match the specified argument types, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-588">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-588">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-589"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋指定的公用屬性，其參數符合指定的引數類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-589">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, returnType As Type, types As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-590"><see cref="T:System.String" />，包含要取得的公用屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-590">The <see cref="T:System.String" /> containing the name of the public property to get.</span></span></param>
        <param name="returnType"><span data-ttu-id="221cb-591">屬性的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-591">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-592"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之索引屬性的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-592">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
<span data-ttu-id="221cb-593">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-593">-or-</span></span> 
<span data-ttu-id="221cb-594">用以取得未編製索引的屬性之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-594">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-595"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-595">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-596">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-596">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-597">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-597">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-598"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示符合指定之需求的公用屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-598">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the public property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-599">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-599">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-600"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋指定的公用屬性，其參數符合指定引數類型和修飾詞。</span><span class="sxs-lookup"><span data-stu-id="221cb-600">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified public property whose parameters match the specified argument types and modifiers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::PropertyInfo ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string * System.Reflection.BindingFlags * System.Reflection.Binder * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="_Type.GetProperty (name, bindingAttr, binder, returnType, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-601"><see cref="T:System.String" />，包含要取得的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-601">The <see cref="T:System.String" /> containing the name of the property to get.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="221cb-602">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-602">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span>  
  
<span data-ttu-id="221cb-603">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-603">-or-</span></span> 
<span data-ttu-id="221cb-604">零，傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-604">Zero, to return <see langword="null" />.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-605"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-605">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-606">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-606">-or-</span></span> 
 <span data-ttu-id="221cb-607"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-607"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="221cb-608">屬性的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-608">The return type of the property.</span></span></param>
        <param name="types"><span data-ttu-id="221cb-609"><see cref="T:System.Type" /> 物件的陣列，代表所要取得之索引屬性的參數數目、順序和類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-609">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</span></span>  
  
<span data-ttu-id="221cb-610">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-610">-or-</span></span> 
<span data-ttu-id="221cb-611">用以取得未編製索引的屬性之 <see cref="T:System.Type" /> 類型的空陣列 (也就是，Type[] types = new Type[0])。</span><span class="sxs-lookup"><span data-stu-id="221cb-611">An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-612"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="types" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-612">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="types" /> array.</span></span> <span data-ttu-id="221cb-613">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-613">The default binder does not process this parameter.</span></span></param>
        <summary><span data-ttu-id="221cb-614">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-614">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-615"><see cref="T:System.Reflection.PropertyInfo" /> 物件，表示符合指定之需求的屬性 (如有找到)；否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-615">A <see cref="T:System.Reflection.PropertyInfo" /> object representing the property that matches the specified requirements, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-616">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-616">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-617"><xref:System.Type.GetProperty%2A?displayProperty=nameWithType>方法會搜尋指定的參數符合指定引數類型和修飾詞，使用指定的繫結條件約束的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-617">The <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Type.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-618">為 COM 物件提供與版本無關的 <see cref="M:System.Type.GetType" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-618">Provides COM objects with version-independent access to the <see cref="M:System.Type.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-619">目前的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-619">The current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-620">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-620">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-621"><xref:System.Type.GetType%2A?displayProperty=nameWithType>方法會取得目前<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-621">The <xref:System.Type.GetType%2A?displayProperty=nameWithType> method gets the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_Type.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="221cb-622">要傳回的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="221cb-622">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="221cb-623">類型資訊的地區設定識別項。</span><span class="sxs-lookup"><span data-stu-id="221cb-623">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="221cb-624">接收要求的類型資訊物件的指標。</span><span class="sxs-lookup"><span data-stu-id="221cb-624">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="221cb-625">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span><span class="sxs-lookup"><span data-stu-id="221cb-625">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-626">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-626">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="221cb-627">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="221cb-627">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_Type.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="221cb-628">指向接收物件提供的類型資訊介面數目的位置。</span><span class="sxs-lookup"><span data-stu-id="221cb-628">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="221cb-629">擷取物件提供的類型資訊介面數目 (0 或 1)。</span><span class="sxs-lookup"><span data-stu-id="221cb-629">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-630">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-630">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="221cb-631">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="221cb-631">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GUID">
      <MemberSignature Language="C#" Value="public Guid GUID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid GUID" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.GUID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GUID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid GUID { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.GUID : Guid" Usage="System.Runtime.InteropServices._Type.GUID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-632">為 COM 物件提供與版本無關的 <see cref="P:System.Type.GUID" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-632">Provides COM objects with version-independent access to the <see cref="P:System.Type.GUID" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-633">與 <see cref="T:System.Type" /> 相關聯的 GUID。</span><span class="sxs-lookup"><span data-stu-id="221cb-633">The GUID associated with the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-634">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-634">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-635"><xref:System.Type.GUID%2A?displayProperty=nameWithType>屬性會取得相關聯的 GUID <xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-635">The <xref:System.Type.GUID%2A?displayProperty=nameWithType> property gets the GUID associated with the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasElementType">
      <MemberSignature Language="C#" Value="public bool HasElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasElementType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.HasElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasElementType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasElementType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasElementType : bool" Usage="System.Runtime.InteropServices._Type.HasElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-636">為 COM 物件提供與版本無關的 <see cref="P:System.Type.HasElementType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-636">Provides COM objects with version-independent access to the <see cref="P:System.Type.HasElementType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-637">如果 <see langword="true" /> 是陣列、指標或以傳址方式傳遞，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-637"><see langword="true" /> if the <see cref="T:System.Type" /> is an array, a pointer, or is passed by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-638">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-638">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-639"><xref:System.Type.HasElementType%2A?displayProperty=nameWithType> 屬性</span><span class="sxs-lookup"><span data-stu-id="221cb-639">The <xref:System.Type.HasElementType%2A?displayProperty=nameWithType> property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_Type.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="221cb-640">辨識成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-640">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="221cb-641">保留供未來使用。</span><span class="sxs-lookup"><span data-stu-id="221cb-641">Reserved for future use.</span></span> <span data-ttu-id="221cb-642">必須是 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="221cb-642">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="221cb-643">地區設定內容，用於解譯引數。</span><span class="sxs-lookup"><span data-stu-id="221cb-643">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="221cb-644">描述呼叫之內容的旗標。</span><span class="sxs-lookup"><span data-stu-id="221cb-644">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="221cb-645">結構的指標，此結構包含引數陣列、指名引數之 DISPID 引數的陣列，以及陣列中項目數目的計數。</span><span class="sxs-lookup"><span data-stu-id="221cb-645">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="221cb-646">指向用於儲存結果之位置的指標。</span><span class="sxs-lookup"><span data-stu-id="221cb-646">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="221cb-647">包含例外狀況資訊的結構指標。</span><span class="sxs-lookup"><span data-stu-id="221cb-647">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="221cb-648">第一個有錯誤的引數索引。</span><span class="sxs-lookup"><span data-stu-id="221cb-648">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="221cb-649">提供物件所公開的屬性和方法的存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-649">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-650">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-650">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="221cb-651">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="221cb-651">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeMember">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="221cb-652">為 COM 物件提供與版本無關的 <see cref="Overload:System.Type.InvokeMember" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-652">Provides COM objects with version-independent access to the <see cref="Overload:System.Type.InvokeMember" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-653">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-653">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-654"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>方法會叫用指定成員的目前<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-654">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes a specific member of the current <xref:System.Type>.</span></span>  
  
 <span data-ttu-id="221cb-655">。</span><span class="sxs-lookup"><span data-stu-id="221cb-655">.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] -&gt; obj" Usage="_Type.InvokeMember (name, invokeAttr, binder, target, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-656"><see cref="T:System.String" />，包含要叫用的建構函式、方法、屬性或欄位成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-656">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
<span data-ttu-id="221cb-657">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-657">-or-</span></span> 
<span data-ttu-id="221cb-658">空字串 ("")，要叫用預設成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-658">An empty string ("") to invoke the default member.</span></span>  
  
<span data-ttu-id="221cb-659">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-659">-or-</span></span> 
<span data-ttu-id="221cb-660">若為 IDispatch 成為，則為代表 DispID 的字串，例如 "[DispID=3]"。</span><span class="sxs-lookup"><span data-stu-id="221cb-660">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="221cb-661">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-661">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="221cb-662">該存取可以是其中一個 <see langword="BindingFlags" />，例如 <see langword="Public" />、<see langword="NonPublic" />、<see langword="Private" />、<see langword="InvokeMethod" />、<see langword="GetField" /> 等等。</span><span class="sxs-lookup"><span data-stu-id="221cb-662">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="221cb-663">不需要指定查閱的類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-663">The type of lookup need not be specified.</span></span> <span data-ttu-id="221cb-664">如果省略查閱的類型，則會套用 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-664">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-665"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-665">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-666">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-666">-or-</span></span> 
 <span data-ttu-id="221cb-667"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-667"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="221cb-668">要叫用指定成員的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-668">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="221cb-669">包含引數的陣列，這些引數會傳遞給要叫用的成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-669">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <summary><span data-ttu-id="221cb-670">為 COM 物件提供與版本無關的 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-670">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-671"><see cref="T:System.Object" />，表示叫用之成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="221cb-671">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-672">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-672">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-673"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單。</span><span class="sxs-lookup"><span data-stu-id="221cb-673">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_Type.InvokeMember (name, invokeAttr, binder, target, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-674"><see cref="T:System.String" />，包含要叫用的建構函式、方法、屬性或欄位成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-674">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
<span data-ttu-id="221cb-675">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-675">-or-</span></span> 
<span data-ttu-id="221cb-676">空字串 ("")，要叫用預設成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-676">An empty string ("") to invoke the default member.</span></span>  
  
<span data-ttu-id="221cb-677">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-677">-or-</span></span> 
<span data-ttu-id="221cb-678">若為 IDispatch 成為，則為代表 DispID 的字串，例如 "[DispID=3]"。</span><span class="sxs-lookup"><span data-stu-id="221cb-678">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="221cb-679">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-679">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="221cb-680">該存取可以是其中一個 <see langword="BindingFlags" />，例如 <see langword="Public" />、<see langword="NonPublic" />、<see langword="Private" />、<see langword="InvokeMethod" />、<see langword="GetField" /> 等等。</span><span class="sxs-lookup"><span data-stu-id="221cb-680">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="221cb-681">不需要指定查閱的類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-681">The type of lookup need not be specified.</span></span> <span data-ttu-id="221cb-682">如果省略查閱的類型，則會套用 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-682">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-683"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-683">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-684">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-684">-or-</span></span> 
 <span data-ttu-id="221cb-685"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-685"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="221cb-686">要叫用指定成員的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-686">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="221cb-687">包含引數的陣列，這些引數會傳遞給要叫用的成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-687">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <param name="culture"><span data-ttu-id="221cb-688"><see cref="T:System.Globalization.CultureInfo" /> 物件，代表要使用的全球化地區設定，進行特定地區設定轉換時可能需要這個物件，例如將數值的 String 轉換成 Double。</span><span class="sxs-lookup"><span data-stu-id="221cb-688">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span></span>  
  
<span data-ttu-id="221cb-689">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-689">-or-</span></span> 
 <span data-ttu-id="221cb-690"><see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-690"><see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <summary><span data-ttu-id="221cb-691">為 COM 物件提供與版本無關的 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-691">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-692"><see cref="T:System.Object" />，表示叫用之成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="221cb-692">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-693">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-693">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-694"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單和文化特性。</span><span class="sxs-lookup"><span data-stu-id="221cb-694">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters);" />
      <MemberSignature Language="F#" Value="abstract member InvokeMember : string * System.Reflection.BindingFlags * System.Reflection.Binder * obj * obj[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] -&gt; obj" Usage="_Type.InvokeMember (name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="221cb-695"><see cref="T:System.String" />，包含要叫用的建構函式、方法、屬性或欄位成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-695">The <see cref="T:System.String" /> containing the name of the constructor, method, property, or field member to invoke.</span></span>  
  
<span data-ttu-id="221cb-696">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-696">-or-</span></span> 
<span data-ttu-id="221cb-697">空字串 ("")，要叫用預設成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-697">An empty string ("") to invoke the default member.</span></span>  
  
<span data-ttu-id="221cb-698">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-698">-or-</span></span> 
<span data-ttu-id="221cb-699">若為 IDispatch 成為，則為代表 DispID 的字串，例如 "[DispID=3]"。</span><span class="sxs-lookup"><span data-stu-id="221cb-699">For IDispatch members, a string representing the DispID, for example "[DispID=3]".</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="221cb-700">位元遮罩，由一或多個 <see cref="T:System.Reflection.BindingFlags" /> 組成，而這些旗標會指定執行搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="221cb-700">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags" /> that specify how the search is conducted.</span></span> <span data-ttu-id="221cb-701">該存取可以是其中一個 <see langword="BindingFlags" />，例如 <see langword="Public" />、<see langword="NonPublic" />、<see langword="Private" />、<see langword="InvokeMethod" />、<see langword="GetField" /> 等等。</span><span class="sxs-lookup"><span data-stu-id="221cb-701">The access can be one of the <see langword="BindingFlags" /> such as <see langword="Public" />, <see langword="NonPublic" />, <see langword="Private" />, <see langword="InvokeMethod" />, <see langword="GetField" />, and so on.</span></span> <span data-ttu-id="221cb-702">不需要指定查閱的類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-702">The type of lookup need not be specified.</span></span> <span data-ttu-id="221cb-703">如果省略查閱的類型，則會套用 <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-703">If the type of lookup is omitted, <see langword="BindingFlags.Public" /> | <see langword="BindingFlags.Instance" /> will apply.</span></span></param>
        <param name="binder"><span data-ttu-id="221cb-704"><see cref="T:System.Reflection.Binder" /> 物件，定義一組屬性並啟用繫結，可包含多載方法的選擇、引數類型的強制型轉，以及透過反映的成員引動過程。</span><span class="sxs-lookup"><span data-stu-id="221cb-704">A <see cref="T:System.Reflection.Binder" /> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.</span></span>  
  
<span data-ttu-id="221cb-705">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-705">-or-</span></span> 
 <span data-ttu-id="221cb-706"><see langword="null" />，則使用 <see cref="P:System.Type.DefaultBinder" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-706"><see langword="null" />, to use the <see cref="P:System.Type.DefaultBinder" />.</span></span></param>
        <param name="target"><span data-ttu-id="221cb-707">要叫用指定成員的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-707">The <see cref="T:System.Object" /> on which to invoke the specified member.</span></span></param>
        <param name="args"><span data-ttu-id="221cb-708">包含引數的陣列，這些引數會傳遞給要叫用的成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-708">An array containing the arguments to pass to the member to invoke.</span></span></param>
        <param name="modifiers"><span data-ttu-id="221cb-709"><see cref="T:System.Reflection.ParameterModifier" /> 物件的陣列，代表在 <paramref name="args" /> 陣列中與對應項目關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-709">An array of <see cref="T:System.Reflection.ParameterModifier" /> objects representing the attributes associated with the corresponding element in the <paramref name="args" /> array.</span></span> <span data-ttu-id="221cb-710">參數的關聯屬性儲存在成員的簽章中。</span><span class="sxs-lookup"><span data-stu-id="221cb-710">A parameter's associated attributes are stored in the member's signature.</span></span> <span data-ttu-id="221cb-711">預設的繫結器不會處理這個參數。</span><span class="sxs-lookup"><span data-stu-id="221cb-711">The default binder does not process this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="221cb-712"><see cref="T:System.Globalization.CultureInfo" /> 物件，代表要使用的全球化地區設定，進行特定地區設定轉換時可能需要這個物件，例如將數值的 String 轉換成 Double。</span><span class="sxs-lookup"><span data-stu-id="221cb-712">The <see cref="T:System.Globalization.CultureInfo" /> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.</span></span>  
  
<span data-ttu-id="221cb-713">-或-</span><span class="sxs-lookup"><span data-stu-id="221cb-713">-or-</span></span> 
 <span data-ttu-id="221cb-714"><see langword="null" />，則使用目前執行緒的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-714"><see langword="null" /> to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <param name="namedParameters"><span data-ttu-id="221cb-715">陣列，包含 <paramref name="args" /> 陣列中的值所要傳遞之目標參數的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-715">An array containing the names of the parameters to which the values in the <paramref name="args" /> array are passed.</span></span></param>
        <summary><span data-ttu-id="221cb-716">為 COM 物件提供與版本無關的 <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-716">Provides COM objects with version-independent access to the <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-717"><see cref="T:System.Object" />，表示叫用之成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="221cb-717">An <see cref="T:System.Object" /> representing the return value of the invoked member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-718">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-718">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-719"><xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>方法會叫用指定的成員，使用指定的繫結條件約束並符合指定的引數清單、 修飾詞和文化特性。</span><span class="sxs-lookup"><span data-stu-id="221cb-719">The <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbstract">
      <MemberSignature Language="C#" Value="public bool IsAbstract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbstract" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAbstract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbstract As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbstract { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbstract : bool" Usage="System.Runtime.InteropServices._Type.IsAbstract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-720">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsAbstract" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-720">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAbstract" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-721">如果 <see cref="T:System.Type" /> 是抽象，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-721"><see langword="true" /> if the <see cref="T:System.Type" /> is abstract; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-722">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-722">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-723"><xref:System.Type.IsAbstract%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>為抽象並且必須被覆寫。</span><span class="sxs-lookup"><span data-stu-id="221cb-723">The <xref:System.Type.IsAbstract%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnsiClass">
      <MemberSignature Language="C#" Value="public bool IsAnsiClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnsiClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAnsiClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnsiClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnsiClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnsiClass : bool" Usage="System.Runtime.InteropServices._Type.IsAnsiClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-724">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsAnsiClass" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-724">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAnsiClass" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-725">如果為 <see langword="true" /> 選取字串格式屬性 <see langword="AnsiClass" />，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-725"><see langword="true" /> if the string format attribute <see langword="AnsiClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-726">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-726">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-727"><xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType>屬性會取得值，指出字串格式屬性是否`AnsiClass`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-727">The <xref:System.Type.IsAnsiClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Runtime.InteropServices._Type.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-728">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsArray" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-728">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsArray" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-729">如果 <see langword="true" /> 是陣列，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-729"><see langword="true" /> if the <see cref="T:System.Type" /> is an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-730">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-730">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-731"><xref:System.Type.IsArray%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是陣列。</span><span class="sxs-lookup"><span data-stu-id="221cb-731">The <xref:System.Type.IsArray%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignableFrom">
      <MemberSignature Language="C#" Value="public bool IsAssignableFrom (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAssignableFrom(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAssignableFrom (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAssignableFrom(Type ^ c);" />
      <MemberSignature Language="F#" Value="abstract member IsAssignableFrom : Type -&gt; bool" Usage="_Type.IsAssignableFrom c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="221cb-732">與目前的 <see cref="T:System.Type" /> 相比較的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-732">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="221cb-733">為 COM 物件提供與版本無關的 <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-733">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-734">如果 <paramref name="c" /> 和目前的 <see cref="T:System.Type" /> 表示相同類型，或者如果目前的 <see cref="T:System.Type" /> 在 <paramref name="c" /> 的繼承階層架構當中，或者如果目前的 <see cref="T:System.Type" /> 是 <paramref name="c" /> 實作的介面，或者如果 <paramref name="c" /> 是泛型型別參數，而目前的 <see cref="T:System.Type" /> 表示 <paramref name="c" /> 的條件約束之一，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-734"><see langword="true" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same type, or if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of <paramref name="c" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="c" /> implements, or if <paramref name="c" /> is a generic type parameter and the current <see cref="T:System.Type" /> represents one of the constraints of <paramref name="c" />.</span></span> <span data-ttu-id="221cb-735">如果以上各項條件都不成立，或 <paramref name="c" /> 為 <see langword="null" />，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-735"><see langword="false" /> if none of these conditions are the case, or if <paramref name="c" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-736">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-736">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoClass">
      <MemberSignature Language="C#" Value="public bool IsAutoClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutoClass : bool" Usage="System.Runtime.InteropServices._Type.IsAutoClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-737">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsAutoClass" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-737">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoClass" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-738">如果為 <see langword="true" /> 選取字串格式屬性 <see langword="AutoClass" />，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-738"><see langword="true" /> if the string format attribute <see langword="AutoClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-739">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-739">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-740"><xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType>屬性會取得值，指出字串格式屬性是否`AutoClass`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-740">The <xref:System.Type.IsAutoClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAutoLayout">
      <MemberSignature Language="C#" Value="public bool IsAutoLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsAutoLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAutoLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAutoLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAutoLayout : bool" Usage="System.Runtime.InteropServices._Type.IsAutoLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-741">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsAutoLayout" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-741">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsAutoLayout" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-742">如果為 <see cref="T:System.Type" /> 選取類別配置屬性 <see langword="true" />，則為 <see langword="AutoLayout" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-742"><see langword="true" /> if the class layout attribute <see langword="AutoLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-743">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-743">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-744"><xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType>屬性會取得值，指出是否類別配置屬性`AutoLayout`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-744">The <xref:System.Type.IsAutoLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByRef">
      <MemberSignature Language="C#" Value="public bool IsByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByRef { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsByRef : bool" Usage="System.Runtime.InteropServices._Type.IsByRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-745">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsByRef" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-745">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsByRef" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-746">如果 <see cref="T:System.Type" /> 是以傳址方式傳遞，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-746"><see langword="true" /> if the <see cref="T:System.Type" /> is passed by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-747">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-747">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-748"><xref:System.Type.IsByRef%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>傳址方式傳遞。</span><span class="sxs-lookup"><span data-stu-id="221cb-748">The <xref:System.Type.IsByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is passed by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClass : bool" Usage="System.Runtime.InteropServices._Type.IsClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-749">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsClass" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-749">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsClass" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-750">如果 <see cref="T:System.Type" /> 是類別，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-750"><see langword="true" /> if the <see cref="T:System.Type" /> is a class; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-751">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-751">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-752"><xref:System.Type.IsClass%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>類別; 也就是說，不是實值型別或介面。</span><span class="sxs-lookup"><span data-stu-id="221cb-752">The <xref:System.Type.IsClass%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCOMObject">
      <MemberSignature Language="C#" Value="public bool IsCOMObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCOMObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsCOMObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCOMObject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCOMObject { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCOMObject : bool" Usage="System.Runtime.InteropServices._Type.IsCOMObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-753">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsCOMObject" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-753">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsCOMObject" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-754">如果 <see langword="true" /> 是 COM 物件，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-754"><see langword="true" /> if the <see cref="T:System.Type" /> is a COM object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-755">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-755">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-756"><xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是 COM 物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-756">The <xref:System.Type.IsCOMObject%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a COM object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContextful">
      <MemberSignature Language="C#" Value="public bool IsContextful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContextful" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsContextful" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContextful As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContextful { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContextful : bool" Usage="System.Runtime.InteropServices._Type.IsContextful" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-757">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsContextful" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-757">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsContextful" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-758">如果在內容中可以裝載 <see cref="T:System.Type" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-758"><see langword="true" /> if the <see cref="T:System.Type" /> can be hosted in a context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-759">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-759">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-760"><xref:System.Type.IsContextful%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>可以裝載在內容中。</span><span class="sxs-lookup"><span data-stu-id="221cb-760">The <xref:System.Type.IsContextful%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> can be hosted in a context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_Type.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="221cb-761">套用自訂屬性的 <see langword="Type" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-761">The <see langword="Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="221cb-762">指定是否要搜尋這個成員的繼承鏈結以尋找屬性。</span><span class="sxs-lookup"><span data-stu-id="221cb-762">Specifies whether to search this member's inheritance chain to find the attributes.</span></span></param>
        <summary><span data-ttu-id="221cb-763">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-763">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-764">如果一或多個 <paramref name="attributeType" /> 的執行個體套用至這個成員，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-764"><see langword="true" /> if one or more instance of <paramref name="attributeType" /> is applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-765">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-765">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-766"><xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType>方法會指出是否有一或多個執行個體`attributeType`套用至這個成員。</span><span class="sxs-lookup"><span data-stu-id="221cb-766">The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=nameWithType> method indicates whether one or more instance of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnum { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnum : bool" Usage="System.Runtime.InteropServices._Type.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-767">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsEnum" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-767">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsEnum" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-768">如果目前 <see langword="true" /> 代表列舉，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-768"><see langword="true" /> if the current <see cref="T:System.Type" /> represents an enumeration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-769">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-769">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-770"><xref:System.Type.IsEnum%2A?displayProperty=nameWithType>屬性會取得值，指出是否目前<xref:System.Type>表示列舉型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-770">The <xref:System.Type.IsEnum%2A?displayProperty=nameWithType> property gets a value indicating whether the current <xref:System.Type> represents an enumeration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExplicitLayout">
      <MemberSignature Language="C#" Value="public bool IsExplicitLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExplicitLayout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsExplicitLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExplicitLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExplicitLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsExplicitLayout : bool" Usage="System.Runtime.InteropServices._Type.IsExplicitLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-771">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsExplicitLayout" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-771">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsExplicitLayout" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-772">如果為 <see cref="T:System.Type" /> 選取類別配置屬性 <see langword="true" />，則為 <see langword="ExplicitLayout" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-772"><see langword="true" /> if the class layout attribute <see langword="ExplicitLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-773">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-773">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-774"><xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType>屬性會取得值，指出是否類別配置屬性`ExplicitLayout`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-774">The <xref:System.Type.IsExplicitLayout%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImport">
      <MemberSignature Language="C#" Value="public bool IsImport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImport" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsImport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImport As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImport { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImport : bool" Usage="System.Runtime.InteropServices._Type.IsImport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-775">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsImport" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-775">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsImport" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-776">如果 <see cref="T:System.Type" /> 有 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-776"><see langword="true" /> if the <see cref="T:System.Type" /> has <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-777">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-777">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-778"><xref:System.Type.IsImport%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>具有<xref:System.Runtime.InteropServices.ComImportAttribute>，它是否從 COM 類型程式庫匯入。</span><span class="sxs-lookup"><span data-stu-id="221cb-778">The <xref:System.Type.IsImport%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInstanceOfType(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInstanceOfType (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member IsInstanceOfType : obj -&gt; bool" Usage="_Type.IsInstanceOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="221cb-779">要與目前 <see cref="T:System.Type" /> 比較的物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-779">The object to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="221cb-780">為 COM 物件提供與版本無關的 <see cref="M:System.Type.IsInstanceOfType(System.Object)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-780">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsInstanceOfType(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-781">如果在目前 <see cref="T:System.Type" /> 位於 <paramref name="o" /> 所代表之物件的階層架構中，或者目前 <see cref="T:System.Type" /> 位於 <paramref name="o" /> 支援的介面中，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-781"><see langword="true" /> if the current <see cref="T:System.Type" /> is in the inheritance hierarchy of the object represented by <paramref name="o" />, or if the current <see cref="T:System.Type" /> is an interface that <paramref name="o" /> supports.</span></span> <span data-ttu-id="221cb-782">如果都不是這些情況，或者如果 <paramref name="o" /> 為 <see langword="null" />，又或者如果目前 <see cref="T:System.Type" /> 為開放式泛型型別 (亦即 <see cref="P:System.Type.ContainsGenericParameters" /> 會傳回 <see langword="true" />)，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-782"><see langword="false" /> if neither of these conditions is the case, or if <paramref name="o" /> is <see langword="null" />, or if the current <see cref="T:System.Type" /> is an open generic type (that is, <see cref="P:System.Type.ContainsGenericParameters" /> returns <see langword="true" />).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-783">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-783">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-784"><xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType>方法會判斷指定的物件是否為目前的執行個體<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-784">The <xref:System.Type.IsInstanceOfType%2A?displayProperty=nameWithType> method determines whether the specified object is an instance of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsInterface" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterface { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInterface : bool" Usage="System.Runtime.InteropServices._Type.IsInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-785">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsInterface" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-785">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsInterface" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-786">如果 <see langword="true" /> 是介面，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-786"><see langword="true" /> if the <see cref="T:System.Type" /> is an interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-787">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-787">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-788"><xref:System.Type.IsInterface%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>介面; 也就是說，不類別或實值型別。</span><span class="sxs-lookup"><span data-stu-id="221cb-788">The <xref:System.Type.IsInterface%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLayoutSequential">
      <MemberSignature Language="C#" Value="public bool IsLayoutSequential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutSequential" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsLayoutSequential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLayoutSequential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLayoutSequential { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLayoutSequential : bool" Usage="System.Runtime.InteropServices._Type.IsLayoutSequential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-789">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsLayoutSequential" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-789">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsLayoutSequential" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-790">如果為 <see cref="T:System.Type" /> 選取類別配置屬性 <see langword="true" />，則為 <see langword="SequentialLayout" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-790"><see langword="true" /> if the class layout attribute <see langword="SequentialLayout" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-791">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-791">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-792"><xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType>屬性會取得值，指出是否類別配置屬性`SequentialLayout`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-792">The <xref:System.Type.IsLayoutSequential%2A?displayProperty=nameWithType> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarshalByRef">
      <MemberSignature Language="C#" Value="public bool IsMarshalByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarshalByRef" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsMarshalByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarshalByRef As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarshalByRef { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarshalByRef : bool" Usage="System.Runtime.InteropServices._Type.IsMarshalByRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-793">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsMarshalByRef" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-793">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsMarshalByRef" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-794">如果 <see langword="true" /> 是以傳址方式進行封送處理，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-794"><see langword="true" /> if the <see cref="T:System.Type" /> is marshaled by reference; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-795">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-795">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-796"><xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType>屬性會取得值，指出型別是否依參考封送處理。</span><span class="sxs-lookup"><span data-stu-id="221cb-796">The <xref:System.Type.IsMarshalByRef%2A?displayProperty=nameWithType> property gets a value indicating whether the Type is marshaled by reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedAssembly">
      <MemberSignature Language="C#" Value="public bool IsNestedAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedAssembly : bool" Usage="System.Runtime.InteropServices._Type.IsNestedAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-797">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedAssembly" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-797">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedAssembly" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-798">如果 <see langword="true" /> 是巢狀並只在它自己的組件內為可見，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-798"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-799">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-799">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-800"><xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>為巢狀並只在它自己組件內可見。</span><span class="sxs-lookup"><span data-stu-id="221cb-800">The <xref:System.Type.IsNestedAssembly%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamANDAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamANDAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamANDAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamANDAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamANDAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamANDAssem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedFamANDAssem : bool" Usage="System.Runtime.InteropServices._Type.IsNestedFamANDAssem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-801">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedFamANDAssem" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-801">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamANDAssem" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-802">如果 <see cref="T:System.Type" /> 是巢狀並只對同時屬於它自己家族和它自己組件的類別為可見，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-802"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-803">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-803">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-804"><xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>為巢狀並只為可見的類別對屬於它自己家族和它自己組件。</span><span class="sxs-lookup"><span data-stu-id="221cb-804">The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamily">
      <MemberSignature Language="C#" Value="public bool IsNestedFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamily { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedFamily : bool" Usage="System.Runtime.InteropServices._Type.IsNestedFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-805">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedFamily" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-805">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamily" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-806">如果 <see langword="true" /> 是巢狀並只在它自己的家族內為可見，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-806"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only within its own family; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-807">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-807">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-808"><xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>為巢狀並只在它自己的家族內為可見。</span><span class="sxs-lookup"><span data-stu-id="221cb-808">The <xref:System.Type.IsNestedFamily%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedFamORAssem">
      <MemberSignature Language="C#" Value="public bool IsNestedFamORAssem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedFamORAssem" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedFamORAssem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedFamORAssem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedFamORAssem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedFamORAssem : bool" Usage="System.Runtime.InteropServices._Type.IsNestedFamORAssem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-809">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedFamORAssem" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-809">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedFamORAssem" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-810">如果 <see langword="true" /> 是巢狀並只對屬於它自己家族或它自己組件的類別為可見，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-810"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-811">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-811">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-812"><xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>為巢狀並只對屬於它自己家族的類別或它自己組件為可見。</span><span class="sxs-lookup"><span data-stu-id="221cb-812">The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPrivate">
      <MemberSignature Language="C#" Value="public bool IsNestedPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPrivate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedPrivate : bool" Usage="System.Runtime.InteropServices._Type.IsNestedPrivate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-813">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedPrivate" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-813">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPrivate" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-814">如果 <see langword="true" /> 是巢狀並且宣告為私用，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-814"><see langword="true" /> if the <see cref="T:System.Type" /> is nested and declared private; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-815">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-815">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-816"><xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是巢狀並且宣告為私用。</span><span class="sxs-lookup"><span data-stu-id="221cb-816">The <xref:System.Type.IsNestedPrivate%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is nested and declared private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNestedPublic">
      <MemberSignature Language="C#" Value="public bool IsNestedPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNestedPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNestedPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNestedPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNestedPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNestedPublic : bool" Usage="System.Runtime.InteropServices._Type.IsNestedPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-817">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNestedPublic" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-817">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNestedPublic" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-818">如果類別是巢狀並且宣告為公用，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-818"><see langword="true" /> if the class is nested and declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-819">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-819">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-820"><xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType>屬性會取得值，指出類別是巢狀並且宣告為公用。</span><span class="sxs-lookup"><span data-stu-id="221cb-820">The <xref:System.Type.IsNestedPublic%2A?displayProperty=nameWithType> property gets a value indicating whether a class is nested and declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotPublic">
      <MemberSignature Language="C#" Value="public bool IsNotPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsNotPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotPublic : bool" Usage="System.Runtime.InteropServices._Type.IsNotPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-821">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsNotPublic" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-821">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsNotPublic" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-822">如果最上層 <see cref="T:System.Type" /> 沒有宣告為公用，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-822"><see langword="true" /> if the top-level <see cref="T:System.Type" /> is not declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-823">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-823">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-824"><xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType>屬性會取得值，指出是否最上層<xref:System.Type>尚未宣告為公用。</span><span class="sxs-lookup"><span data-stu-id="221cb-824">The <xref:System.Type.IsNotPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is not declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPointer">
      <MemberSignature Language="C#" Value="public bool IsPointer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPointer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPointer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPointer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPointer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPointer : bool" Usage="System.Runtime.InteropServices._Type.IsPointer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-825">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsPointer" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-825">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPointer" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-826">如果 <see cref="T:System.Type" /> 是指標，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-826"><see langword="true" /> if the <see cref="T:System.Type" /> is a pointer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-827">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-827">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-828"><xref:System.Type.IsPointer%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是指標。</span><span class="sxs-lookup"><span data-stu-id="221cb-828">The <xref:System.Type.IsPointer%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a pointer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimitive">
      <MemberSignature Language="C#" Value="public bool IsPrimitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimitive" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPrimitive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimitive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimitive : bool" Usage="System.Runtime.InteropServices._Type.IsPrimitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-829">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsPrimitive" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-829">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPrimitive" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-830">如果 <see langword="true" /> 是其中一個基本類型，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-830"><see langword="true" /> if the <see cref="T:System.Type" /> is one of the primitive types; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-831">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-831">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-832"><xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是其中一個基本類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-832">The <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is one of the primitive types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Runtime.InteropServices._Type.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-833">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsPublic" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-833">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsPublic" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-834">如果最上層 <see cref="T:System.Type" /> 宣告為公用，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-834"><see langword="true" /> if the top-level <see cref="T:System.Type" /> is declared public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-835">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-835">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-836"><xref:System.Type.IsPublic%2A?displayProperty=nameWithType>屬性會取得值，指出是否最上層<xref:System.Type>已宣告為公用。</span><span class="sxs-lookup"><span data-stu-id="221cb-836">The <xref:System.Type.IsPublic%2A?displayProperty=nameWithType> property gets a value indicating whether the top-level <xref:System.Type> is declared public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Runtime.InteropServices._Type.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-837">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsSealed" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-837">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSealed" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-838">如果 <see langword="true" /> 宣告為密封，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-838"><see langword="true" /> if the <see cref="T:System.Type" /> is declared sealed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-839">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-839">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-840"><xref:System.Type.IsSealed%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是否宣告為密封。</span><span class="sxs-lookup"><span data-stu-id="221cb-840">The <xref:System.Type.IsSealed%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is declared sealed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSerializable">
      <MemberSignature Language="C#" Value="public bool IsSerializable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSerializable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSerializable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSerializable : bool" Usage="System.Runtime.InteropServices._Type.IsSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-841">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsSerializable" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-841">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSerializable" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-842">如果 <see cref="T:System.Type" /> 可序列化，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-842"><see langword="true" /> if the <see cref="T:System.Type" /> is serializable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-843">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-843">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-844"><xref:System.Type.IsSerializable%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是可序列化。</span><span class="sxs-lookup"><span data-stu-id="221cb-844">The <xref:System.Type.IsSerializable%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is serializable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._Type.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-845">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsSpecialName" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-845">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsSpecialName" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-846">如果 <see cref="T:System.Type" /> 具有需要特殊處理的名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-846"><see langword="true" /> if the <see cref="T:System.Type" /> has a name that requires special handling; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-847">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-847">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-848"><xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>具有需要特殊處理的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-848">The <xref:System.Type.IsSpecialName%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubclassOf(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubclassOf (c As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(Type ^ c);" />
      <MemberSignature Language="F#" Value="abstract member IsSubclassOf : Type -&gt; bool" Usage="_Type.IsSubclassOf c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="221cb-849">與目前的 <see cref="T:System.Type" /> 相比較的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-849">The <see cref="T:System.Type" /> to compare with the current <see cref="T:System.Type" />.</span></span></param>
        <summary><span data-ttu-id="221cb-850">為 COM 物件提供與版本無關的 <see cref="M:System.Type.IsSubclassOf(System.Type)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-850">Provides COM objects with version-independent access to the <see cref="M:System.Type.IsSubclassOf(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-851">如果 <paramref name="c" /> 參數所表示的 <see cref="T:System.Type" /> 和目前的 <see cref="T:System.Type" /> 皆表示類別，而且目前 <see cref="T:System.Type" /> 所表示的類別衍生自 <paramref name="c" /> 所表示的類別，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-851"><see langword="true" /> if the <see cref="T:System.Type" /> represented by the <paramref name="c" /> parameter and the current <see cref="T:System.Type" /> represent classes, and the class represented by the current <see cref="T:System.Type" /> derives from the class represented by <paramref name="c" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="221cb-852">如果 <paramref name="c" /> 和目前的 <see cref="T:System.Type" /> 皆表示相同的類別，這個方法也會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-852">This method also returns <see langword="false" /> if <paramref name="c" /> and the current <see cref="T:System.Type" /> represent the same class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-853">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-853">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-854"><xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType>方法會判斷類別是否由目前<xref:System.Type>衍生自類別指定所代表<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-854">The <xref:System.Type.IsSubclassOf%2A?displayProperty=nameWithType> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnicodeClass">
      <MemberSignature Language="C#" Value="public bool IsUnicodeClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnicodeClass" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsUnicodeClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnicodeClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnicodeClass { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnicodeClass : bool" Usage="System.Runtime.InteropServices._Type.IsUnicodeClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-855">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsUnicodeClass" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-855">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsUnicodeClass" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-856">如果為 <see langword="true" /> 選取字串格式屬性 <see langword="UnicodeClass" />，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-856"><see langword="true" /> if the string format attribute <see langword="UnicodeClass" /> is selected for the <see cref="T:System.Type" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-857">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-857">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-858"><xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType>屬性會取得值，指出字串格式屬性是否`UnicodeClass`選取<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-858">The <xref:System.Type.IsUnicodeClass%2A?displayProperty=nameWithType> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueType">
      <MemberSignature Language="C#" Value="public bool IsValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.IsValueType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValueType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValueType { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValueType : bool" Usage="System.Runtime.InteropServices._Type.IsValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-859">為 COM 物件提供與版本無關的 <see cref="P:System.Type.IsValueType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-859">Provides COM objects with version-independent access to the <see cref="P:System.Type.IsValueType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-860">如果 <see langword="true" /> 是實值類型，則為 <see cref="T:System.Type" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-860"><see langword="true" /> if the <see cref="T:System.Type" /> is a value type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-861">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-861">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-862"><xref:System.Type.IsValueType%2A?displayProperty=nameWithType>屬性會取得值，指出是否<xref:System.Type>是實值類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-862">The <xref:System.Type.IsValueType%2A?displayProperty=nameWithType> property gets a value indicating whether the <xref:System.Type> is a value type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._Type.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-863">為 COM 物件提供與版本無關的 <see cref="P:System.Type.MemberType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-863">Provides COM objects with version-independent access to the <see cref="P:System.Type.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-864">一個 <see cref="T:System.Reflection.MemberTypes" /> 值，代表這個成員是類型或巢狀類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-864">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a type or a nested type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-865">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-865">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-866"><xref:System.Type.MemberType%2A?displayProperty=nameWithType>屬性會取得<xref:System.Reflection.MemberTypes>值，指出這個成員類型或巢狀的類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-866">The <xref:System.Type.MemberType%2A?displayProperty=nameWithType> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Module" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Runtime.InteropServices._Type.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-867">為 COM 物件提供與版本無關的 <see cref="P:System.Type.Module" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-867">Provides COM objects with version-independent access to the <see cref="P:System.Type.Module" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-868">定義目前 <see cref="T:System.Type" /> 的模組名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-868">The name of the module in which the current <see cref="T:System.Type" /> is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-869">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-869">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-870"><xref:System.Type.Module%2A?displayProperty=nameWithType>屬性中取得模組 (DLL) 目前<xref:System.Type>定義。</span><span class="sxs-lookup"><span data-stu-id="221cb-870">The <xref:System.Type.Module%2A?displayProperty=nameWithType> property gets the module (the DLL) in which the current <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._Type.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-871">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.Name" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-871">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-872"><see cref="T:System.Type" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-872">The name of the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-873">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-873">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-874"><xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType>屬性會取得名稱<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-874">The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> property gets the name of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="System.Runtime.InteropServices._Type.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-875">為 COM 物件提供與版本無關的 <see cref="P:System.Type.Namespace" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-875">Provides COM objects with version-independent access to the <see cref="P:System.Type.Namespace" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-876"><see cref="T:System.Type" /> 的命名空間。</span><span class="sxs-lookup"><span data-stu-id="221cb-876">The namespace of the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-877">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-877">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-878"><xref:System.Type.Namespace%2A?displayProperty=nameWithType>屬性取得的命名空間<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-878">The <xref:System.Type.Namespace%2A?displayProperty=nameWithType> property gets the namespace of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._Type.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-879">為 COM 物件提供與版本無關的 <see cref="P:System.Type.ReflectedType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-879">Provides COM objects with version-independent access to the <see cref="P:System.Type.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-880"><see cref="T:System.Type" /> 物件，用來取得這個 <see cref="T:System.Reflection.MemberInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-880">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-881">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-881">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-882"><xref:System.Type.ReflectedType%2A?displayProperty=nameWithType>屬性取得用來取得這個成員的類別物件。</span><span class="sxs-lookup"><span data-stu-id="221cb-882">The <xref:System.Type.ReflectedType%2A?displayProperty=nameWithType> property gets the class object that was used to obtain this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Type.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Type.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="221cb-883">為 COM 物件提供與版本無關的 <see cref="M:System.Type.ToString" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-883">Provides COM objects with version-independent access to the <see cref="M:System.Type.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="221cb-884">表示目前 <see cref="T:System.String" /> 的名稱的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="221cb-884">A <see cref="T:System.String" /> representing the name of the current <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-885">這個方法會從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-885">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-886"><xref:System.Type.ToString%2A?displayProperty=nameWithType>方法傳回的目前名稱<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-886">The <xref:System.Type.ToString%2A?displayProperty=nameWithType> method returns the name of the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHandle">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle TypeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeTypeHandle TypeHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeHandle As RuntimeTypeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeTypeHandle TypeHandle { RuntimeTypeHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeHandle : RuntimeTypeHandle" Usage="System.Runtime.InteropServices._Type.TypeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-887">為 COM 物件提供與版本無關的 <see cref="P:System.Type.TypeHandle" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-887">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeHandle" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-888">目前 <see cref="T:System.Type" /> 的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-888">The handle for the current <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-889">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-889">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-890"><xref:System.Type.TypeHandle%2A?displayProperty=nameWithType>屬性會取得目前的控制代碼<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-890">The <xref:System.Type.TypeHandle%2A?displayProperty=nameWithType> property gets the handle for the current <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInitializer">
      <MemberSignature Language="C#" Value="public System.Reflection.ConstructorInfo TypeInitializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.ConstructorInfo TypeInitializer" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.TypeInitializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeInitializer As ConstructorInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ConstructorInfo ^ TypeInitializer { System::Reflection::ConstructorInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeInitializer : System.Reflection.ConstructorInfo" Usage="System.Runtime.InteropServices._Type.TypeInitializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-891">為 COM 物件提供與版本無關的 <see cref="P:System.Type.TypeInitializer" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-891">Provides COM objects with version-independent access to the <see cref="P:System.Type.TypeInitializer" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-892"><see cref="T:System.Reflection.ConstructorInfo" />，包含 <see cref="T:System.Type" /> 的類別建構函式名稱。</span><span class="sxs-lookup"><span data-stu-id="221cb-892">A <see cref="T:System.Reflection.ConstructorInfo" /> containing the name of the class constructor for the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-893">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-893">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-894"><xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType>屬性取得的初始設定式<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="221cb-894">The <xref:System.Type.TypeInitializer%2A?displayProperty=nameWithType> property gets the initializer for the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSystemType">
      <MemberSignature Language="C#" Value="public Type UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Type.UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSystemType : Type" Usage="System.Runtime.InteropServices._Type.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="221cb-895">為 COM 物件提供與版本無關的 <see cref="P:System.Type.UnderlyingSystemType" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="221cb-895">Provides COM objects with version-independent access to the <see cref="P:System.Type.UnderlyingSystemType" /> property.</span></span></summary>
        <value><span data-ttu-id="221cb-896"><see cref="T:System.Type" /> 的基礎系統類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-896">The underlying system type for the <see cref="T:System.Type" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="221cb-897">這個屬性從 unmanaged 程式碼，是用於存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="221cb-897">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="221cb-898"><xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType>屬性表示代表這個類型的 common language runtime 所提供的類型。</span><span class="sxs-lookup"><span data-stu-id="221cb-898">The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=nameWithType> property indicates the type provided by the common language runtime that represents this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
