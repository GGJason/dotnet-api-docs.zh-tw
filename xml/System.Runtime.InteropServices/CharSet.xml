<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CharSet.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d8df6412eb7976d50057b6805221a7bef8cc44e1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8df6412eb7976d50057b6805221a7bef8cc44e1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.CharSet">
          <source>Dictates which character set marshaled strings should use.</source>
          <target state="translated">指定封送處理的字串應使用的字元集。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CharSet">
          <source>Because there are several unmanaged string types and only one managed string type, you must use a character set to specify how managed strings should be marshaled to unmanaged code.</source>
          <target state="translated">因為有數個 unmanaged 的字串類型，而且只有其中一個受管理字串類型，您必須使用字元集來指定如何管理的字串應該是封送處理至 unmanaged 程式碼。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CharSet">
          <source>This enumeration, which provides character set options, is used by <ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph>.</source>
          <target state="translated">這個列舉型別，提供字元設定選項，可由<ph id="ph1">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CharSet">
          <source>For a detailed description of the string marshaling and name matching behavior associated with this enumeration, see <bpt id="p1">[</bpt>Specifying a Character Set<ept id="p1">](~/docs/framework/interop/specifying-a-character-set.md)</ept>.</source>
          <target state="translated">如需封送處理字串和比對這個列舉型別相關聯的行為名稱的詳細說明，請參閱<bpt id="p1">[</bpt>指定字元集<ept id="p1">](~/docs/framework/interop/specifying-a-character-set.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.CharSet">
          <source>The following code example shows how to specify a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph> enumeration value when applying the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph> to a managed definition.</source>
          <target state="translated">下列程式碼範例示範如何指定<ph id="ph1">&lt;xref:System.Runtime.InteropServices.CharSet&gt;</ph>套用時的列舉值<ph id="ph2">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph>至受管理的定義。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Ansi">
          <source>Marshal strings as multiple-byte character strings.</source>
          <target state="translated">將字串當做多位元組字元字串來封送處理。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Auto">
          <source>Automatically marshal strings appropriately for the target operating system.</source>
          <target state="translated">自動為目標作業系統妥善地封送處理字串。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Auto">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Unicode" /&gt;</ph> on Windows NT, Windows 2000, Windows XP, and the Windows Server 2003 family; the default is <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph> on Windows 98 and Windows Me.</source>
          <target state="translated">在 Windows NT、Windows 2000、Windows XP 和 Windows Server 2003 系列上，預設為 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Unicode" /&gt;</ph>；在 Windows 98 和 Windows Me 上，預設為 <ph id="ph2">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Auto">
          <source>Although the common language runtime default is <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Auto" /&gt;</ph>, languages may override this default.</source>
          <target state="translated">雖然 Common Language Runtime 預設為 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Auto" /&gt;</ph>，但是語言可以覆寫此預設值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Auto">
          <source>For example, by default C# marks all methods and types as <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph>.</source>
          <target state="translated">例如，C# 依預設會將所有方法和型別標示為 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.None">
          <source>This value is obsolete and has the same behavior as <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph>.</source>
          <target state="translated">這個值已經過時，和 <ph id="ph1">&lt;see cref="F:System.Runtime.InteropServices.CharSet.Ansi" /&gt;</ph> 有相同的行為。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.CharSet.Unicode">
          <source>Marshal strings as Unicode 2-byte characters.</source>
          <target state="translated">封送處理字串為 Unicode 2 個位元組字元。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>