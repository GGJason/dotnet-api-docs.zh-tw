<Type Name="ClassInterfaceAttribute" FullName="System.Runtime.InteropServices.ClassInterfaceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8c54a015fdccd27dfde4783d666ef128e265572a" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52228129" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClassInterfaceAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClassInterfaceAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ClassInterfaceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClassInterfaceAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClassInterfaceAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ClassInterfaceAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示要為公開至 COM 之類別所產生的類別介面類型 (如果產生介面的話)。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以套用這個屬性的組件或類別。  
  
 這個屬性會控制型別程式庫匯出工具 (Tlbexp.exe) 是否會自動產生類別介面屬性化類別。 類別介面同名類別本身，但名稱前面會加上底線。 類別介面公開時，包含所有`public`、 非- `static` managed 類別，包括成員的成員繼承自其基底類別。 Managed 的類別無法存取類別介面，且有不需要，因為它們可以直接存取類別成員。 Tlbexp.exe 會產生類別介面的唯一的介面識別碼 (IID)。  
  
 類別介面可以是雙重或僅分派介面。 （選擇性） 您可以隱藏產生類別介面，並改為提供一種自訂介面。 您將公開或隱藏指定的類別介面<xref:System.Runtime.InteropServices.ClassInterfaceType?displayProperty=nameWithType>列舉成員。 當您將套用<xref:System.Runtime.InteropServices.ClassInterfaceAttribute>組件屬性屬於組件中的所有類別除非個別類別覆寫的設定，以自己的屬性。  
  
 雖然類別介面消除明確定義為每個類別的介面的工作，其用於生產應用程式極為不妥。 雙重類別介面允許用戶端繫結至特定的介面配置隨著類別的發展，有可能變更。 例如，請考慮公開給 COM 用戶端類別介面的 managed 的類別。 第一個版本的類別包含方法`North`和`South`。 Unmanaged 用戶端可以繫結至類別介面，可提供`North`中的類別介面和方法的第一個方法為`South`做為第二個方法。 現在，請考慮的類別，有新的方法，下一版`East`中，插入方法之間`North`和`South`。 嘗試繫結至新的類別，透過舊的類別介面的 unmanaged 用戶端最後會呼叫方法`East`他們想要呼叫方法的當`South`，因為在介面中方法的位置已變更。 此外，對基底類別的配置的任何變更也會影響所有衍生類別的類別介面的版面配置。 Managed 用戶端的繫結直接到類別，並不會出現相同的版本控制問題。 如需使用類別介面的特定指導方針，請參閱 < [COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)。  
  
 [Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)一律會套用到匯入類別<xref:System.Runtime.InteropServices.ClassInterfaceType.None?displayProperty=nameWithType>列舉成員，表示現有的 COM 類別永遠不會公開管理介面。  
  
   
  
## Examples  
 下列範例示範如何套用<xref:System.Runtime.InteropServices.ClassInterfaceAttribute>具有<xref:System.Runtime.InteropServices.ClassInterfaceType>值<xref:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch>，以產生`IDispatch`介面`MyClass`。  
  
 [!code-cpp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ClassInterfaceAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ClassInterfaceAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
    <related type="Article" href="~/docs/framework/tools/tlbexp-exe-type-library-exporter.md">Tlbexp.exe (類型程式庫匯出工具)</related>
    <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md">Tlbimp.exe (類型程式庫匯入工具)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (short classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classInterfaceType As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(short classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : int16 -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType">描述為類別所產生的介面型別。</param>
        <summary>使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 列舉值，初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式會採用基礎的 16 位元帶正負號的整數，表示每個<xref:System.Runtime.InteropServices.ClassInterfaceType>列舉成員。 [Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)會使用這個建構函式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ClassInterfaceType" />
        <related type="Article" href="~/docs/framework/tools/tlbimp-exe-type-library-importer.md">Tlbimp.exe (類型程式庫匯入工具)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassInterfaceAttribute (System.Runtime.InteropServices.ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.InteropServices.ClassInterfaceType classInterfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ClassInterfaceAttribute.#ctor(System.Runtime.InteropServices.ClassInterfaceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassInterfaceAttribute(System::Runtime::InteropServices::ClassInterfaceType classInterfaceType);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ClassInterfaceAttribute : System.Runtime.InteropServices.ClassInterfaceType -&gt; System.Runtime.InteropServices.ClassInterfaceAttribute" Usage="new System.Runtime.InteropServices.ClassInterfaceAttribute classInterfaceType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classInterfaceType" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      </Parameters>
      <Docs>
        <param name="classInterfaceType">其中一個 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值，描述為類別產生的介面型別。</param>
        <summary>使用指定的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /> 列舉型別 (Enumeration) 成員，初始化 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對可讀取的程式碼較不容易出錯，一律使用這個建構函式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.ClassInterfaceType Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.ClassInterfaceType Value" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As ClassInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::ClassInterfaceType Value { System::Runtime::InteropServices::ClassInterfaceType get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Runtime.InteropServices.ClassInterfaceType" Usage="System.Runtime.InteropServices.ClassInterfaceAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ClassInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得描述應該產生哪個型別之類別介面的 <see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值。</summary>
        <value><see cref="T:System.Runtime.InteropServices.ClassInterfaceType" /> 值，描述應該產生哪個型別的類別介面。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>