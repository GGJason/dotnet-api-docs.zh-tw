<Type Name="ComAwareEventInfo" FullName="System.Runtime.InteropServices.ComAwareEventInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="167d0961801f2c43c0c3713d95aab1df7f4e4d0b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36634297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComAwareEventInfo : System.Reflection.EventInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComAwareEventInfo extends System.Reflection.EventInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComAwareEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComAwareEventInfo&#xA;Inherits EventInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComAwareEventInfo : System::Reflection::EventInfo" />
  <TypeSignature Language="F#" Value="type ComAwareEventInfo = class&#xA;    inherit EventInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.EventInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d0824-101">允許事件處理常式的晚期繫結註冊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0824-101">Permits late-bound registration of an event handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-102">通常，編譯器會自動內嵌呼叫<xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>而不是使用標準的方法加入處理常式和移除事件處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-102">Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods instead of using regular add handler and remove handler methods for events.</span></span> <span data-ttu-id="d0824-103">會發生這個錯誤，需要內嵌定義對應的事件介面。</span><span class="sxs-lookup"><span data-stu-id="d0824-103">This occurs if the interface that the corresponding event is defined on needs to be embedded.</span></span>  
  
 <span data-ttu-id="d0824-104">您可以指定此內嵌整個組件包含使用介面 **/link> >** 選項在編譯器中，或藉由設定**內嵌 Interop 類型**屬性`True`視覺效果中Studio。</span><span class="sxs-lookup"><span data-stu-id="d0824-104">You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.</span></span>  
  
 <span data-ttu-id="d0824-105"><xref:System.Runtime.InteropServices.ComAwareEventInfo>類型衍生自<xref:System.Reflection.EventInfo>類別並覆寫<xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>和<xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-105">The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComAwareEventInfo (Type type, string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComAwareEventInfo(Type ^ type, System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ComAwareEventInfo : Type * string -&gt; System.Runtime.InteropServices.ComAwareEventInfo" Usage="new System.Runtime.InteropServices.ComAwareEventInfo (type, eventName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d0824-106">物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-106">The type of object.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="d0824-107">
            <c>type</c> 的事件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-107">The name of an event on <c>type</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-108">使用指定的型別以及型別上事件的名稱，初始化 <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-108">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> class by using the specified type and a name of the event on the type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public override void AddEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.AddEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.AddEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d0824-109">事件委派應該繫結的目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-109">The target object that the event delegate should bind to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0824-110">事件委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-110">The event delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-111">將事件處理常式附加至 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-111">Attaches an event handler to a COM object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-112">這個方法是類似於<xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>只是它的方法可讓您附加至 COM 物件的事件。</span><span class="sxs-lookup"><span data-stu-id="d0824-112">This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method except that it allows you to attach events to COM objects.</span></span>  
  
 <span data-ttu-id="d0824-113">如果`target`是 COM 物件，這個方法將委派加入至事件使用<xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-113">If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d0824-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> 有助於將電話轉接至對應的 managed 委派的註冊 COM 事件接收器。</span><span class="sxs-lookup"><span data-stu-id="d0824-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="d0824-115">它需要下列資訊：</span><span class="sxs-lookup"><span data-stu-id="d0824-115">It requires the following information:</span></span>  
  
-   <span data-ttu-id="d0824-116">目標物件本身 (`target`)。</span><span class="sxs-lookup"><span data-stu-id="d0824-116">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="d0824-117">來源介面的 GUID。</span><span class="sxs-lookup"><span data-stu-id="d0824-117">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="d0824-118">對應至指定事件的 COM 介面方法的 DispID。</span><span class="sxs-lookup"><span data-stu-id="d0824-118">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="d0824-119">COM 物件觸發對應的事件時，會叫用的委派 (`handler`)。</span><span class="sxs-lookup"><span data-stu-id="d0824-119">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="d0824-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> 查閱對應的 COM 來源介面 (指定的第一個參數為<xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType>建構函式)。</span><span class="sxs-lookup"><span data-stu-id="d0824-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="d0824-121">它接著會查看其名稱是與事件名稱相同的來源介面上的方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-121">It then looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="d0824-122">值`GuidAttribute`來源介面是傳遞至 GUID <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; 的值`DispIDAttribute`方法是傳遞至的 DispID 值<xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d0824-122">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0824-123">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-123">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="d0824-124">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.EventAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As EventAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::EventAttributes Attributes { System::Reflection::EventAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.EventAttributes" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0824-125">取得這個事件的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-125">Gets the attributes for this event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0824-126">這個事件的唯讀屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-126">The read-only attributes for this event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-127">屬性會傳回為 4 位元組整數，代表事件的反映這個執行個體所設定的屬性的點陣圖。</span><span class="sxs-lookup"><span data-stu-id="d0824-127">The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0824-128">取得宣告這個成員的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-128">Gets the class that declares this member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0824-129">宣告這個成員之類別的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-129">The <see cref="T:System.Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.DeclaringType" />
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetAddMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetAddMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAddMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetAddMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetAddMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetAddMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="d0824-130">
            <see langword="true" /> 是表示要傳回非公用方法，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-130">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-131">取得用來將事件處理常式委派加入至事件來源的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-131">Gets the method that was used to add an event handler delegate to the event source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-132">用來將事件處理常式委派加入至事件來源的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-132">The method that was used to add an event handler delegate to the event source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-133">這個方法會呼叫 <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-133">This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="d0824-134">
            <paramref name="nonPublic" /> 為 <see langword="true" />，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-134">
              <paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d0824-135">在衍生類別中遭覆寫時，傳回套用至這個成員的所有屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-135">When overridden in a derived class, returns all attributes that are applied to this member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="d0824-136">
            <see langword="true" /> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-136">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-137">在衍生類別中遭覆寫時，取得包含所有套用至此成員之自訂屬性的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-137">When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-138">包含所有自訂屬性的陣列，如果沒有定義屬性，則為不包含任何元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-138">An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-139">這個方法會呼叫<xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法基礎<xref:System.Reflection.EventInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="d0824-139">This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d0824-140">這個成員所屬的型別已載入僅限反映的內容中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-140">This member belongs to a type that is loaded into the reflection-only context.</span>
          </span>
          <span data-ttu-id="d0824-141">請參閱[如何：將組件載入至僅限反映的內容] (~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-141">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d0824-142">無法載入自訂屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-142">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d0824-143">要搜尋的屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-143">The attribute type to search for.</span>
          </span>
          <span data-ttu-id="d0824-144">只傳回可以指派給這個型別的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-144">Only attributes that are assignable to this type can be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d0824-145">
            <see langword="true" /> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-145">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-146">在衍生類別中遭覆寫時，取得包含所有套用至此成員之指定型別自訂屬性的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-146">When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-147">包含指定型別所有的自訂屬性之陣列，如果沒有定義屬性，則為不包含任何元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-147">An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d0824-148">
            <paramref name="attributeType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-148">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d0824-149">這個成員所屬的型別已載入僅限反映的內容中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-149">This member belongs to a type that is loaded into the reflection-only context.</span>
          </span>
          <span data-ttu-id="d0824-150">請參閱[如何：將組件載入至僅限反映的內容] (~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-150">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span>
          </span>
        </exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d0824-151">無法載入自訂屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-151">A custom attribute type cannot be loaded.</span>
          </span>
        </exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRaiseMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRaiseMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRaiseMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRaiseMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="d0824-152">
            <see langword="true" /> 是表示要傳回非公用方法，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-152">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-153">在衍生類別中遭覆寫時，傳回事件引發時呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-153">When overridden in a derived class, returns the method that was called when the event was raised.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-154">引發事件時呼叫的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-154">The object that was called when the event was raised.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-155">這個方法會傳回`null`事件宣告使用 C#`event`關鍵字或 Visual Basic`Event`關鍵字。</span><span class="sxs-lookup"><span data-stu-id="d0824-155">This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword.</span></span> <span data-ttu-id="d0824-156">這是因為在 C# 和 Visual Basic 編譯器不會產生這種方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-156">This is because the C# and Visual Basic compilers do not generate such a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="d0824-157">
            <paramref name="nonPublic" /> 為 <see langword="true" />，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-157">
              <paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d0824-158">叫用時晚期繫結透過機制例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-158">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d0824-159">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-159">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRemoveMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRemoveMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRemoveMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRemoveMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="d0824-160">
            <see langword="true" /> 是表示要傳回非公用方法，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-160">
              <see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-161">在衍生類別中遭覆寫時，擷取用來移除事件方法的 <see cref="T:System.Reflection.MethodInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-161">When overridden in a derived class, retrieves the <see cref="T:System.Reflection.MethodInfo" /> object for removing a method of the event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-162">用來從事件來源移除事件處理常式委派的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-162">The method that was used to remove an event handler delegate from the event source.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="d0824-163">
            <paramref name="nonPublic" /> 為 <see langword="true" />，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-163">
              <paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d0824-164">叫用時晚期繫結透過機制例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-164">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d0824-165">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-165">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="comAwareEventInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="d0824-166">要搜尋的屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-166">The attribute type to search for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="d0824-167">
            <see langword="true" /> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-167">
              <see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-168">指出在此成員上是套用了指定屬性的一個或多個執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-168">Indicates whether one or more instances of the specified attribute are applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0824-169">如果已將指定屬性套用至此成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-169">
              <see langword="true" /> if the specified attribute has been applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="d0824-170">叫用時晚期繫結透過機制例如<see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-170">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="d0824-171">相關聯的列舉型別： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-171">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Delegate" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0824-172">取得目前成員的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-172">Gets the name of the current member.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0824-173">這個成員的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-173">The name of this member.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d0824-174">取得用來初始化這個執行個體的類別物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-174">Gets the class object that was used to initialize this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d0824-175">用於初始化目前的物件之 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-175">The <see cref="T:System.Type" /> object that was used to initialize the current object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public override void RemoveEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.RemoveEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.RemoveEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d0824-176">事件委派繫結的目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-176">The target object that the event delegate is bound to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="d0824-177">事件委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-177">The event delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0824-178">從 COM 物件中斷連結事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-178">Detaches an event handler from a COM object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d0824-179">這個方法是類似於<xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType>方法，但是它可讓您卸離 COM 物件中的事件。</span><span class="sxs-lookup"><span data-stu-id="d0824-179">This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method, except that it allows you to detach events from COM objects.</span></span>  
  
 <span data-ttu-id="d0824-180">如果`target`是 COM 物件，這個方法會釋放事件的委派使用<xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-180">If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d0824-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> 有助於將電話轉接至對應的 managed 委派的取消註冊 COM 事件接收器。</span><span class="sxs-lookup"><span data-stu-id="d0824-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="d0824-182">它需要下列資訊：</span><span class="sxs-lookup"><span data-stu-id="d0824-182">It requires the following information:</span></span>  
  
-   <span data-ttu-id="d0824-183">目標物件本身 (`target`)。</span><span class="sxs-lookup"><span data-stu-id="d0824-183">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="d0824-184">來源介面的 GUID。</span><span class="sxs-lookup"><span data-stu-id="d0824-184">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="d0824-185">對應至指定事件的 COM 介面方法的 DispID。</span><span class="sxs-lookup"><span data-stu-id="d0824-185">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="d0824-186">COM 物件觸發對應的事件時，會叫用的委派 (`handler`)。</span><span class="sxs-lookup"><span data-stu-id="d0824-186">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="d0824-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> 查閱對應的 COM 來源介面 (指定的第一個參數為<xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType>建構函式)。</span><span class="sxs-lookup"><span data-stu-id="d0824-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="d0824-188">它然後它會查看其名稱是與事件名稱相同的來源介面上的方法。</span><span class="sxs-lookup"><span data-stu-id="d0824-188">It then it looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="d0824-189">值`GuidAttribute`來源介面是傳遞至 GUID <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; 的值`DispIDAttribute`方法是傳遞至的 DispID 值<xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="d0824-189">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d0824-190">此事件不具公用 <see langword="remove" /> 存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-190">The event does not have a public <see langword="remove" /> accessor.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d0824-191">無法使用傳入的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-191">The handler that was passed in cannot be used.</span>
          </span>
        </exception>
        <exception cref="T:System.Reflection.TargetException">
          <span data-ttu-id="d0824-192">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為捕捉 <see cref="T:System.Exception" />。</para>
            </block>
            <paramref name="target" /> 參數是 <see langword="null" /> 且事件非為靜態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-192">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch <see cref="T:System.Exception" /> instead.  </para>
              </block>  The <paramref name="target" /> parameter is <see langword="null" /> and the event is not static.</span>
          </span>
          <span data-ttu-id="d0824-193">-或-  未在目標上宣告 <see cref="T:System.Reflection.EventInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-193">-or-  The <see cref="T:System.Reflection.EventInfo" /> is not declared on the target.</span>
          </span>
        </exception>
        <exception cref="T:System.MethodAccessException">
          <span data-ttu-id="d0824-194">
            <block subset="none" type="note">
              <para> 在 [適用於 Windows 市集應用程式的 .NET] (http://go.microsoft.com/fwlink/?LinkID=247912) 或是 [可攜式類別庫] (~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) 中，改為攔截基底類別例外狀況 <see cref="T:System.MemberAccessException" />。</para>
            </block>  呼叫端無權存取該成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-194">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.  </para>
              </block>  The caller does not have access permission to the member.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="d0824-195">用於與 unmanaged 程式碼的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-195">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="d0824-196">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0824-196">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>