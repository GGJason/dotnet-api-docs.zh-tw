<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComAwareEventInfo.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a50bc1c6bf61c6387ace86a09185889744af6d54.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a50bc1c6bf61c6387ace86a09185889744af6d54</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>Permits late-bound registration of an event handler.</source>
          <target state="translated">允許事件處理常式的晚期繫結註冊。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>Normally, compilers will automatically embed calls to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> methods instead of using regular add handler and remove handler methods for events.</source>
          <target state="translated">通常，編譯器會自動內嵌呼叫<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>而不是使用標準的方法加入處理常式和移除事件處理常式方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>This occurs if the interface that the corresponding event is defined on needs to be embedded.</source>
          <target state="translated">會發生這個錯誤，需要內嵌定義對應的事件介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>You can specify this by embedding the entire assembly that contains the interface by using the <bpt id="p1">**</bpt>/link<ept id="p1">**</ept> option on the compilers or by setting the <bpt id="p2">**</bpt>Embed Interop Types<ept id="p2">**</ept> property to <ph id="ph1">`True`</ph> in Visual Studio.</source>
          <target state="translated">您可以指定此內嵌整個組件包含使用介面<bpt id="p1">**</bpt>/link&gt; &gt;<ept id="p1">**</ept>選項在編譯器中，或藉由設定<bpt id="p2">**</bpt>內嵌 Interop 類型<ept id="p2">**</ept>屬性<ph id="ph1">`True`</ph>視覺效果中Studio。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo&gt;</ph> type derives from the <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> class and overrides the <ph id="ph3">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo&gt;</ph>類型衍生自<ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph>類別並覆寫<ph id="ph3">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>和<ph id="ph4">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>The type of object.</source>
          <target state="translated">物件的型別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>The name of an event on <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept> 的事件名稱。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /&gt;</ph> class by using the specified type and a name of the event on the type.</source>
          <target state="translated">使用指定的型別以及型別上事件的名稱，初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The target object that the event delegate should bind to.</source>
          <target state="translated">事件委派應該繫結的目標物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The event delegate.</source>
          <target state="translated">事件委派。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>Attaches an event handler to a COM object.</source>
          <target state="translated">將事件處理常式附加至 COM 物件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method except that it allows you to attach events to COM objects.</source>
          <target state="translated">這個方法是類似於<ph id="ph1">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>只是它的方法可讓您附加至 COM 物件的事件。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>If <ph id="ph1">`target`</ph> is a COM object, this method adds a delegate to an event by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如果<ph id="ph1">`target`</ph>是 COM 物件，這個方法將委派加入至事件使用<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> 有助於將電話轉接至對應的 managed 委派的註冊 COM 事件接收器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>It requires the following information:</source>
          <target state="translated">它需要下列資訊：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The target object itself (<ph id="ph1">`target`</ph>).</source>
          <target state="translated">目標物件本身 (<ph id="ph1">`target`</ph>)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The GUID of the source interface.</source>
          <target state="translated">來源介面的 GUID。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The DispID of the method on the COM interface that corresponds to the specified event.</source>
          <target state="translated">對應至指定事件的 COM 介面方法的 DispID。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The delegate that would be invoked when the COM object triggers the corresponding event (<ph id="ph1">`handler`</ph>).</source>
          <target state="translated">COM 物件觸發對應的事件時，會叫用的委派 (<ph id="ph1">`handler`</ph>)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> 查閱對應的 COM 來源介面 (指定的第一個參數為<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph>建構函式)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>It then looks up a method on the source interface whose name is identical to the event name.</source>
          <target state="translated">它接著會查看其名稱是與事件名稱相同的來源介面上的方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The value of <ph id="ph1">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; the value of <ph id="ph3">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">值<ph id="ph1">`GuidAttribute`</ph>來源介面是傳遞至 GUID <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; 的值<ph id="ph3">`DispIDAttribute`</ph>方法是傳遞至的 DispID 值<ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">用於與 unmanaged 程式碼的作業。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>Gets the attributes for this event.</source>
          <target state="translated">取得這個事件的屬性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>The read-only attributes for this event.</source>
          <target state="translated">這個事件的唯讀屬性。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</source>
          <target state="translated">屬性會傳回為 4 位元組整數，代表事件的反映這個執行個體所設定的屬性的點陣圖。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
          <source>Gets the class that declares this member.</source>
          <target state="translated">取得宣告這個成員的類別。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object for the class that declares this member.</source>
          <target state="translated">宣告這個成員之類別的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 是表示要傳回非公用方法，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>Gets the method that was used to add an event handler delegate to the event source.</source>
          <target state="translated">取得用來將事件處理常式委派加入至事件來源的方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>The method that was used to add an event handler delegate to the event source.</source>
          <target state="translated">用來將事件處理常式委派加入至事件來源的方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫 <ph id="ph1">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>When overridden in a derived class, returns all attributes that are applied to this member.</source>
          <target state="translated">在衍生類別中遭覆寫時，傳回套用至這個成員的所有屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</source>
          <target state="translated">在衍生類別中遭覆寫時，取得包含所有套用至此成員之自訂屬性的陣列。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</source>
          <target state="translated">包含所有自訂屬性的陣列，如果沒有定義屬性，則為不包含任何元素的陣列。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method of the underlying <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> object.</source>
          <target state="translated">這個方法會呼叫<ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph>方法基礎<ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>This member belongs to a type that is loaded into the reflection-only context.</source>
          <target state="translated">這個成員所屬的型別已載入僅限反映的內容中。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>See <bpt id="p1">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>如何：將組件載入僅限反映的內容<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">無法載入自訂屬性型別。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The attribute type to search for.</source>
          <target state="translated">要搜尋的屬性型別。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Only attributes that are assignable to this type can be returned.</source>
          <target state="translated">只傳回可以指派給這個型別的屬性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</source>
          <target state="translated">在衍生類別中遭覆寫時，取得包含所有套用至此成員之指定型別自訂屬性的陣列。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</source>
          <target state="translated">包含指定型別所有的自訂屬性之陣列，如果沒有定義屬性，則為不包含任何元素的陣列。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This member belongs to a type that is loaded into the reflection-only context.</source>
          <target state="translated">這個成員所屬的型別已載入僅限反映的內容中。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept></source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>如何：將組件載入僅限反映的內容<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">無法載入自訂屬性型別。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 是表示要傳回非公用方法，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>When overridden in a derived class, returns the method that was called when the event was raised.</source>
          <target state="translated">在衍生類別中遭覆寫時，傳回事件引發時呼叫的方法。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>The object that was called when the event was raised.</source>
          <target state="translated">引發事件時呼叫的物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>This method returns <ph id="ph1">`null`</ph> for events that are declared with the C# <ph id="ph2">`event`</ph> keyword or the Visual Basic <ph id="ph3">`Event`</ph> keyword.</source>
          <target state="translated">這個方法會傳回<ph id="ph1">`null`</ph>事件宣告使用 C#<ph id="ph2">`event`</ph>關鍵字或 Visual Basic<ph id="ph3">`Event`</ph>關鍵字。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>This is because the C# and Visual Basic compilers do not generate such a method.</source>
          <target state="translated">這是因為在 C# 和 Visual Basic 編譯器不會產生這種方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">叫用時晚期繫結透過機制例如<ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 是表示要傳回非公用方法，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>When overridden in a derived class, retrieves the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object for removing a method of the event.</source>
          <target state="translated">在衍生類別中遭覆寫時，擷取用來移除事件方法的 <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>The method that was used to remove an event handler delegate from the event source.</source>
          <target state="translated">用來從事件來源移除事件處理常式委派的方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="true" /&gt;</ph>，而且用來將事件處理常式委派加入的方法是非公用的，但是呼叫端沒有使用權限來反映非公用的方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">叫用時晚期繫結透過機制例如<ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>The attribute type to search for.</source>
          <target state="translated">要搜尋的屬性型別。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要搜尋這個成員的繼承鏈結以尋找屬性；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>Indicates whether one or more instances of the specified attribute are applied to this member.</source>
          <target state="translated">指出在此成員上是套用了指定屬性的一個或多個執行個體。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified attribute has been applied to this member; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已將指定屬性套用至此成員，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">叫用時晚期繫結透過機制例如<ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
          <source>Gets the name of the current member.</source>
          <target state="translated">取得目前成員的名稱。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
          <source>The name of this member.</source>
          <target state="translated">這個成員的名稱。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
          <source>Gets the class object that was used to initialize this instance.</source>
          <target state="translated">取得用來初始化這個執行個體的類別物件。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that was used to initialize the current object.</source>
          <target state="translated">用於初始化目前的物件之 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The target object that the event delegate is bound to.</source>
          <target state="translated">事件委派繫結的目標物件。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The event delegate.</source>
          <target state="translated">事件委派。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Detaches an event handler from a COM object.</source>
          <target state="translated">從 COM 物件中斷連結事件處理常式。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method, except that it allows you to detach events from COM objects.</source>
          <target state="translated">這個方法是類似於<ph id="ph1">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>方法，但是它可讓您卸離 COM 物件中的事件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>If <ph id="ph1">`target`</ph> is a COM object, this method releases a delegate to an event by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">如果<ph id="ph1">`target`</ph>是 COM 物件，這個方法會釋放事件的委派使用<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> 有助於將電話轉接至對應的 managed 委派的取消註冊 COM 事件接收器。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>It requires the following information:</source>
          <target state="translated">它需要下列資訊：</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The target object itself (<ph id="ph1">`target`</ph>).</source>
          <target state="translated">目標物件本身 (<ph id="ph1">`target`</ph>)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The GUID of the source interface.</source>
          <target state="translated">來源介面的 GUID。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The DispID of the method on the COM interface that corresponds to the specified event.</source>
          <target state="translated">對應至指定事件的 COM 介面方法的 DispID。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate that would be invoked when the COM object triggers the corresponding event (<ph id="ph1">`handler`</ph>).</source>
          <target state="translated">COM 物件觸發對應的事件時，會叫用的委派 (<ph id="ph1">`handler`</ph>)。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> 查閱對應的 COM 來源介面 (指定的第一個參數為<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph>建構函式)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>It then it looks up a method on the source interface whose name is identical to the event name.</source>
          <target state="translated">它然後它會查看其名稱是與事件名稱相同的來源介面上的方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The value of <ph id="ph1">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; the value of <ph id="ph3">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">值<ph id="ph1">`GuidAttribute`</ph>來源介面是傳遞至 GUID <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; 的值<ph id="ph3">`DispIDAttribute`</ph>方法是傳遞至的 DispID 值<ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The event does not have a public <ph id="ph1">&lt;see langword="remove" /&gt;</ph> accessor.</source>
          <target state="translated">此事件不具公用 <ph id="ph1">&lt;see langword="remove" /&gt;</ph> 存取子。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The handler that was passed in cannot be used.</source>
          <target state="translated">無法使用傳入的處理常式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET - 支援的應用程式開發介面<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截 <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and the event is not static.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> 參數是 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 且事件不是靜態的。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> is not declared on the target.</source>
          <target state="translated">未在目標上宣告 <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>, instead.</source>
          <target state="translated">在<bpt id="p1">[</bpt>適用於 Windows 市集應用程式的 .NET<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> 或是<bpt id="p2">[</bpt>可攜式類別庫<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>中，改為攔截基底類別例外狀況 <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The caller does not have access permission to the member.</source>
          <target state="translated">呼叫端無權存取該成員。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">用於與 unmanaged 程式碼的作業。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>