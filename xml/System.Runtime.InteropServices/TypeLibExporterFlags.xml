<Type Name="TypeLibExporterFlags" FullName="System.Runtime.InteropServices.TypeLibExporterFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e4b7b63c5f270dbadc0e3352cff8afb68a7fdcd9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469121" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TypeLibExporterFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeLibExporterFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum TypeLibExporterFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class TypeLibExporterFlags" />
  <TypeSignature Language="F#" Value="type TypeLibExporterFlags = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8af0f-101">指示型別程式庫應該如何產生。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8af0f-101">Indicates how a type library should be produced.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8af0f-102">搭配<xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>。</span><span class="sxs-lookup"><span data-stu-id="8af0f-102">Used with <xref:System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallerResolvedReferences">
      <MemberSignature Language="C#" Value="CallerResolvedReferences" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags CallerResolvedReferences = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberSignature Language="VB.NET" Value="CallerResolvedReferences" />
      <MemberSignature Language="C++ CLI" Value="CallerResolvedReferences" />
      <MemberSignature Language="F#" Value="CallerResolvedReferences = 2" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.CallerResolvedReferences" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-103">允許呼叫端明確解析型別程式庫參考，而不需要參閱登錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-103">Allows the caller to explicitly resolve type library references without consulting the registry.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs32Bit">
      <MemberSignature Language="C#" Value="ExportAs32Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs32Bit = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs32Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs32Bit" />
      <MemberSignature Language="F#" Value="ExportAs32Bit = 16" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs32Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-104">在 64 位元電腦上進行編譯時，指定型別程式庫匯出工具 (Tlbexp.exe) 產生 32 位元型別程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-104">When compiling on a 64-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 32-bit type library.</span>
          </span>
          <span data-ttu-id="8af0f-105">所有資料型別都會經過適當轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-105">All data types are transformed appropriately.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExportAs64Bit">
      <MemberSignature Language="C#" Value="ExportAs64Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags ExportAs64Bit = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberSignature Language="VB.NET" Value="ExportAs64Bit" />
      <MemberSignature Language="C++ CLI" Value="ExportAs64Bit" />
      <MemberSignature Language="F#" Value="ExportAs64Bit = 32" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.ExportAs64Bit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-106">在 32 位元電腦上進行編譯時，指定型別程式庫匯出工具 (Tlbexp.exe) 產生 64 位元型別程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-106">When compiling on a 32-bit computer, specifies that the Type Library Exporter (Tlbexp.exe) generates a 64-bit type library.</span>
          </span>
          <span data-ttu-id="8af0f-107">所有資料型別都會經過適當轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-107">All data types are transformed appropriately.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-108">不指定旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-108">Specifies no flags.</span>
          </span>
          <span data-ttu-id="8af0f-109">這是預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-109">This is the default.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OldNames">
      <MemberSignature Language="C#" Value="OldNames" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OldNames = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberSignature Language="VB.NET" Value="OldNames" />
      <MemberSignature Language="C++ CLI" Value="OldNames" />
      <MemberSignature Language="F#" Value="OldNames = 4" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-110">匯出型別程式庫時，.NET Framework 會用命名空間的名稱裝飾型別，藉以解析型別名稱衝突，例如，<see langword="System.Windows.Forms.HorizontalAlignment" /> 會匯出為 <see langword="System_Windows_Forms_HorizontalAlignment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-110">When exporting type libraries, the .NET Framework resolves type name conflicts by decorating the type with the name of the namespace; for example, <see langword="System.Windows.Forms.HorizontalAlignment" /> is exported as <see langword="System_Windows_Forms_HorizontalAlignment" />.</span>
          </span>
          <span data-ttu-id="8af0f-111">在發生無法從 COM 看見的型別名稱衝突時，.NET Framework 會匯出未裝飾名稱 (Undecorated Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-111">When there is a conflict with the name of a type that is not visible from COM, the .NET Framework exports the undecorated name.</span>
          </span>
          <span data-ttu-id="8af0f-112">設定 <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> 旗標或使用型別程式庫匯出工具 (Tlbexp.exe) 中的 <see langword="/oldnames" /> 選項，強制 .NET Framework 匯出裝飾名稱 (Decorated Name)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-112">Set the <see cref="F:System.Runtime.InteropServices.TypeLibExporterFlags.OldNames" /> flag or use the <see langword="/oldnames" /> option in the Type Library Exporter (Tlbexp.exe) to force the .NET Framework to export the decorated name.</span>
          </span>
          <span data-ttu-id="8af0f-113">請注意，在 .NET Framework 2.0 版之前的版本中，匯出裝飾名稱是預設行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-113">Note that exporting the decorated name was the default behavior in versions prior to the .NET Framework version 2.0.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OnlyReferenceRegistered">
      <MemberSignature Language="C#" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.TypeLibExporterFlags OnlyReferenceRegistered = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberSignature Language="VB.NET" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="C++ CLI" Value="OnlyReferenceRegistered" />
      <MemberSignature Language="F#" Value="OnlyReferenceRegistered = 1" Usage="System.Runtime.InteropServices.TypeLibExporterFlags.OnlyReferenceRegistered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.TypeLibExporterFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="8af0f-114">匯出從 COM 匯入為 <see langword="IUnknown" /> 之型別的參考，如果該型別不具有已註冊的型別程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-114">Exports references to types that were imported from COM as <see langword="IUnknown" /> if the type does not have a registered type library.</span>
          </span>
          <span data-ttu-id="8af0f-115">當您想要型別程式庫匯出工具在登錄中尋找可做為輸入組件的相依型別，而不是在相同目錄中尋找時，請設定這個旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8af0f-115">Set this flag when you want the type library exporter to look for dependent types in the registry rather than in the same directory as the input assembly.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>