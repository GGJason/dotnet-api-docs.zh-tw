<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6a8a96a9782c741f086a1939319e01501f9209d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39878777" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <TypeSignature Language="F#" Value="type Marshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="54fdc-101">提供方法的集合，方法用於配置 Unmanaged 記憶體、複製 Unmanaged 記憶體區塊和將 Managed 類型轉換為 Unmanaged 類型，也包括其他和 Unmanaged 程式碼互動時使用的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="54fdc-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-102">`static`上定義的方法<xref:System.Runtime.InteropServices.Marshal>類別是必要項目使用的 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="54fdc-103">此類別中定義的大部分方法通常供開發人員想要提供 managed 與 unmanaged 程式設計模型之間的橋樑。</span><span class="sxs-lookup"><span data-stu-id="54fdc-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="54fdc-104">比方說，<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A>方法將 ANSI 字元從指定的字串 （在 managed 堆積中） 複製到 unmanaged 堆積中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="54fdc-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="54fdc-105">它也會配置正確大小的目標堆積。</span><span class="sxs-lookup"><span data-stu-id="54fdc-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="54fdc-106">Common language runtime 提供特定的封送處理功能。</span><span class="sxs-lookup"><span data-stu-id="54fdc-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="54fdc-107">如需封送處理行為的詳細資訊，請參閱[Interop 封送處理](~/docs/framework/interop/interop-marshaling.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="54fdc-108">`Read`並`Write`中的方法<xref:System.Runtime.InteropServices.Marshal>類別支援對齊和未對齊的存取。</span><span class="sxs-lookup"><span data-stu-id="54fdc-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-109">下列範例示範如何使用所定義的各種方法<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member AddRef : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.AddRef pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="54fdc-110">要遞增的介面參考次數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-110">The interface reference count to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-111">遞增指定介面的參考次數 (Reference Count)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-111">Increments the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-112">
            <paramref name="pUnk" /> 參數上的參考次數的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-113">通用語言執行平台管理的 COM 物件的參考計數，讓您使其不必直接使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="54fdc-114">在罕見的情況下，例如測試自訂封送處理器，您可能會發現需要手動操作物件的存留期。</span><span class="sxs-lookup"><span data-stu-id="54fdc-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="54fdc-115">之後呼叫<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>，您必須使用一種方法，例如遞減參考計數<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-116">請勿依賴的傳回值<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>，有時可能不穩定。</span><span class="sxs-lookup"><span data-stu-id="54fdc-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="54fdc-117">您可以呼叫<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>，或<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>來取得<xref:System.IntPtr>值，表示[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)介面指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="54fdc-118">您也可以使用這些方法和<xref:System.Runtime.InteropServices.Marshal.AddRef%2A>取得 managed 的物件的 COM 可呼叫包裝函式所表示的 COM 介面的 managed 物件上的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="54fdc-119">如果您不熟悉此包裝函式類型的詳細資訊，請參閱[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-120">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-120">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-121">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-121">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocCoTaskMem : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocCoTaskMem cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="54fdc-122">要配置的記憶體區塊的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-122">The size of the block of memory to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-123">從 COM 工作記憶體配置器 (Allocator) 配置指定大小的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-124">表示配置的記憶體區塊位址的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-124">An integer representing the address of the block of memory allocated.</span>
          </span>
          <span data-ttu-id="54fdc-125">這個記憶體必須使用 <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /> 來釋放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> 是兩個記憶體配置的其中一個 API 方法<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="54fdc-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType>是另。)傳回的初始記憶體內容會是未定義，並已配置的記憶體可能會大於要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="54fdc-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="54fdc-128">這個方法會公開 COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626)函式，這稱為 「 COM 工作記憶體配置器。</span><span class="sxs-lookup"><span data-stu-id="54fdc-128">This method exposes the COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-129">記憶體不足，無法滿足要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-129">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-130">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-130">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-131">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-132">從處理序的 Unmanaged 記憶體來配置記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-132">Allocates memory from the unmanaged memory of the process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="54fdc-133">記憶體中需要的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-133">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-134">使用指定的位元組數目，從處理序的 Unmanaged 記憶體中配置記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-135">新配置的記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-135">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="54fdc-136">這個記憶體必須使用 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> 方法加以釋放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 中的兩個記憶體配置方法之一是<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="54fdc-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType>是另。)這個方法會公開 Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628)函式，從 Kernel32.dll。</span><span class="sxs-lookup"><span data-stu-id="54fdc-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="54fdc-139">當<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>呼叫`LocalAlloc`，它會傳遞`LMEM_FIXED`旗標，這會導致鎖定就地配置的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-139">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="54fdc-140">此外，配置的記憶體不是零填滿。</span><span class="sxs-lookup"><span data-stu-id="54fdc-140">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-141">下列程式碼範例示範如何呼叫 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-141">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="54fdc-142">此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-142">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-143">記憶體不足，無法滿足要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-143">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-144">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-144">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-145">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-145">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="54fdc-146">記憶體中需要的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-146">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-147">使用指定數目的位元組指標，從處理序的 Unmanaged 記憶體中配置記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-148">新配置的記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-148">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="54fdc-149">這個記憶體必須使用 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> 方法加以釋放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> 中的兩個記憶體配置方法之一是<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="54fdc-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType>是另。)這個方法會公開 Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628)函式，從 Kernel32.dll。</span><span class="sxs-lookup"><span data-stu-id="54fdc-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="54fdc-152">當<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>呼叫`LocalAlloc`，它會傳遞`LMEM_FIXED`旗標，這會導致鎖定就地配置的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-152">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="54fdc-153">此外，配置的記憶體不是零填滿。</span><span class="sxs-lookup"><span data-stu-id="54fdc-153">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="54fdc-154">如需範例程式碼，請參閱 <xref:System.Runtime.InteropServices.Marshal>和 <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-154">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-155">記憶體不足，無法滿足要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-155">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-156">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-156">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-157">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-157">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberSignature Language="F#" Value="static member AreComObjectsAvailableForCleanup : unit -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-158">表示是否有位在任何內容中的執行階段可呼叫包裝函式 (RCW) 可以清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-159">如果有可以清除的執行階段可呼叫包裝函式，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-159">
              <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-160">如果有深入的相依性圖形的 managed 和原生程式碼之間的參考很多可能需要很長的時間來清除所有物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-160">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="54fdc-161">每次 GC 執行時它會釋出一些 Rcw，接著將發行的基礎 COM 物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-161">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="54fdc-162">這些 COM 物件將然後釋放其受管理的參考，以進行更多的物件可以清除在下一次 GC 執行時，用來啟動處理程序透過一次。</span><span class="sxs-lookup"><span data-stu-id="54fdc-162">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="54fdc-163"><xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A>方法可讓應用程式，來判斷多少循環的 GC。收集和 GC。WaitForPendingFinalizers 必須進行才能清除所有項目。</span><span class="sxs-lookup"><span data-stu-id="54fdc-163">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-164">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-164">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-165">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-165">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="static member BindToMoniker : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.BindToMoniker monikerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName">
          <span data-ttu-id="54fdc-166">對應於希望的介面指標的 Moniker。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-166">The moniker corresponding to the desired interface pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-167">取得由指定 Moniker 來識別的介面指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-167">Gets an interface pointer identified by the specified moniker.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-168">一個物件，其中包含對 <paramref name="monikerName" /> 參數所識別之介面指標的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          </span>
          <span data-ttu-id="54fdc-169">Moniker 是一個名稱，在這種情況下 Moniker 則由介面定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> 會公開 COM`BindToMoniker`方法，以產生您可以轉換成任何您所需要的 COM 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="54fdc-171">這個方法會提供相同的功能`GetObject`方法，在 Visual Basic 6.0 和[!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="54fdc-171">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="54fdc-172">Unmanaged <see langword="BindToMoniker" /> 方法傳回了無法辨認的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-173">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-173">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-174">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-174">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberSignature Language="F#" Value="static member BufferToBSTR : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.BufferToBSTR (ptr, slen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberSignature Language="F#" Value="static member ChangeWrapperHandleStrength : obj * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength (otp, fIsWeak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp">
          <span data-ttu-id="54fdc-175">其 CCW 存有參考計數控制代碼的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-175">The object whose CCW holds a reference counted handle.</span>
          </span>
          <span data-ttu-id="54fdc-176">如果 CCW 上的參考次數大於零，則控制代碼為強式，否則為弱式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          </span>
        </param>
        <param name="fIsWeak">
          <span data-ttu-id="54fdc-177">若要不顧 <c>otp</c> 參數的參考計數而將其上的控制代碼強度變更為弱，則為 <see langword="true" />；若要將 <c>otp</c> 上的控制代碼強度重設為按照參考來計數，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-177">
              <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-178">變更物件之 [COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md) (CCW) 控制代碼的強度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> 用於物件共用功能，而且應該永遠不會由使用者程式碼直接呼叫。</span><span class="sxs-lookup"><span data-stu-id="54fdc-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-180">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-181">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberSignature Language="F#" Value="static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-182">通知執行階段清除配置在目前內容中的所有[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-183">它會嘗試清除 Rcw 時，interop 系統會激發訊息。</span><span class="sxs-lookup"><span data-stu-id="54fdc-183">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="54fdc-184">這可確保的清除作業中所有的應用程式，包括應用程式，不會被提取經常發生的單一執行緒 apartment (STA) Rcw。</span><span class="sxs-lookup"><span data-stu-id="54fdc-184">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="54fdc-185">不過，進行適當地幫浦的某些應用程式是非常敏感幫浦作業發生的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-185">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="54fdc-186">當 interop 系統中，請在這些應用程式，在未預期的位置提取訊息，應用程式可能會遇到的重新進入的問題很難診斷。</span><span class="sxs-lookup"><span data-stu-id="54fdc-186">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="54fdc-187">因此，應用程式需要能夠控制自己提取作業，如特定 STA 及控制清除的 Rcw。</span><span class="sxs-lookup"><span data-stu-id="54fdc-187">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="54fdc-188">不過，開發人員通常只控制他們的應用程式中的執行緒的子集，並因此將無法確定會適當地提取所有執行緒。</span><span class="sxs-lookup"><span data-stu-id="54fdc-188">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="54fdc-189">若要解決此問題：</span><span class="sxs-lookup"><span data-stu-id="54fdc-189">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="54fdc-190">使用<xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType>方法，以關閉 自動清除的 Rcw，並發生時，每個執行緒為基礎的訊息幫浦作業。</span><span class="sxs-lookup"><span data-stu-id="54fdc-190">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="54fdc-191">這可讓開發人員若要退出自動清除，以及對應的訊息幫浦作業。</span><span class="sxs-lookup"><span data-stu-id="54fdc-191">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="54fdc-192">使用<xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A>方法來通知執行階段清除配置在目前的內容中的所有 Rcw。</span><span class="sxs-lookup"><span data-stu-id="54fdc-192">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="54fdc-193">此方法可讓開發人員執行階段會在目前內容中執行清除時，精確地控制。</span><span class="sxs-lookup"><span data-stu-id="54fdc-193">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-194">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-195">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-196">從 Managed 陣列複製資料到 Unmanaged 記憶體指標，或從 Unmanaged 記憶體指標複製資料到 Managed 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : byte[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-197">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-197">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-198">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-198">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-199">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-199">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-200">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-200">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-201">從一維、Managed 8 位元不帶正負號的整數 (Unsigned Integer) 陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-202">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-202">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-203">下列範例藉由將陣列複製到 unmanaged 記憶體<xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29>多載，並使用，然後將未受管理的陣列複製回 managed 記憶體<xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29>多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-203">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-204">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-204">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-205">
            <paramref name="source" />、<paramref name="startIndex" />、<paramref name="destination" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-205">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-206">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-207">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : char[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-208">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-208">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-209">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-209">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-210">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-210">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-211">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-211">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-212">從一維、Managed 字元陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-213">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-213">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-214">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-214">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-215">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-215">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-216">
            <paramref name="startIndex" />
            <paramref name="destination" /> 或 <paramref name="length" /> 是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-216">
              <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-217">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-218">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : double[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-219">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-219">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-220">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-220">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-221">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-221">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-222">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-222">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-223">從一維、Managed 雙精確度浮點數陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-224">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-224">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-225">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-225">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-226">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-226">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-227">
            <paramref name="source" />、<paramref name="startIndex" />、<paramref name="destination" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-227">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-228">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-229">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int16[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-230">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-230">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-231">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-231">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-232">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-232">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-233">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-233">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-234">從一維、Managed 16 位元帶正負號的整數陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-235">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-235">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-236">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-236">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-237">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-237">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-238">
            <paramref name="source" />、<paramref name="startIndex" />、<paramref name="destination" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-238">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-239">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-240">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-241">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-241">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-242">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-242">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-243">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-243">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-244">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-244">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-245">從一維、Managed 32 位元帶正負號的整數陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-246">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-246">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-247">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-247">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-248">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-248">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-249">
            <paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-249">
              <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-250">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-250">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-251">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-251">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int64[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-252">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-252">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-253">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-253">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-254">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-254">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-255">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-255">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-256">從一維、Managed 64 位元帶正負號的整數陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-257">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-257">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-258">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-258">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-259">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-259">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-260">
            <paramref name="source" />、<paramref name="startIndex" />、<paramref name="destination" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-260">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-261">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-261">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-262">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-262">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * byte[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-263">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-263">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-264">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-264">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-265">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-265">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-266">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-266">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-267">從 Unmanaged 記憶體指標將資料複製到 Managed 8 位元不帶正負號的整數 (Unsigned Integer) 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-268">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-268">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-269">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-269">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-270">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-270">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-271">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-271">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-272">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-272">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-273">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-274">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * char[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-275">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-275">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-276">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-276">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-277">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-277">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-278">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-278">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-279">從 Unmanaged 記憶體指標將資料複製到 Managed 字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-280">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-280">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-281">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-281">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-282">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-282">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-283">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-283">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-284">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-284">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-285">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-286">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * double[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-287">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-287">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-288">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-288">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-289">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-289">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-290">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-290">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-291">從 Unmanaged 記憶體指標將資料複製到Managed 雙精確度浮點數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-292">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-292">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-293">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-293">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-294">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-294">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-295">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-295">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-296">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-296">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-297">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-298">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int16[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-299">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-299">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-300">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-300">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-301">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-301">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-302">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-302">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-303">從 Unmanaged 記憶體指標將資料複製到 Managed 16 位元帶正負號的整數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-304">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-304">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-305">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-305">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-306">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-306">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-307">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-307">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-308">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-308">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-309">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-309">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-310">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-310">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-311">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-311">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-312">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-312">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-313">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-313">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-314">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-314">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-315">從 Unmanaged 記憶體指標將資料複製到 Managed 32 位元帶正負號的整數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-316">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-316">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-317">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-317">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-318">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-318">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-319">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-319">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-320">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-320">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-321">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-321">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-322">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-322">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int64[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-323">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-323">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-324">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-324">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-325">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-325">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-326">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-326">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-327">從 Unmanaged 記憶體指標將資料複製到 Managed 64 位元帶正負號的整數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-328">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-328">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-329">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-329">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-330">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-330">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-331">下列範例會將陣列複製到 unmanaged 記憶體，並接著將未受管理的陣列複製回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-331">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-332">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-332">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-333">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-333">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-334">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-334">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * nativeint[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-335">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-335">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-336">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-336">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-337">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-337">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-338">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-338">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-339">從 Unmanaged 記憶體指標，將資料複製到 Managed <see cref="T:System.IntPtr" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-340">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-340">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-341">因此，對應至非受控的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-341">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-342">您必須初始化適當的大小，然後再呼叫的 managed 的陣列<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-342">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-343">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-343">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-344">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-345">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * single[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-346">要複製的來源記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-346">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-347">要複製到其中的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-347">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-348">複製應該在此處開始之目的地陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-348">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-349">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-349">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-350">從 Unmanaged 記憶體指標將資料複製到 Managed 單精確度浮點數陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-351">非受控，C 樣式陣列未包含界限的詳細資訊，以防止`startIndex`和`length`從要驗證的參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-351">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="54fdc-352">因此，若要對應的 unmanaged 的資料`source`參數填入受管理的陣列，不論其實用性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-352">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="54fdc-353">您必須呼叫這個方法之前初始化 managed 的陣列具有適當的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-353">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-354">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-354">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-355">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-355">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-356">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-357">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-357">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-358">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-358">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-359">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-359">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-360">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-360">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-361">從一維、Managed <see cref="T:System.IntPtr" /> 陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-362">您可以使用這個方法將複製的一維的受管理的子集<xref:System.IntPtr>unmanaged C 樣式陣列的陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-362">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-363">
            <paramref name="source" />、<paramref name="destination" />、<paramref name="startIndex" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-363">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-364">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-364">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-365">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-365">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : single[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="54fdc-366">要複製的一維陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-366">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="54fdc-367">複製應該在此處開始之來源陣列中以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-367">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="54fdc-368">要複製到的記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-368">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="54fdc-369">要複製的陣列元素數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-369">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-370">從一維、Managed 單精確度浮點數陣列將資料複製到 Unmanaged 記憶體指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-371">您可以使用這個方法，將一維 managed 陣列的子集複製到 unmanaged C 樣式陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-371">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-372">
            <paramref name="startIndex" /> 和 <paramref name="length" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-372">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-373">
            <paramref name="source" />、<paramref name="startIndex" />、<paramref name="destination" /> 或 <paramref name="length" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-373">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-374">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-374">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-375">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-375">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("CreateAggregatedObject(IntPtr, Object) may be unavailable in future releases. Instead, use CreateAggregatedObject&lt;T&gt;(IntPtr, T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296518")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter">
          <span data-ttu-id="54fdc-376">外部 <see langword="IUnknown" /> 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-376">The outer <see langword="IUnknown" /> pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="54fdc-377">要彙總的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-377">An object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-378">將 Managed 物件與指定的 COM 物件進行彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-378">Aggregates a managed object with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-379">受管理物件的內部 <see langword="IUnknown" /> 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-380"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A>方法的 managed 物件與指定的外部指標內部 managed 的指標會彙總，然後傳回 內部[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) managed 物件的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-380">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-381">
            <paramref name="o" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-381">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-382">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-383">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-384">要彙總的 Managed 物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-384">The type of the managed object to aggregate.</span>
          </span>
        </typeparam>
        <param name="pOuter">
          <span data-ttu-id="54fdc-385">外部 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="54fdc-386">要彙總的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-386">The managed object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-387">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-387">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-388">將所指定類型的 Managed 物件與指定的 COM 物件進行彙總。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-388">Aggregates a managed object of the specified type with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-389">Managed 物件的內部 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-389">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-390"><xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A>方法的內部 managed 的指標指定類型的 managed 物件與指定的外部指標，會彙總，並傳回內部[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) managed 物件的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-390">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-391">
            <paramref name="o" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-391">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-392">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-392">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-393">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-393">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : obj * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("CreateWrapperOfType(Object, Type) may be unavailable in future releases. Instead, use CreateWrapperOfType&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296519")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-394">要包裝的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-394">The object to be wrapped.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="54fdc-395">要建立的包裝函式類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-395">The type of wrapper to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-396">將指定 COM 物件包裝在指定類型的物件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-396">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-397">為想要類型之執行個體的新包裝物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-397">The newly wrapped object that is an instance of the desired type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> 將某個 COM 類別類型，通常的基底轉換`__ComObject`類型，另一個的 COM 類別類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-398"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="54fdc-399">輸入的 COM 物件，表示參數所`o`，為[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)(RCW)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-399">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="54fdc-400">同時`t`並`o`參數必須是的類別與屬性會設定其簽章<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-400">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-401">[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具適用於此屬性為您匯入類型程式庫時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-401">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="54fdc-402">如果在原始程式碼中手動建立 RCW 時，您應該套用這個屬性代表以表示其 COM 來源原始 coclass 的 managed 簽章。</span><span class="sxs-lookup"><span data-stu-id="54fdc-402">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="54fdc-403">Tlbimp.exe 會匯入 COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)做為受管理的類別和介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-403">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="54fdc-404">Coclass 介面具有相同的名稱作為原始 coclass，且受管理的類別具有原始 coclass 名稱加上 「 類別 」。</span><span class="sxs-lookup"><span data-stu-id="54fdc-404">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="54fdc-405">Coclass 的呼叫，例如`MyCoclass`會變成在 coclass 介面稱為`MyCoclass`而受管理的類別稱為`MyCoclassClass`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-405">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="54fdc-406">由於`t`必須是類別，而不介面，請務必指定 managed 的類別 (`MyCoclassClass`) 和不 coclass 介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-406">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-407">您無法的輸入 COM 物件，因為新的 RCW 執行個體包裝的身分識別[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)原始 RCW 所公開的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-407">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-408">
            <paramref name="t" /> 必須衍生自 <see langword="__ComObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-408">
              <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="54fdc-409">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-409">-or-</span>
          </span>
          <span data-ttu-id="54fdc-410">
            <paramref name="t" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-410">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-411">
            <paramref name="t" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-411">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-412">
            <paramref name="o" /> 無法轉換為目的端類型，因為不支援所需的所有介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-412">
              <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-413">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-413">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-414">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-414">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : 'T -&gt; 'Wrapper" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-415">要包裝的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-415">The type of object to wrap.</span>
          </span>
        </typeparam>
        <typeparam name="TWrapper">
          <span data-ttu-id="54fdc-416">要傳回的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-416">The type of object to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="54fdc-417">要包裝的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-417">The object to be wrapped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-418">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-418">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-419">將指定 COM 物件包裝在指定類型的物件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-419">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-420">新包裝的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-420">The newly wrapped object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> 將 COM 物件的類型轉換`T`至`TWrapper`COM 類別型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-421"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="54fdc-422">輸入的 COM 物件，表示參數所`o`，為[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)(RCW)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-422">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="54fdc-423">這兩個`T`泛型型別參數和`o`參數必須是的類別與屬性的簽章會<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-423">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="54fdc-424">[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具適用於此屬性為您匯入類型程式庫時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-424">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="54fdc-425">如果在原始程式碼中手動建立 RCW 時，您應該套用這個屬性代表以表示其 COM 來源原始 coclass 的 managed 簽章。</span><span class="sxs-lookup"><span data-stu-id="54fdc-425">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="54fdc-426">Tlbimp.exe 會匯入 COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582)做為受管理的類別和介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-426">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="54fdc-427">Coclass 介面具有相同的名稱作為原始 coclass，且受管理的類別具有原始 coclass 名稱加上 「 類別 」。</span><span class="sxs-lookup"><span data-stu-id="54fdc-427">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="54fdc-428">Coclass 的呼叫，例如`MyCoclass`會變成在 coclass 介面稱為`MyCoclass`而受管理的類別稱為`MyCoclassClass`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-428">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="54fdc-429">因為`T`必須是類別，而不介面，請務必指定 managed 的類別 (`MyCoclassClass`) 而非`coclass`介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-429">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-430">您會遺失的輸入的 COM 物件，識別，因為新的 RCW 執行個體包裝[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)原始 RCW 所公開的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-430">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-431">
            <typeparamref name="T" /> 必須衍生自 <see langword="__ComObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-431">
              <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="54fdc-432">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-432">-or-</span>
          </span>
          <span data-ttu-id="54fdc-433">
            <typeparamref name="T" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-433">
              <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-434">因為不支援所有必要的介面，<paramref name="o" /> 不能轉換為 <paramref name="TWrapper" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-434">
              <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-435">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-435">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-436">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-436">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint * Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure (ptr, structuretype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("DestroyStructure(IntPtr, Type) may be unavailable in future releases. Instead, use DestroyStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296520")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-437">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-437">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structuretype">
          <span data-ttu-id="54fdc-438">格式化類別的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-438">Type of a formatted class.</span>
          </span>
          <span data-ttu-id="54fdc-439">這提供刪除 <c>ptr</c> 參數中緩衝區的必要配置資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-439">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-440">釋放指定之 Unmanaged 記憶體區塊指向的所有子結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-440">Frees all substructures that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-441">您可以使用這個方法來釋放參考型別欄位，例如字串、 的 unmanaged 結構。</span><span class="sxs-lookup"><span data-stu-id="54fdc-441">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="54fdc-442">不同於其欄位中，結構可以是實值型別或參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-442">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="54fdc-443">實值型別結構，其中包含實值型別欄位 (所有 blittable) 會有任何必須釋放其記憶體的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-443">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="54fdc-444"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType>方法會使用這個方法避免記憶體流失時重複使用的結構所佔用的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-444">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="54fdc-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 呼叫 COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633)函式，這樣反而會釋放已配置的字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-445"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="54fdc-446">除了<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>，則<xref:System.Runtime.InteropServices.Marshal>類別會提供兩個其他記憶體解除配置方法：<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>和<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-446">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-447">
            <paramref name="structureType" /> 有自動配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-447">
              <paramref name="structureType" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="54fdc-448">使用循序或明確取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-448">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-449">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-449">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-450">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-450">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-451">格式化結構的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-451">The type of the formatted structure.</span>
          </span>
          <span data-ttu-id="54fdc-452">這提供刪除 <c>ptr</c> 參數中緩衝區的必要配置資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-452">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="54fdc-453">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-453">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-454">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-454">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-455">釋放指定之 Unmanaged 記憶體區塊指向的所有指定類型的子結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-455">Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-456">您可以使用這個方法來釋放參考型別欄位，例如字串、 的 unmanaged 結構。</span><span class="sxs-lookup"><span data-stu-id="54fdc-456">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="54fdc-457">不同於其欄位中，結構可以是實值型別或參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-457">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="54fdc-458">包含實值類型欄位 (所有 blittable) 的值型別結構有任何必須釋放其記憶體的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-458">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="54fdc-459"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType>方法會使用這個方法避免記憶體流失時重複使用的結構所佔用的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-459">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="54fdc-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> 呼叫 COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633)函式，這樣反而會釋放已配置的字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-460"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-461">
            <typeparamref name="T" /> 有自動配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-461">
              <typeparamref name="T" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="54fdc-462">使用循序或明確取代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-462">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-463">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-463">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-464">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-464">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member FinalReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.FinalReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-465">要釋放的 RCW。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-465">The RCW to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-466">藉由將[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) 的參考計數設定為 0，釋放對 RCW 的所有參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-466">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-467">與 <paramref name="o" /> 參數建立關聯的 RCW 之參考計數的新值；如果釋放成功，則為 0 (零)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-467">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-468"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>方法會釋放 COM 物件的受管理的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-468">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="54fdc-469">呼叫這個方法就相當於呼叫<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>迴圈，直到傳回 0 （零） 的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-469">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="54fdc-470">當 COM 物件上的參考計數變成 0 時，COM 物件是通常釋出，雖然這取決於 COM 物件的實作，而且已超出控制項的執行階段。</span><span class="sxs-lookup"><span data-stu-id="54fdc-470">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="54fdc-471">不過，RCW 可以仍然存在，等待進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="54fdc-471">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="54fdc-472">無法使用的 COM 物件之後它已從基礎 RCW 分開。</span><span class="sxs-lookup"><span data-stu-id="54fdc-472">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="54fdc-473">如果您嘗試在 RCW 上呼叫方法，其參考計數變成 0 之後,<xref:System.Runtime.InteropServices.InvalidComObjectException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="54fdc-473">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-474">
            <paramref name="o" /> 不是有效的 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-474">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-475">
            <paramref name="o" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-475">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-476">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-477">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-478">要釋放的 BSTR 的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-478">The address of the BSTR to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-479">使用 COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) 函式釋放 <see langword="BSTR" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-479">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-480">像是<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>，您可以使用這個方法來解除配置記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-480">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="54fdc-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> 呼叫 COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633)函式，這樣會釋放任何下列的 unmanaged 方法所配置的記憶體： `SysAllocString`， `SysAllocStringByteLen`， `SysAllocStringLen`， `SysReAllocString`， `SysReAllocStringLen`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-481"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="54fdc-482">您可以呼叫 unmanaged 的方法，例如這些項目與平台叫用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-482">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="54fdc-483">如需詳細資訊，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-483">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-484">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-484">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-485">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-485">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeCoTaskMem : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeCoTaskMem ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-486">要釋放的記憶體的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-486">The address of the memory to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-487">釋放 Unmanaged COM 工作記憶體配置器所配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-487">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-488">您可以使用<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>來釋放所配置任何記憶體<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>， <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>，或任何對等項目未受管理的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-488">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="54fdc-489">如果`ptr`參數是`null`，此方法不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="54fdc-489">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="54fdc-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> 會公開 COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638)函式，這樣會釋放所有位元組，好讓您可以不再使用的記憶體，`ptr`參數所指向。</span><span class="sxs-lookup"><span data-stu-id="54fdc-490"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="54fdc-491">除了<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>，則<xref:System.Runtime.InteropServices.Marshal>類別會提供兩個其他記憶體解除配置方法：<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>和<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-491">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-492">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-492">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-493">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-493">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberSignature Language="F#" Value="static member FreeHGlobal : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeHGlobal hglobal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal">
          <span data-ttu-id="54fdc-494">由對 <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> 的原始相應呼叫傳回的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-494">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-495">從處理序的 Unmanaged 記憶體釋放先前配置的記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-495">Frees memory previously allocated from the unmanaged memory of the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-496">您可以使用<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>來釋放任何全域所配置的堆積記憶體<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>， <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>，或任何對等項目未受管理的 API 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-496">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="54fdc-497">如果`hglobal`參數是<xref:System.IntPtr.Zero?displayProperty=nameWithType>方法不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="54fdc-497">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="54fdc-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 會公開[LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640)函式，從 Kernel32.DLL，好讓您可以不再使用的記憶體釋放所有位元組所指的`hglobal`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-498"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="54fdc-499">除了<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>，則<xref:System.Runtime.InteropServices.Marshal>類別會提供兩個其他記憶體解除配置 API 方法：<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>和<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-499">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-500">下列程式碼範例示範如何呼叫 <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-500">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="54fdc-501">此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-501">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="54fdc-502">下列範例示範如何將轉換的 managed 內容<xref:System.String>類別寫入 unmanaged 記憶體，然後再處置時完成的 unmanaged 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-502">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-503">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-503">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-504">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-504">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateGuidForType : Type -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GenerateGuidForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="54fdc-505">要為其產生 GUID 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-505">The type to generate a GUID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-506">傳回指定類型的全域唯一識別項 (GUID)，或使用類型程式庫匯出工具 (TlbExp.exe) 使用的演算法來產生 GUID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-506">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-507">指定之類型的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-507">An identifier for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-508">如果類型具有中繼資料中的 GUID，它會傳回它。</span><span class="sxs-lookup"><span data-stu-id="54fdc-508">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="54fdc-509">否則，會自動產生的 GUID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-509">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="54fdc-510">您可以使用這個方法，以程式設計方式判斷任何受管理的類型，包括 COM 看不類型的 COM GUID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-510">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="54fdc-511">類別介面是唯一的例外狀況，因為它們不對應於 managed 類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-511">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="54fdc-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> 提供與相同的功能<xref:System.Type.GUID%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-512"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-513">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-513">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-514">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-514">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateProgIdForType : Type -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GenerateProgIdForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="54fdc-515">要為其取得 ProgID 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-515">The type to get a ProgID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-516">傳回指定類型的程式設計識別項 (ProgID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-516">Returns a programmatic identifier (ProgID) for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-517">指定類型的 ProgID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-517">The ProgID of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-518">如果類型具有中繼資料中的 ProgID，則會傳回該 ProgID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-518">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="54fdc-519">否則，ProgID 會產生根據型別的完整名稱。</span><span class="sxs-lookup"><span data-stu-id="54fdc-519">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-520">
            <paramref name="type" /> 參數並不是一個可以使用 COM 來建立的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-520">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          </span>
          <span data-ttu-id="54fdc-521">類別必須為公開的、有公開的預設建構函式，並對 COM 為可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-521">The class must be public, have a public default constructor, and be COM visible.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-522">
            <paramref name="type" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-522">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-523">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-523">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-524">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-524">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="static member GetActiveObject : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetActiveObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="54fdc-525">要求之物件的程式設計識別項 (ProgID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-525">The programmatic identifier (ProgID) of the object that was requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-526">從執行物件表格 (Running Object Table，ROT) 取得指定之物件的執行中執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-526">Obtains a running instance of the specified object from the running object table (ROT).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-527">要求的物件，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-527">The object that was requested; otherwise <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-528">您可以將這個物件轉換為其支援的任何 COM 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-528">You can cast this object to any COM interface that it supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> 會公開 COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) OLEAUT32 函式。DLL;不過，後者需要類別識別碼 (CLSID) 而不是程式設計識別項 (`ProgID`) 這個方法所預期。</span><span class="sxs-lookup"><span data-stu-id="54fdc-529"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="54fdc-530">若要取得沒有已註冊的 COM 物件的執行個體`ProgID`，使用平台叫用來定義 COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx)函式。</span><span class="sxs-lookup"><span data-stu-id="54fdc-530">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="54fdc-531">如需說明平台叫用，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-531">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="54fdc-532">ProgID 和 CLSID</span><span class="sxs-lookup"><span data-stu-id="54fdc-532">ProgID and CLSID</span></span>  
 <span data-ttu-id="54fdc-533">登錄的 HKEY_CLASSES_ROOT 子樹狀結構中的索引鍵包含各種不同的子機碼的類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-533">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="54fdc-534">子機碼的大部分都是將使用者易記的字串對應至 CLSID 的 Progid。</span><span class="sxs-lookup"><span data-stu-id="54fdc-534">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="54fdc-535">應用程式通常會使用這些人類看得懂的字串而不是數字的 Clsid。</span><span class="sxs-lookup"><span data-stu-id="54fdc-535">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="54fdc-536">通常，元件會有版本無關的 ProgID 對應至最新版的安裝系統的元件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-536">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="54fdc-537">應用程式和元件主要使用 Progid 來擷取其對應的 Clsid。</span><span class="sxs-lookup"><span data-stu-id="54fdc-537">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-538">下列範例是以 Microsoft Word 的執行個體設定的電腦上執行的。</span><span class="sxs-lookup"><span data-stu-id="54fdc-538">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="54fdc-539">沒有任何執行的 Microsoft Excel 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-539">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="54fdc-540">此範例會呼叫<xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A>兩次。</span><span class="sxs-lookup"><span data-stu-id="54fdc-540">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="54fdc-541">第一次呼叫嘗試擷取 Microsoft Word 的執行個體的參考 (執行個體`Word.Application`物件)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-541">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="54fdc-542">第二次呼叫嘗試擷取 Microsoft Excel 的執行個體的參考 (執行個體`Excel.Application`物件)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-542">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="54fdc-543">程式碼已成功擷取到的 Microsoft Word 執行個體的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-543">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="54fdc-544">不過，因為未執行 Microsoft Excel，嘗試擷取第二個物件引發<xref:System.Runtime.InteropServices.COMException>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-544">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="54fdc-545">找不到物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-545">The object was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-546">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-546">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-547">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-547">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-548">傳回介面指標，表示物件的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-548">Returns an interface pointer that represents an interface for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type) may be unavailable in future releases. Instead, use GetComInterfaceForObject&lt;T,T2&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296509")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-549">提供介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-549">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="54fdc-550">所要求之介面的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-550">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-551">傳回 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面指標，表示指定物件上的指定介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-551">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="54fdc-552">自訂查詢介面存取預設為啟用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-552">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-553">介面指標，表示物件的指定介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-553">The interface pointer that represents the specified interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-554">這個方法會傳回代表指定的物件上要求的介面的介面指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-554">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="54fdc-555">如果您有預期要傳遞的介面指標的 unmanaged 的方法，它會特別有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-555">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="54fdc-556">這個方法與呼叫物件時，會導致遞增的介面指標上，才會傳回指標的參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-556">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-557">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，一旦完成指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-557">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="54fdc-558">您必須遵守使用原始 COM 介面指標時，COM 所定義的規則。</span><span class="sxs-lookup"><span data-stu-id="54fdc-558">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="54fdc-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> 當呼叫方法會公開為 COM 物件參數時非常有用<xref:System.IntPtr>類型，或使用自訂封送處理。</span><span class="sxs-lookup"><span data-stu-id="54fdc-559"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="54fdc-560">雖然較不常見，您可以使用這個方法的 managed 物件上，取得物件的 COM 可呼叫包裝函式的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-560">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="54fdc-561">例如，您可以使用<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>受管理的物件匯出至 COM，若要取得的介面指標上<xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-561">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-562">您無法取得類別介面的指標，因為類別介面缺少對應的型別，要傳遞給第二個參數 (`t`)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-562">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="54fdc-563">請改用<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>來叫用 COM 可呼叫包裝函式，這通常是自動分派類別介面的預設介面成員。</span><span class="sxs-lookup"><span data-stu-id="54fdc-563">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="54fdc-564"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>方法多載預設會允許查詢介面自訂。</span><span class="sxs-lookup"><span data-stu-id="54fdc-564">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="54fdc-565">若要指定是否要套用查詢介面自訂，請使用<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-565">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="54fdc-566">如需詳細資訊，請參閱[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)，[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)，並[類別介面簡介](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)主題。</span><span class="sxs-lookup"><span data-stu-id="54fdc-566">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-567">
            <typeparamref name="T" /> 參數不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-567">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="54fdc-568">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-568">-or-</span>
          </span>
          <span data-ttu-id="54fdc-569">類型對 COM 為不可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-569">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="54fdc-570">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-570">-or-</span>
          </span>
          <span data-ttu-id="54fdc-571">
            <typeparamref name="T" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-571">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-572">
            <paramref name="o" /> 參數不支援要求的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-572">The <paramref name="o" /> parameter does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-573">
            <paramref name="o" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-573">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-574">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-574">-or-</span>
          </span>
          <span data-ttu-id="54fdc-575">
            <typeparamref name="T" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-575">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-576">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-576">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-577">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-577">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type * System.Runtime.InteropServices.CustomQueryInterfaceMode -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetComInterfaceForObject(Object, Type, CustomQueryInterfaceMode) and support for ICustomQueryInterface may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-578">提供介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-578">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="54fdc-579">所要求之介面的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-579">The type of interface that is requested.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="54fdc-580">其中一個列舉值，指出是否要套用 <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" /> 所提供的 <see langword="IUnknown::QueryInterface" /> 自訂。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-580">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-581">傳回 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面指標，表示指定物件上的指定介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-581">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="54fdc-582">自訂查詢介面存取是由指定的自訂模式所控制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-582">Custom query interface access is controlled by the specified customization mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-583">介面指標，表示物件的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-583">The interface pointer that represents the interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> 可讓您指定是否要套用查詢介面自訂。</span><span class="sxs-lookup"><span data-stu-id="54fdc-584"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="54fdc-585">使用<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29>來套用預設值查詢介面自訂的多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-585">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-586">
            <typeparamref name="T" /> 參數不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-586">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="54fdc-587">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-587">-or-</span>
          </span>
          <span data-ttu-id="54fdc-588">類型對 COM 為不可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-588">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="54fdc-589">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-589">-or-</span>
          </span>
          <span data-ttu-id="54fdc-590">
            <typeparamref name="T" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-590">The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-591">物件 <paramref name="o" /> 不支援要求的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-591">The object <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-592">
            <paramref name="o" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-592">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-593">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-593">-or-</span>
          </span>
          <span data-ttu-id="54fdc-594">
            <typeparamref name="T" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-594">The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-595">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-596">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-597">型別<c>o</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-597">The type of <c>o</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TInterface">
          <span data-ttu-id="54fdc-598">要傳回的介面類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-598">The type of interface to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="54fdc-599">提供介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-599">The object that provides the interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-600">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-600">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-601">傳回 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面指標，表示指定類型的物件上的指定介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-601">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          </span>
          <span data-ttu-id="54fdc-602">自訂查詢介面存取預設為啟用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-602">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-603">表示 <paramref name="TInterface" /> 介面的介面指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-603">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-604">這個方法會傳回介面指標，表示`TInterface`介面上指定的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-604">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="54fdc-605">如果您有預期要傳遞的介面指標的 unmanaged 的方法，它會特別有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-605">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="54fdc-606">這個方法與呼叫物件時，會導致遞增的介面指標上，才會傳回指標的參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-606">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-607">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，當您完成使用指標的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-607">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="54fdc-608">您必須遵守使用原始 COM 介面指標時，COM 所定義的規則。</span><span class="sxs-lookup"><span data-stu-id="54fdc-608">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="54fdc-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> 當呼叫方法會公開為 COM 物件參數時非常有用<xref:System.IntPtr>類型，或使用自訂封送處理。</span><span class="sxs-lookup"><span data-stu-id="54fdc-609"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="54fdc-610">您也可以使用這個方法的 managed 物件上取得的指標物件的 COM 可呼叫包裝函式，雖然這是較不常見。</span><span class="sxs-lookup"><span data-stu-id="54fdc-610">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="54fdc-611">例如，您可以使用<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29>受管理的物件匯出至 COM，若要取得的介面指標上<xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-611">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-612"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29>方法多載預設會允許查詢介面自訂。</span><span class="sxs-lookup"><span data-stu-id="54fdc-612">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="54fdc-613">若要指定是否要套用查詢介面自訂，請使用<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29>方法多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-613">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="54fdc-614">如需詳細資訊，請參閱[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)，[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)，並[類別介面簡介](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)主題。</span><span class="sxs-lookup"><span data-stu-id="54fdc-614">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-615">
            <paramref name="TInterface" /> 參數不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-615">The <paramref name="TInterface" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="54fdc-616">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-616">-or-</span>
          </span>
          <span data-ttu-id="54fdc-617">類型對 COM 為不可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-617">The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="54fdc-618">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-618">-or-</span>
          </span>
          <span data-ttu-id="54fdc-619">
            <typeparamref name="T" /> 參數是開放式泛型類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-619">The <typeparamref name="T" /> parameter is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-620">
            <paramref name="o" /> 參數不支援 <paramref name="TInterface" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-620">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-621">
            <paramref name="o" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-621">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-622">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-623">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObjectInContext : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-624">提供介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-624">The object that provides the interface.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="54fdc-625">所要求之介面的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-625">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-626">傳回介面指標，表示物件的指定介面 (如果呼叫端與該物件位於相同內容的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-626">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-627">
            <paramref name="t" /> 所指定的介面指標，表示指定之物件的介面，但如果呼叫端與物件位於不同的內容時，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-627">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-628">這個方法是相同<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A>不同之處在於它會傳回`null`如果呼叫端不是與物件相同的內容。</span><span class="sxs-lookup"><span data-stu-id="54fdc-628">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="54fdc-629">如果您有預期要傳遞的介面指標的 unmanaged 的方法，它會特別有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-629">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-630">
            <paramref name="t" /> 不是介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-630">
              <paramref name="t" /> is not an interface.</span>
          </span>
          <span data-ttu-id="54fdc-631">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-631">-or-</span>
          </span>
          <span data-ttu-id="54fdc-632">類型對 COM 為不可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-632">The type is not visible to COM.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-633">
            <paramref name="o" /> 不支援要求的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-633">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-634">
            <paramref name="o" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-634">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-635">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-635">-or-</span>
          </span>
          <span data-ttu-id="54fdc-636">
            <paramref name="t" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-636">
              <paramref name="t" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-637">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-637">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-638">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-638">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="static member GetComObjectData : obj * obj -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetComObjectData (obj, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="54fdc-639">包含所需資料的 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-639">The COM object that contains the data that you want.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54fdc-640">要從中擷取資料的 <c>obj</c> 之內部雜湊表中的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-640">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-641">從指定的 COM 物件擷取指定的索引鍵所參考的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-641">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-642">由 <paramref name="obj" /> 參數的內部雜湊表中之 <paramref name="key" /> 參數所代表的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-642">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-643">所有的 COM 物件包裝在[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)有相關聯的雜湊資料表，其中<xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A>擷取。</span><span class="sxs-lookup"><span data-stu-id="54fdc-643">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="54fdc-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> 將資料加入雜湊表。</span><span class="sxs-lookup"><span data-stu-id="54fdc-644"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="54fdc-645">您應該永遠不會需要從您的程式碼呼叫這兩種方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-645">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-646">
            <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-646">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-647">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-647">-or-</span>
          </span>
          <span data-ttu-id="54fdc-648">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-648">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-649">
            <paramref name="obj" /> 不是 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-649">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="54fdc-650">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-650">-or-</span>
          </span>
          <span data-ttu-id="54fdc-651">
            <paramref name="obj" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-651">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-652">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-652">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-653">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-653">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member GetComSlotForMethodInfo : System.Reflection.MemberInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="54fdc-654">表示介面方法的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-654">An object that represents an interface method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-655">擷取公開給 COM 時，指定之 <see cref="T:System.Reflection.MemberInfo" /> 類型的虛擬函式表 (v-table 或 VTBL) 位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-655">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-656">公開給 COM 時的 VTBL 位置 <paramref name="m" /> 識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-656">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-657">傳回此方法的帳戶就是三個的以零為起始的位置編號[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)和四個可能[IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)方法，讓第一個可用插槽的值是 3 或 7。</span><span class="sxs-lookup"><span data-stu-id="54fdc-657">The zero-based slot number returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="54fdc-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-658"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-659">您可以使用這個方法來擷取位置的數字，不會顯示來自 COM 的介面的成員和私用介面的成員。</span><span class="sxs-lookup"><span data-stu-id="54fdc-659">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="54fdc-660">傳回的位置數字對應到資料表 v 數字，會保留，如果型別已公開至 com。</span><span class="sxs-lookup"><span data-stu-id="54fdc-660">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="54fdc-661">COM 看不成員實際上會佔用公開 v 表中的位置，即使 COM 用戶端無法使用的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-661">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="54fdc-662">您無法使用<xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A>藉由傳遞的類別介面上<xref:System.Reflection.MemberInfo>自的類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-662">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="54fdc-663">如需詳細資訊，請參閱[類別介面簡介](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-663">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-664">
            <paramref name="m" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-664">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-665">
            <paramref name="m" /> 參數不是 <see cref="T:System.Reflection.MemberInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-665">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-666">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-666">-or-</span>
          </span>
          <span data-ttu-id="54fdc-667">
            <paramref name="m" /> 參數不是介面方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-667">The <paramref name="m" /> parameter is not an interface method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-668">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-668">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-669">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-669">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint * Type -&gt; Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer (ptr, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetDelegateForFunctionPointer(IntPtr, Type) may be unavailable in future releases. Instead, use GetDelegateForFunctionPointer&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296521")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-670">要轉換的 Unmanaged 函式指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-670">The unmanaged function pointer to be converted.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="54fdc-671">要傳回的委派型别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-671">The type of the delegate to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-672">將 Unmanaged 函式指標轉換成委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-672">Converts an unmanaged function pointer to a delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-673">委派執行個體，可轉型成適當的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-673">A delegate instance that can be cast to the appropriate delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-674">在 1.0 和 1.1 版的.NET framework 版本，則可以傳遞委派至 unmanaged 程式碼的 managed 的方法當作函式指標，讓未受管理的程式碼，以呼叫受管理的方法，透過函式指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-674">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="54fdc-675">它也是可能要將該函式指標傳遞至 managed 程式碼中，unmanaged 程式碼和指標已正確地解析為基礎的 managed 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-675">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="54fdc-676">在.NET Framework 2.0 和更新版本中，您可以使用<xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>和<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A>方法來封送處理兩個方向的委派。</span><span class="sxs-lookup"><span data-stu-id="54fdc-676">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="54fdc-677">具有<xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>，`ptr`匯入為<xref:System.IntPtr?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-677">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-678">A<xref:System.IntPtr?displayProperty=nameWithType>可以取得受管理的委派，藉由呼叫<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A>和傳遞做為參數，它便可以呼叫從 unmanaged 方法內。</span><span class="sxs-lookup"><span data-stu-id="54fdc-678">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="54fdc-679">請注意，參數封送處理器可以也封送處理.NET Framework 2.0 和更新版本中的委派函式指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-679">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="54fdc-680"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>方法具有下列限制：</span><span class="sxs-lookup"><span data-stu-id="54fdc-680">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="54fdc-681">在 interop 的案例中不支援泛型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-681">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="54fdc-682">您無法將無效的函式指標傳遞給這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-682">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="54fdc-683">您可以使用這個方法只會針對純 unmanaged 函式指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-683">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="54fdc-684">您無法使用這個方法與透過 c + +，或從取得的函式指標<xref:System.RuntimeMethodHandle.GetFunctionPointer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-684">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="54fdc-685">您無法使用這個方法來建立從函式指標的委派給另一部受管理的委派。</span><span class="sxs-lookup"><span data-stu-id="54fdc-685">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-686">
            <paramref name="t" /> 參數不是委派，或者是泛型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-686">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-687">
            <paramref name="ptr" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-687">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-688">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-688">-or-</span>
          </span>
          <span data-ttu-id="54fdc-689">
            <paramref name="t" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-689">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-690">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-690">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-691">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-691">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint -&gt; 'Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="54fdc-692">要傳回的委派型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-692">The type of the delegate to return.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="54fdc-693">要轉換的 Unmanaged 函式指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-693">The unmanaged function pointer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-694">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-694">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-695">將 Unmanaged 函式指標轉換成所指定類型的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-695">Converts an unmanaged function pointer to a delegate of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-696">指定之委派類型的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-696">A instance of the specified delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-697">您可以使用<xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29>和<xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29>方法來封送處理兩個方向的委派。</span><span class="sxs-lookup"><span data-stu-id="54fdc-697">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="54fdc-698"><xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29>方法具有下列限制：</span><span class="sxs-lookup"><span data-stu-id="54fdc-698">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="54fdc-699">您無法將無效的函式指標傳遞給這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-699">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="54fdc-700">您可以使用這個方法只會針對純 unmanaged 函式指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-700">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="54fdc-701">您無法使用這個方法與透過 c + +，或從取得的函式指標<xref:System.RuntimeMethodHandle.GetFunctionPointer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-701">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="54fdc-702">您無法使用這個方法來建立從函式指標的委派給另一部受管理的委派。</span><span class="sxs-lookup"><span data-stu-id="54fdc-702">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-703">
            <paramref name="TDelegate" /> 泛型參數不是委派，否則就是開放式泛型類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-703">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-704">
            <paramref name="ptr" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-704">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-705">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-705">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-706">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-706">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetEndComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetEndComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-707">表示介面或類別的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-707">A type that represents an interface or class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-708">擷取公開給 COM 時，類型在虛擬函式表 (v-table 或 VTBL) 中的最後一個位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-708">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-709">公開給 COM 時介面的最後一個 VTBL 位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-709">The last VTBL slot of the interface when exposed to COM.</span>
          </span>
          <span data-ttu-id="54fdc-710">如果 <paramref name="t" /> 參數為類別，傳回的 VTBL 位置是自類別所產生介面中的最後位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-710">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-711">這個方法會傳回以零起始，v 資料表數目的介面或類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-711">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="54fdc-712">類別上使用時，傳回的位置數字是指類別介面的類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-712">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="54fdc-713">如果自動雙重類別介面，此方法一律會傳回-1 表示僅分派介面不會公開給受管理的用戶端 v 資料表。</span><span class="sxs-lookup"><span data-stu-id="54fdc-713">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="54fdc-714">您可以使用<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A>並<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType>搭配<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>將指定的範圍內的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-714">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="54fdc-715">如需詳細資訊，請參閱[類別介面簡介](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-715">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-716">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-716">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-717">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-717">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberSignature Language="F#" Value="static member GetExceptionCode : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetExceptionCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetExceptionCode() may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-718">擷取可辨識發生的例外狀況 (Exception) 類型的代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-718">Retrieves a code that identifies the type of the exception that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-719">例外狀況的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-719">The type of the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> 會公開編譯器支援結構化例外狀況，只處理 (SEH)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-720"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="54fdc-721">如果呼叫這個方法時擲回例外狀況之前，它會傳回 0x0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-721">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-722">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-722">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-723">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-723">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-724">將 HRESULT 錯誤碼轉換成對應的 <see cref="T:System.Exception" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-724">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="54fdc-725">要轉換的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-725">The HRESULT to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-726">將指定的 HRESULT 錯誤碼轉換成對應的 <see cref="T:System.Exception" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-726">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-727">物件，表示轉換的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-727">An object that represents the converted HRESULT.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-728">使用<xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A>方法來取得<xref:System.Exception>不必呼叫基礎 HRESULT<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>方法 」 和 「 catch 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-728">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="54fdc-729">目前[IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447)介面用來建構例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-729">The current [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="54fdc-730">每一個 hresult 與其在.NET Framework 中的可比較的例外狀況類別的對應，請參閱 <<c0> [ 如何： 對應 Hresult 和例外狀況](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-730">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-731">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-731">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-732">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-732">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int * nativeint -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="54fdc-733">要轉換的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-733">The HRESULT to be converted.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="54fdc-734">
            <see langword="IErrorInfo" /> 介面的指標，此介面提供關於這個錯誤的詳細資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-734">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="54fdc-735">您可以指定 <c>IntPtr(0)</c> 以使用目前的 <see langword="IErrorInfo" /> 介面，或指定 <c>IntPtr(-1)</c> 忽略目前的 <see langword="IErrorInfo" /> 介面，並且只從錯誤碼建構例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-735">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-736">將指定的 HRESULT 錯誤碼轉換成對應的 <see cref="T:System.Exception" /> 物件，並將其他錯誤資訊傳入此例外狀況物件的 [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-736">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-737">物件，表示已轉換的 HRESULT 以及從 <paramref name="errorInfo" /> 取得的資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-737">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-738">使用<xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A>方法來取得<xref:System.Exception>不必呼叫基礎 HRESULT<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>方法 」 和 「 catch 例外狀況 （以避免相對應的效能額外負荷）。</span><span class="sxs-lookup"><span data-stu-id="54fdc-738">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="54fdc-739">`errorInfo`參數提供的錯誤，例如它的文字說明和定義錯誤之介面的全域唯一識別碼 (GUID) 的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="54fdc-739">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="54fdc-740">如果您有自訂的錯誤資訊，您必須提供轉換中，請使用這個方法多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-740">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="54fdc-741">每一個 hresult 與其在.NET Framework 中的可比較的例外狀況類別的對應，請參閱 <<c0> [ 如何： 對應 Hresult 和例外狀況](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-741">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-742">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-742">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-743">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-743">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberSignature Language="F#" Value="static member GetExceptionPointers : unit -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetExceptionPointers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-744">擷取與電腦無關的例外狀況描述，和例外狀況發生時為執行緒保留的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-744">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-745">[EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) 結構指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-745">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> 會公開編譯器支援結構化例外狀況，只處理 (SEH)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-746"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-747">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-747">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-748">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-748">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetFunctionPointerForDelegate(Delegate) may be unavailable in future releases. Instead, use GetFunctionPointerForDelegate&lt;T&gt;(T). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296522")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="54fdc-749">要傳遞至 Unmanaged 程式碼的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-749">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-750">將委派轉換成可從 Unmanaged 程式碼呼叫的函式指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-750">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-751">可傳遞至 Unmanaged 程式碼的值，然後程式碼就可以用它來呼叫基礎 Managed 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-751">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-752">委派`d`轉換成可以傳遞至 unmanaged 程式碼使用的函式指標[__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)呼叫慣例。</span><span class="sxs-lookup"><span data-stu-id="54fdc-752">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="54fdc-753">您以手動方式必須保留委派被記憶體回收行程收集從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-753">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="54fdc-754">記憶體回收行程不會追蹤至 unmanaged 程式碼的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-754">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-755">
            <paramref name="d" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-755">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-756">
            <paramref name="d" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-756">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-757">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-757">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-758">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-758">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : 'Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="54fdc-759">要轉換的委派類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-759">The type of delegate to convert.</span>
          </span>
        </typeparam>
        <param name="d">
          <span data-ttu-id="54fdc-760">要傳遞至 Unmanaged 程式碼的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-760">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-761">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-761">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-762">將所指定類型的委派轉換成可從 Unmanaged 程式碼呼叫的函式指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-762">Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-763">可傳遞至 Unmanaged 程式碼的值，然後程式碼就可以用它來呼叫基礎 Managed 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-763">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-764">委派`d`轉換成可傳遞至 unmanaged 程式碼所使用的函式指標[__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8)呼叫慣例。</span><span class="sxs-lookup"><span data-stu-id="54fdc-764">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="54fdc-765">您以手動方式必須保留委派被記憶體回收行程收集從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-765">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="54fdc-766">記憶體回收行程不會追蹤至 unmanaged 程式碼的參考。</span><span class="sxs-lookup"><span data-stu-id="54fdc-766">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-767">
            <paramref name="d" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-767">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-768">
            <paramref name="d" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-768">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-769">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-769">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-770">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-770">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="static member GetHINSTANCE : System.Reflection.Module -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetHINSTANCE m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="54fdc-771">需要其 HINSTANCE 的模組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-771">The module whose HINSTANCE is desired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-772">傳回指定模組的執行個體控制代碼 (HINSTANCE)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-772">Returns the instance handle (HINSTANCE) for the specified module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-773">
            <paramref name="m" /> 的 HINSTANCE，如果模組沒有 HINSTANCE，則為 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-773">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-774">當動態或在記憶體中模組沒有 HINSTANCE。</span><span class="sxs-lookup"><span data-stu-id="54fdc-774">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-775">
            <paramref name="m" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-775">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-776">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-776">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-777">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-777">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="static member GetHRForException : Exception -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="54fdc-778">要轉換成 HRESULT 的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-778">The exception to convert to an HRESULT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-779">將指定的例外狀況轉換成 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-779">Converts the specified exception to an HRESULT.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-780">對應於提供的例外狀況的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-780">The HRESULT mapped to the supplied exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> 也會設定[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)介面，可由呼叫 COM GetErrorInfoNEEDGUID 函式的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-781"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="54fdc-782">您可以使用此函式傳回的 HRESULT 值上，您套用的 COM 介面的 managed 的類別實作<xref:System.Runtime.InteropServices.PreserveSigAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-782">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="54fdc-783">已屬性化的方法攔截所有例外狀況，並使用<xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A>方法來傳回適當的 HRESULT 值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-783">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="54fdc-784">允許例外狀況傳播的方法之外，會產生不正確的行為。</span><span class="sxs-lookup"><span data-stu-id="54fdc-784">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="54fdc-785">（事實上，common language runtime 無法將例外狀況傳遞給 COM 用戶端呼叫 v 資料表透過這種方法。）</span><span class="sxs-lookup"><span data-stu-id="54fdc-785">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="54fdc-786">請注意，<xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A>方法會設定[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)目前執行緒的介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-786">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="54fdc-787">方法之類的這可能會造成非預期的結果<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>預設使用的方法[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)目前的執行緒如果設定。</span><span class="sxs-lookup"><span data-stu-id="54fdc-787">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-788">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-788">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-789">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-789">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetHRForLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-790">傳回 HRESULT，它對應於使用 <see cref="T:System.Runtime.InteropServices.Marshal" /> 執行的 Win32 程式碼所引發的最後一個錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-790">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-791">對應於最後一個 Win32 錯誤碼的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-791">The HRESULT corresponding to the last Win32 error code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-792">在目標函式必須有`setLastError`設定中繼資料旗標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-792">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="54fdc-793">例如，`SetLastError`欄位<xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType>必須是`true`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-793">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="54fdc-794">設定這個旗標的程序取決於所使用的來源語言： C# 和 c + +`false`根據預設，但`Declare`Visual Basic 中的陳述式是`true`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-794">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-795">下列範例示範如何擷取對應至 Win32 錯誤程式碼使用 HRESULT<xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-795">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-796">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-796">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-797">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-797">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-798">其 <see langword="IDispatch" /> 介面受要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-798">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-799">從 Managed 物件傳回 [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-799">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-800">
            <paramref name="o" /> 參數的 <see langword="IDispatch" /> 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-800">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-801">在 managed 程式碼，您很少使用直接`IDispatch`介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-801">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="54fdc-802">不過，<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A>時呼叫的方法公開為 COM 物件參數很有用<xref:System.IntPtr>類型，或使用自訂封送處理。</span><span class="sxs-lookup"><span data-stu-id="54fdc-802">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="54fdc-803">這個方法與呼叫物件時，會導致遞增的介面指標上，才會傳回指標的參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-803">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-804">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，一旦完成指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-804">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="54fdc-805">您也可以使用這個方法的 managed 物件上，若要取得之物件的 COM 可呼叫包裝函式的介面指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-805">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="54fdc-806">如需詳細資訊，請參閱[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-806">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-807">
            <paramref name="o" /> 不支援要求的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-807">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-808">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-808">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-809">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-809">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-810">其 <see langword="IDispatch" /> 介面受要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-810">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-811">從 Managed 物件傳回 [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) 介面指標 (如果呼叫端與該物件位於相同內容的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-811">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-812">指定之物件的 <see langword="IDispatch" /> 介面指標，如果呼叫端與指定的物件位於不同內容時，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-812">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-813">這個方法是相同<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A>不同之處在於它會傳回`null`如果呼叫端不是與物件相同的內容。</span><span class="sxs-lookup"><span data-stu-id="54fdc-813">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54fdc-814">
            <paramref name="o" /> 不支援要求的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-814">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-815">
            <paramref name="o" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-815">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-816">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-816">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-817">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-817">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetITypeInfoForType : Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetITypeInfoForType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-818">正在要求 <see langword="ITypeInfo" /> 介面的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-818">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-819">從 Managed 型別傳回 <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-819">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-820">
            <paramref name="t" /> 參數的 <see langword="ITypeInfo" /> 介面指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-820">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-821">這個方法傳回的指標`ITypeInfo`原始型別為基礎的實作。</span><span class="sxs-lookup"><span data-stu-id="54fdc-821">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="54fdc-822">呼叫物件<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>導致參考計數遞增的介面指標上，才能在傳回的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-822">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-823">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，一旦完成指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-823">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="54fdc-824">您可以套用<xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType>來取代標準的 interop 封送處理行為，使用此自訂封送處理器。</span><span class="sxs-lookup"><span data-stu-id="54fdc-824">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-825">下列範例示範如何擷取指標`ITypeInfo`介面的型別，使用<xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-825">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-826">
            <paramref name="t" /> 對 COM 不是可見的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-826">
              <paramref name="t" /> is not a visible type to COM.</span>
          </span>
          <span data-ttu-id="54fdc-827">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-827">-or-</span>
          </span>
          <span data-ttu-id="54fdc-828">
            <paramref name="t" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-828">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="54fdc-829">包含型別之組件的型別程式庫已註冊，但找不到型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-829">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-830">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-830">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-831">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-831">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-832">其 <see langword="IUnknown" /> 介面受要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-832">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-833">從 Managed 物件傳回 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-833">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-834">
            <paramref name="o" /> 參數的 <see langword="IUnknown" /> 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-834">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-835">在 managed 程式碼，您很少使用直接`IUnknown`介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-835">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="54fdc-836">不過，<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>時呼叫的方法公開為 COM 物件參數很有用<xref:System.IntPtr>類型，或使用自訂封送處理。</span><span class="sxs-lookup"><span data-stu-id="54fdc-836">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="54fdc-837">這個方法與呼叫物件時，會導致遞增的介面指標上，才會傳回指標的參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-837">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-838">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，一旦完成指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-838">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="54fdc-839">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-839">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="54fdc-840">您也可以使用受管理的物件上這個方法，若要取得的介面指標[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-840">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-841">下列範例示範如何擷取[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)介面的 managed 的物件，使用<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-841">The following example demonstrates how to retrieve an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-842">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-842">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-843">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-843">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-844">其 <see langword="IUnknown" /> 介面受要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-844">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-845">從 Managed 物件傳回 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面 (如果呼叫端與該物件位於相同內容的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-845">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-846">指定之物件的 <see langword="IUnknown" /> 指標，如果呼叫端與指定的物件位於不同內容時，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-846">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-847">這個方法是相同<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>不同之處在於它會傳回`null`如果呼叫端不是與物件相同的內容。</span><span class="sxs-lookup"><span data-stu-id="54fdc-847">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-848">下列範例示範如何擷取`IUnknown`介面的 managed 的物件，使用<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-848">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-849">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-849">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-850">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-850">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-851">傳回使用平台叫用 (已設定 <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> 旗標) 來呼叫的最後 Unmanaged 函式所傳回的錯誤碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-851">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-852">藉由呼叫 Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) 函式設定的最後錯誤碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-852">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> 會公開 Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657)函式，從 Kernel32.DLL。</span><span class="sxs-lookup"><span data-stu-id="54fdc-853"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="54fdc-854">這個方法存在，因為它不是安全進行叫用呼叫的直接存取平台`GetLastError`取得此資訊。</span><span class="sxs-lookup"><span data-stu-id="54fdc-854">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="54fdc-855">如果您想要存取此錯誤的程式碼，您必須呼叫<xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>反而比撰寫您自己的平台叫用定義`GetLastError`然後呼叫該元件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-855">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="54fdc-856">Common language runtime 可以讓 Api 覆寫的內部呼叫`GetLastError`由作業系統維護。</span><span class="sxs-lookup"><span data-stu-id="54fdc-856">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="54fdc-857">您可以使用這個方法，以取得錯誤代碼，只有當您套用<xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType>至方法簽章並將<xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>欄位設為`true`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-857">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="54fdc-858">這個程序有所不同使用原始碼語言： C# 和 c + +`false`根據預設，但`Declare`Visual Basic 中的陳述式是`true`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-858">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-859">下列程式碼範例示範如何呼叫 <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-859">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="54fdc-860">此範例會先示範如何呼叫的方法，而且有任何錯誤，並接著示範如何呼叫的方法，出現錯誤。</span><span class="sxs-lookup"><span data-stu-id="54fdc-860">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-861">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-861">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-862">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-862">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetManagedThunkForUnmanagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("The GetManagedThunkForUnmanagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="54fdc-863">要封送處理的方法的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-863">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="54fdc-864">方法簽章的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-864">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="54fdc-865">
            <c>pbSignature</c> 中的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-865">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-866">取得執行階段產生的函式指標，該函式會從 Managed 程式碼將呼叫封送處理至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-866">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-867">函式指標，會從 <paramref name="pfnMethodToWrap" /> 參數將呼叫封送處理至 Unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-867">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> 會公開僅編譯器支援。</span><span class="sxs-lookup"><span data-stu-id="54fdc-868"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-869">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-869">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-870">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-870">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfoForComSlot : Type * int *  -&gt; System.Reflection.MemberInfo" Usage="System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot (t, slot, memberType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-871">要為其擷取 <see cref="T:System.Reflection.MemberInfo" /> 的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-871">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          </span>
        </param>
        <param name="slot">
          <span data-ttu-id="54fdc-872">VTBL 位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-872">The VTBL slot.</span>
          </span>
        </param>
        <param name="memberType">
          <span data-ttu-id="54fdc-873">成功傳回時，其中一個指定成員類型的列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-873">On successful return, one of the enumeration values that specifies the type of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-874">擷取指定之虛擬函式表 (v-table 或 VTBL) 位置的 <see cref="T:System.Reflection.MemberInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-874">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-875">物件，表示指定的 VTBL 位置上的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-875">The object that represents the member at the specified VTBL slot.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-876">傳回的值可能<xref:System.Reflection.FieldInfo>， <xref:System.Reflection.MethodInfo>，或<xref:System.Reflection.PropertyInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-876">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="54fdc-877">傳回的值取決於受管理的成員存在於指定的 COM 介面槽中的型別 (因此的一般化的傳回型別<xref:System.Reflection.MemberInfo>所有三個衍生)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-877">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="54fdc-878">三個帳戶的這個方法所傳回的以零為起始的位置編號[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)和四個可能[IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)方法，讓第一個可用插槽的值是 3 或 7。</span><span class="sxs-lookup"><span data-stu-id="54fdc-878">The zero-based slot number that is returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="54fdc-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-879"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-880">您可以使用<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType>並<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType>搭配<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A>將指定的範圍內的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-880">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="54fdc-881">`memberType`參數很重要，只有在傳回時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-881">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="54fdc-882">它包含 COM 成員 （一般方法或屬性存取子） 對應至所傳回的型別<xref:System.Reflection.MemberInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-882">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-883">
            <paramref name="t" /> 對於 COM 不是可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-883">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-884">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-884">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-885">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-885">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : obj * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetNativeVariantForObject(Object, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="54fdc-886">要為其取得 COM VARIANT 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-886">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="54fdc-887">指標，用來接收對應於 <c>obj</c> 參數的 VARIANT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-887">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-888">將物件轉換為 COM VARIANT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-888">Converts an object to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-889">`pDstNativeVariant`參數必須指向足夠的記憶體來儲存產生的 VARIANT。</span><span class="sxs-lookup"><span data-stu-id="54fdc-889">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="54fdc-890">此外，此方法的實作會呼叫[VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)函式上未經處理的記憶體，`pDstNativeVariant`參數所指向。</span><span class="sxs-lookup"><span data-stu-id="54fdc-890">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-891">
            <paramref name="obj" /> 參數是泛型型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-891">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-892">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-892">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-893">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-893">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : 'T * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetNativeVariantForObject&lt;T&gt;(T, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-894">要轉換的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-894">The type of the object to convert.</span>
          </span>
        </typeparam>
        <param name="obj">
          <span data-ttu-id="54fdc-895">要為其取得 COM VARIANT 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-895">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="54fdc-896">指標，用來接收對應於 <c>obj</c> 參數的 VARIANT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-896">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-897">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-897">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-898">將所指定類型的物件轉換成 COM VARIANT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-898">Converts an object of a specified type to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-899">`pDstNativeVariant`參數必須指向足夠的記憶體來儲存產生的 VARIANT。</span><span class="sxs-lookup"><span data-stu-id="54fdc-899">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="54fdc-900">此外，此方法的實作會呼叫[VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx)函式上未經處理的記憶體，`pDstNativeVariant`參數所指向。</span><span class="sxs-lookup"><span data-stu-id="54fdc-900">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-901">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-901">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-902">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-902">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member GetObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForIUnknown pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="54fdc-903">
            <see langword="IUnknown" /> 介面的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-903">A pointer to the <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-904">傳回類型的執行個體，這個執行個體透過 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面指標來表示 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-904">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-905">表示指定之 Unmanaged COM 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-905">An object that represents the specified unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-906">這個方法會包裝`IUnknown`中受管理的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-906">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="54fdc-907">這有遞增參考次數之 COM 元件的效果。</span><span class="sxs-lookup"><span data-stu-id="54fdc-907">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="54fdc-908">執行階段受管理的物件，表示 COM 物件上執行記憶體回收時，將會遞減參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-908">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="54fdc-909">`pUnk`參數代表`IUnknown`介面指標; 不過，因為所有的 COM 介面直接或間接衍生自`IUnknown`，您可以將任何 COM 介面傳遞給這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-909">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="54fdc-910">所傳回的物件<xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A>已[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)，通用語言執行平台管理，因為它沒有任何其他 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-910">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="54fdc-911">這個包裝函式的型別通常是基底`System.__ComObject`類型，這是隱藏的類型模稜兩可的包裝函式型別時使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-911">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="54fdc-912">您仍然可以進行晚期繫結呼叫基底類型，只要 COM 琲[IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85))介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-912">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="54fdc-913">同樣地，您可以轉型成適當的 COM 介面傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-913">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="54fdc-914">要包裝的物件與特定的 managed 的類別類型 （而不是泛型包裝函式的型別），您必須遵守下列需求：</span><span class="sxs-lookup"><span data-stu-id="54fdc-914">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="54fdc-915">實作[IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) COM 物件的介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-915">Implement the [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="54fdc-916">註冊包含組件[Regasm.exe （組件登錄工具）](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-916">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="54fdc-917">或者，您可以避免這些需求，並仍取得使用與特定的 managed 的類別型別包裝的物件<xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-917">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-918">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-918">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-919">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-919">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="54fdc-920">COM VARIANT 的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-920">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-921">將 COM VARIANT 轉換為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-921">Converts a COM VARIANT to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-922">對應於 <paramref name="pSrcNativeVariant" /> 參數的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-922">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 傳回對應的 managed 的物件給原始指標至未受管理的 VARIANT 類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-923"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="54fdc-924">Interopmarshaler 公開給 managed 程式碼的 VARIANT 類型時，會執行相同的轉換。</span><span class="sxs-lookup"><span data-stu-id="54fdc-924">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="54fdc-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-925"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-926">VT_ERROR，VARIANT 型別時<xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A>傳回的物件型別的`Int32`而不是`UInt32`。</span><span class="sxs-lookup"><span data-stu-id="54fdc-926">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="54fdc-927">
            <paramref name="pSrcNativeVariant" /> 不是有效的 VARIANT 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-927">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-928">
            <paramref name="pSrcNativeVariant" /> 有不受支援的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-928">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-929">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-929">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-930">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetObjectForNativeVariant&lt;T&gt;(IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-931">要將 COM VARIANT 轉換成的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-931">The type to which to convert the COM VARIANT.</span>
          </span>
        </typeparam>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="54fdc-932">COM VARIANT 的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-932">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-933">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-933">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-934">將 COM VARIANT 轉換為所指定類型的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-934">Converts a COM VARIANT to an object of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-935">對應於 <paramref name="pSrcNativeVariant" /> 參數、指定之類型的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-935">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 傳回類型的 managed 的物件`T`對應至未受管理的 VARIANT 類型的原始指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="54fdc-937">Interopmarshaler 公開給 managed 程式碼的 VARIANT 類型時，會執行相同的轉換。</span><span class="sxs-lookup"><span data-stu-id="54fdc-937">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="54fdc-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-938"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="54fdc-939">
            <paramref name="pSrcNativeVariant" /> 不是有效的 VARIANT 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-939">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-940">
            <paramref name="pSrcNativeVariant" /> 有不受支援的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-940">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-941">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-941">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-942">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-942">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; obj[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="54fdc-943">COM VARIANT 的陣列中第一個元素的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-943">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="54fdc-944">
            <c>aSrcNativeVariant</c> 中的 COM VARIANT 計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-944">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-945">將 COM [VARIANT](http://go.microsoft.com/fwlink/?LinkId=148670) 的陣列轉換成物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-945">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-946">對應於 <paramref name="aSrcNativeVariant" /> 的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-946">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> 傳回 managed 物件的陣列，對應至未受管理的 VARIANT 類型的 C 樣式陣列的原始指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-947"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="54fdc-948">Interopmarshaler 公開給 managed 程式碼的 VARIANT 類型時，會執行相同的轉換。</span><span class="sxs-lookup"><span data-stu-id="54fdc-948">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="54fdc-949">方法會傳回空白陣列時`cVars`參數為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-949">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="54fdc-950">物件陣列 （傳回值） 會取得如往常般回收。</span><span class="sxs-lookup"><span data-stu-id="54fdc-950">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="54fdc-951">不會釋放 unmanaged 的輸入的陣列或輸入陣列中的個別變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-951">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="54fdc-952">因此您必須負責適當地釋放它們。</span><span class="sxs-lookup"><span data-stu-id="54fdc-952">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-953">
            <paramref name="cVars" /> 為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-953">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-954">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-954">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-955">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-955">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; 'T[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("GetObjectsForNativeVariants&lt;T&gt;(IntPtr, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-956">要傳回的陣列類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-956">The type of the array to return.</span>
          </span>
        </typeparam>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="54fdc-957">COM VARIANT 的陣列中第一個元素的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-957">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="54fdc-958">
            <c>aSrcNativeVariant</c> 中的 COM VARIANT 計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-958">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-959">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-959">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-960">將 COM VARIANT 的陣列轉換為所指定類型的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-960">Converts an array of COM VARIANTs to an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-961">對應於 <typeparamref name="T" /> 的 <paramref name="aSrcNativeVariant" /> 物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-961">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> 傳回的陣列`T`對應至未受管理的 VARIANT 類型的 C 樣式陣列的原始指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-962"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="54fdc-963">Interopmarshaler 公開給 managed 程式碼的 VARIANT 類型時，會執行相同的轉換。</span><span class="sxs-lookup"><span data-stu-id="54fdc-963">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="54fdc-964">方法會傳回空白陣列時`cVars`參數為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-964">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="54fdc-965">傳回的陣列是記憶體回收像往常一樣。</span><span class="sxs-lookup"><span data-stu-id="54fdc-965">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="54fdc-966">不會釋放 unmanaged 的輸入的陣列或輸入陣列中的個別變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-966">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="54fdc-967">因此，它是您必須負責適當地釋放它們。</span><span class="sxs-lookup"><span data-stu-id="54fdc-967">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-968">
            <paramref name="cVars" /> 為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-968">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-969">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-969">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-970">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-970">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetStartComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetStartComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-971">表示介面的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-971">A type that represents an interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-972">取得虛擬函式表 (v-table 或 VTBL) 中包含使用者定義之方法的第一個位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-972">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-973">包含使用者定義之方法的第一個 VTBL 位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-973">The first VTBL slot that contains user-defined methods.</span>
          </span>
          <span data-ttu-id="54fdc-974">如果介面是以 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 為基礎，第一個插槽為 3，如果介面是以 [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) 為基礎則為 7。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-974">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-975">這個方法傳回的介面或類別的以零為起始的 v 資料表號碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-975">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="54fdc-976">類別上使用時，會傳回的位置編號是指類別介面的類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-976">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="54fdc-977">如果自動分派類別介面，此方法一律會傳回-1 表示僅分派介面不會公開給受管理的用戶端 v 資料表。</span><span class="sxs-lookup"><span data-stu-id="54fdc-977">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="54fdc-978">您可以使用<xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A>並<xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType>搭配<xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>將指定的範圍內的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-978">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="54fdc-979">如需詳細資訊，請參閱[類別介面簡介](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-979">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-980">
            <paramref name="t" /> 對於 COM 不是可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-980">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-981">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-981">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-982">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-982">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberSignature Language="F#" Value="static member GetThreadFromFiberCookie : int -&gt; System.Threading.Thread" Usage="System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("The GetThreadFromFiberCookie method has been deprecated.  Use the hosting API to perform this operation.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="54fdc-983">表示 Fiber Cookie 的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-983">An integer that represents a fiber cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-984">將 Fiber Cookie 轉換成對應的 <see cref="T:System.Threading.Thread" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-984">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-985">對應於 <paramref name="cookie" /> 參數的執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-985">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-986">Fiber cookie 是不透明時警示及其 fiber 排程決策的 common language runtime 主應用程式所使用的權杖。</span><span class="sxs-lookup"><span data-stu-id="54fdc-986">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="54fdc-987">這些堆疊所組成，並註冊內容。</span><span class="sxs-lookup"><span data-stu-id="54fdc-987">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-988">
            <paramref name="cookie" /> 參數為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-988">The <paramref name="cookie" /> parameter is 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-989">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-989">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-990">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-990">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetTypedObjectForIUnknown : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown (pUnk, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="54fdc-991">Unmanaged 物件的 <see langword="IUnknown" /> 介面指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-991">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="54fdc-992">要求之 Managed 類別的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-992">The type of the requested managed class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-993">傳回表示 COM 物件之指定類型的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-993">Returns a managed object of a specified type that represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-994">對應於 <see cref="T:System.Type" /> 物件 (代表要求的 Unmanaged COM 物件) 的類別執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-994">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-995">`t`參數必須是 COM 匯入的類型或 COM 匯入型別的子型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-995">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="54fdc-996">颾魤 ㄛ`t`必須是的類型，其中繼資料已匯入[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具。</span><span class="sxs-lookup"><span data-stu-id="54fdc-996">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="54fdc-997">此類型必須是類別和不相關聯的 coclass 介面，但這會帶來 COM 類別的名稱。</span><span class="sxs-lookup"><span data-stu-id="54fdc-997">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="54fdc-998">比方說，如果 Tlbimp.exe 匯入`Myclass`做為類別稱為`MyclassClass`為 coclass 介面呼叫`Myclass`，您必須使用`MyclassClass`(不`Myclass`) 使用此方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-998">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="54fdc-999">如需有關匯入的類別和介面，coclass 的詳細資訊，請參閱[匯入型別轉換](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-999">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="54fdc-1000">如果物件已取得`pUnk`參數，`t`會被忽略，且會傳回現有的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1000">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="54fdc-1001">`pUnk` 代表[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)介面指標; 不過，因為所有的 COM 介面直接或間接衍生自`IUnknown`，您可以將任何 COM 介面傳遞給這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1001">`pUnk` represents an[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="54fdc-1002">所傳回的物件<xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A>已[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)(RCW)，通用語言執行平台管理，因為它沒有任何其他 managed 的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1002">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1003">
            <paramref name="t" /> 未以 <see cref="T:System.Runtime.InteropServices.ComImportAttribute" /> 賦予屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1003">
              <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          </span>
          <span data-ttu-id="54fdc-1004">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1004">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1005">
            <paramref name="t" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1005">
              <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1006">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1006">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1007">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1007">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeForITypeInfo : nativeint -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo piTypeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo">
          <span data-ttu-id="54fdc-1008">要封送處理的 <see langword="ITypeInfo" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1008">The <see langword="ITypeInfo" /> interface to marshal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1009">將 Unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 物件轉換成 Managed <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1009">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1010">表示 Unmanaged <see langword="ITypeInfo" /> 物件的 Managed 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1010">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> 傳回<xref:System.Type?displayProperty=nameWithType>原始型別為基礎的執行個體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="54fdc-1012">您可以套用<xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType>來取代標準的 interop 封送處理行為，使用此自訂封送處理器。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1012">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="54fdc-1013">[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具用來將轉譯的自訂封送處理器`ITypeInfo`參數來<xref:System.Type?displayProperty=nameWithType>參數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1013">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="54fdc-1014">不過，如果您取得`ITypeInfo`介面所提供部分表示 Tlbimp.exe 以外，您可以使用<xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A>以手動方式執行相同的翻譯。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1014">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1015">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1015">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1016">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1016">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromCLSID : Guid -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeFromCLSID clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="54fdc-1017">要傳回之類型的 CLSID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1017">The CLSID of the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1018">傳回與指定的類別識別項 (CLSID) 關聯的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1018">Returns the type associated with the specified class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1019">
            <see langword="System.__ComObject" />，不論 CLSID 是否有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1019">
              <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1020">擷取以 [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 物件表示的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1020">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.ComTypes.ITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="54fdc-1021">表示 <see langword="ITypeInfo" /> 指標的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1021">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1022">擷取以 [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 物件表示的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1022">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1023">
            <paramref name="typeInfo" /> 參數所指向的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1023">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1024">您也可以擷取所表示的類型名稱`ITypeInfo`藉由呼叫<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>方法並傳遞其第一個參數為-1。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1024">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1025">
            <paramref name="typeInfo" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1025">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1026">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1026">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1027">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1027">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.UCOMITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName pTI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeInfoName(ITypeInfo pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI">
          <span data-ttu-id="54fdc-1028">表示 <see langword="ITypeInfo" /> 指標的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1028">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1029">擷取以 [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) 物件表示的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1029">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1030">
            <paramref name="pTI" /> 參數所指向的類型名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1030">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1031">您也可以擷取所表示的類型名稱`ITypeInfo`藉由呼叫物件<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>方法並傳遞其第一個參數為-1。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1031">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1032">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1032">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1033">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1033">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1034">擷取類型程式庫的程式庫識別項 (LIBID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1034">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="54fdc-1035">要擷取其 LIBID 的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1035">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1036">擷取類型程式庫的程式庫識別項 (LIBID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1036">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1037">指定之類型程式庫的 LIBID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1037">The LIBID of the specified type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 擷取直接從現有的型別程式庫的 LIBID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1038"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="54fdc-1039">這個動作不同於<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType>方法，它會計算 LIBID 應該是根據目前的組件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1039">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="54fdc-1040">如需文件庫識別項的詳細資訊，請參閱[匯出組件的轉換](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1040">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1041">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1041">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1042">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1042">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.UCOMITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibGuid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="54fdc-1043">要擷取其 LIBID 的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1043">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1044">擷取類型程式庫的程式庫識別項 (LIBID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1044">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1045">
            <paramref name="pTLB" /> 參數指向的類型程式庫的 LIBID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1045">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 擷取直接從現有的型別程式庫的 LIBID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1046"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="54fdc-1047">這個動作不同於<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType>方法，它會計算 LIBID 應該是根據目前的組件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1047">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="54fdc-1048">如需文件庫識別項的詳細資訊，請參閱[匯出組件的轉換](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1048">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1049">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1049">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1050">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1050">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuidForAssembly : System.Reflection.Assembly -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly asm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm">
          <span data-ttu-id="54fdc-1051">匯出類型程式庫的來源組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1051">The assembly from which the type library was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1052">擷取當它從指定組件 (Assembly) 匯出時指派給類型程式庫的程式庫識別項 (LIBID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1052">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1053">從指定的組件匯出時，指派給類型程式庫的 LIBID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1053">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1054">當組件匯出至類型程式庫時，型別程式庫會指派的 LIBID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1054">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="54fdc-1055">您可以藉由套用，明確地設定 LIBID<xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType>在組件層級，或它可以自動產生。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1055">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="54fdc-1056">[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具會計算組件的身分識別為基礎的 LIBID 值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1056">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="54fdc-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> 傳回相關聯的 LIBID <xref:System.Runtime.InteropServices.GuidAttribute>，如果已套用屬性。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1057"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="54fdc-1058">否則，<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A>傳回導出的值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1058">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="54fdc-1059">或者，您可以使用<xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A>方法，以從現有的型別程式庫中擷取實際的 LIBID。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1059">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="54fdc-1060">請參閱[匯出組件的轉換](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86)文件庫識別項的詳細資訊的主題。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1060">See the [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1061">
            <paramref name="asm" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1061">
              <paramref name="asm" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1062">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1062">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1063">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1063">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1064">擷取類型程式庫的 LCID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1064">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="54fdc-1065">要擷取其 LCID 的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1065">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1066">擷取類型程式庫的 LCID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1066">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1067">
            <paramref name="typelib" /> 參數指向的類型程式庫的 LCID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1067">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1068">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1068">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1069">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1069">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.UCOMITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibLcid(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="54fdc-1070">要擷取其 LCID 的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1070">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1071">擷取類型程式庫的 LCID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1071">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1072">
            <paramref name="pTLB" /> 參數指向的類型程式庫的 LCID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1072">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1073">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1073">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1074">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1074">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1075">擷取類型程式庫的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1075">Retrieves the name of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="54fdc-1076">要擷取其名稱的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1076">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1077">擷取類型程式庫的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1077">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1078">
            <paramref name="typelib" /> 參數指向的類型程式庫的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1078">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1079">這個方法所傳回的名稱是 library 陳述式，例如 ADODB Microsoft ADO 型別程式庫搭配使用的識別碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1079">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="54fdc-1080">名稱不是檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1080">The name is not a file name.</span></span>  
  
 <span data-ttu-id="54fdc-1081">您也可以藉由呼叫擷取類型程式庫名稱<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>方法並傳遞其第一個參數為-1。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1081">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1082">
            <paramref name="typelib" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1082">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1083">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1083">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1084">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1084">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.UCOMITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.Marshal.GetTypeLibName(ITypeLib pTLB) instead. http://go.microsoft.com/fwlink/?linkid=14202&amp;ID=0000011.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="54fdc-1085">要擷取其名稱的類型程式庫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1085">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1086">擷取類型程式庫的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1086">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1087">
            <paramref name="pTLB" /> 參數指向的類型程式庫的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1087">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1088">這個方法所傳回的名稱是 library 陳述式，例如 ADODB Microsoft ADO 型別程式庫搭配使用的識別碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1088">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="54fdc-1089">名稱不是檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1089">The name is not a file name.</span></span>  
  
 <span data-ttu-id="54fdc-1090">您也可以藉由呼叫擷取類型程式庫名稱<xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType>方法並傳遞其第一個參數為-1。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1090">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1091">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1092">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibVersionForAssembly : System.Reflection.Assembly *  *  -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly (inputAssembly, majorVersion, minorVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly">
          <span data-ttu-id="54fdc-1093">Managed 組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1093">A managed assembly.</span>
          </span>
        </param>
        <param name="majorVersion">
          <span data-ttu-id="54fdc-1094">主要版本號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1094">The major version number.</span>
          </span>
        </param>
        <param name="minorVersion">
          <span data-ttu-id="54fdc-1095">次要版本號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1095">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1096">擷取類型程式庫的版本號碼，此程式庫將從指定的組件匯出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1096">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1097">使用匯出組件之前先<xref:System.Runtime.InteropServices.TypeLibExporterFlags>與`CallerResolvedReferences`值，您可以使用這個方法來擷取組件中的型別程式庫版本。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1097">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="54fdc-1098">如果您不會套用<xref:System.Runtime.InteropServices.TypeLibVersionAttribute>屬性匯出組件，以明確地控制產生的型別程式庫的版本號碼，型別程式庫就會有相同的版本號碼，與組件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1098">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1099">
            <paramref name="inputAssembly" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1099">
              <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1100">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1100">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1101">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1101">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberSignature Language="F#" Value="static member GetUniqueObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown unknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown">
          <span data-ttu-id="54fdc-1102">
            <see langword="IUnknown" /> 介面的 Managed 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1102">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1103">為指定的 [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) 介面建立唯一的[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1103">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1104">指定之 <see langword="IUnknown" /> 介面的唯一 RCW。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1104">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1105"><xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A>方法可確保您收到的唯一 RCW，因為它不符合`IUnknown`現有物件的指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1105">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="54fdc-1106">使用這個方法，當您必須建立會呼叫其他程式碼不會受到影響的唯一 RCW<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1106">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1107">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1108">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedThunkForManagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("The GetUnmanagedThunkForManagedMethodPtr method has been deprecated and will be removed in a future release.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="54fdc-1109">要封送處理的方法的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1109">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="54fdc-1110">方法簽章的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1110">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="54fdc-1111">
            <c>pbSignature</c> 中的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1111">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1112">取得執行階段產生的函式指標，該函式會從 Unmanaged 程式碼將呼叫封送處理至 Managed 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1112">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1113">函式指標，會從 <paramref name="pfnMethodToWrap" /> 將呼叫封送處理至 Managed 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1113">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> 會公開僅編譯器支援。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1114"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1115">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1115">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1116">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1116">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member IsComObject : obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-1117">要檢查的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1117">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1118">指示指定物件是否表示 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1118">Indicates whether a specified object represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1119">如果 <paramref name="o" /> 參數為 COM 類型，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1119">
              <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> 會傳回`true`如果化執行個體的類別型別<xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>或是如果它是直接或間接衍生自類別與屬性<xref:System.Runtime.InteropServices.ComImportAttribute>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1120"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="54fdc-1121">[Tlbimp.exe （型別程式庫匯入工具）](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)工具適用於此屬性為您匯入類型程式庫時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1121">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="54fdc-1122">另外兩個方法也會判斷指定的物件是否表示 COM 物件，但傳回的需求`true`不同於此方法的需求。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1122">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="54fdc-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> 會傳回`true`類別 （或介面） 會與歸類<xref:System.Runtime.InteropServices.ComImportAttribute>直接; 它不會傳回`true`的衍生型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1123"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="54fdc-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> 會傳回`true`如果型別化<xref:System.Runtime.InteropServices.ComImportAttribute>或衍生自具有相同 GUID 的型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1124"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1125">
            <paramref name="o" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1125">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member IsTypeVisibleFromCom : Type -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-1126">要檢查其 COM 可視性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1126">The type to check for COM visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1127">指示類型對 COM 用戶端是否為可見的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1127">Indicates whether a type is visible to COM clients.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1128">如果型別對 COM 為可見的，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1128">
              <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> 可讓您在一個步驟中的 COM 可見性檢查。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1129"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="54fdc-1130">不是可見的類型不能從 com。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1130">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="54fdc-1131">型別時，會顯示它是`public`而非隱藏的使用和<xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1131">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member NumParamBytes : System.Reflection.MethodInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.NumParamBytes m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="54fdc-1132">要檢查的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1132">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1133">計算要儲存指定方法的參數而在 unmanaged 記憶體中所需的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1133">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1134">在 Unmanaged 記憶體中表示方法參數所需的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1134">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1135"><xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A>方法會傳回代表 unmanaged 記憶體中的方法簽章的參數所需的堆疊大小 （以位元組為單位）。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1135">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="54fdc-1136">請注意，這個方法的傳回值平台相依。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1136">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="54fdc-1137">比方說，具有單一整數參數的簽章會傳回的值為 4 的 32 位元平台和的值為 8，64 位元平台上。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1137">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1138">
            <paramref name="m" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1138">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1139">
            <paramref name="m" /> 參數不是 <see cref="T:System.Reflection.MethodInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1139">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1140">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1140">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1141">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1141">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : Type * string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf (t, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("OffsetOf(Type, string) may be unavailable in future releases. Instead, use OffsetOf&lt;T&gt;(string). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296511")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-1142">指定 Managed 類別的實值類型或格式化參考類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1142">A value type or formatted reference type that specifies the managed class.</span>
          </span>
          <span data-ttu-id="54fdc-1143">您必須將 <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> 套用到類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1143">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="54fdc-1144">
            <c>t</c> 參數中的欄位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1144">The field within the <c>t</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1145">傳回 Managed 類別之 Unmanaged 表單的欄位位移 (Offset)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1145">Returns the field offset of the unmanaged form of the managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1146">平台叫用所宣告的指定類別內 <paramref name="fieldName" /> 參數的位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1146">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> 提供 unmanaged 的結構版面配置，不一定會對應至 managed 的結構配置的位移方面的位移。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1147"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="54fdc-1148">封送處理結構可以轉換的版面配置，並改變位移。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1148">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="54fdc-1149">`t`參數可以是實值類型或格式化的參考類型 （使用其中一個的循序或明確配置）。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1149">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="54fdc-1150">您可以使用，以取得整個版面配置的大小<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1150">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="54fdc-1151">如需詳細資訊，請參閱[預設封送處理實值型別](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1151">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-1152">從.NET Framework 2.0 版中，<xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A>可能會公開私用欄位。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1152">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1153">無法匯出類別，因為結構或欄位是非公用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1153">The class cannot be exported as a structure or the field is nonpublic.</span>
          </span>
          <span data-ttu-id="54fdc-1154">從 .NET Framework 2.0 版開始，這個欄位可能是私用的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1154">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1155">
            <paramref name="t" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1155">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf fieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1156">Managed 實值類型或格式化的參考類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1156">A managed value type or formatted reference type.</span>
          </span>
          <span data-ttu-id="54fdc-1157">您必須將 <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> 屬性套用到類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1157">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span>
          </span>
        </typeparam>
        <param name="fieldName">
          <span data-ttu-id="54fdc-1158">
            <c>T</c> 類型中的欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1158">The name of the field in the <c>T</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1159">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1159">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1160">傳回所指定 Managed 類別之 Unmanaged 表單的欄位位移 (Offset)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1160">Returns the field offset of the unmanaged form of a specified managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1161">平台叫用所宣告的指定類別內 <paramref name="fieldName" /> 參數的位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1161">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> 提供 unmanaged 的結構版面配置，不一定會對應至 managed 的結構配置的位移方面的位移。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1162"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="54fdc-1163">封送處理結構可以轉換的版面配置，並改變位移。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1163">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="54fdc-1164">`T`泛型類型參數可以是實值類型或格式化的參考類型 （使用其中一個的循序或明確配置）。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1164">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="54fdc-1165">您可以使用，以取得整個版面配置的大小<xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1165">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="54fdc-1166">如需詳細資訊，請參閱[預設封送處理實值型別](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1166">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-1167">從.NET Framework 2.0 版中，<xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A>可能會公開私用欄位。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1167">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member Prelink : System.Reflection.MethodInfo -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Prelink m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="54fdc-1168">要檢查的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1168">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1169">不需呼叫方法就執行一次方法設定工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1169">Executes one-time method setup tasks without calling the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1170">設定工作提供早期的初始化，並會在叫用目標方法時自動執行。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1170">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="54fdc-1171">第一次工作包括下列各項：</span><span class="sxs-lookup"><span data-stu-id="54fdc-1171">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="54fdc-1172">正在驗證的平台叫用的中繼資料已正確地格式化。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1172">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="54fdc-1173">正在驗證所有受管理的型別是否有效的參數，平台叫用函式。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1173">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="54fdc-1174">正在尋找和載入處理序的 unmanaged 的 DLL。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1174">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="54fdc-1175">尋找進入點程序中。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1175">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="54fdc-1176">呼叫<xref:System.Runtime.InteropServices.Marshal.Prelink%2A>平台之外的方法上叫用沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1176">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="54fdc-1177">若要執行安裝程式在所有平台上的工作叫用在類型中，使用的方法<xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1177">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1178">
            <paramref name="m" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1178">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1179">
            <paramref name="m" /> 參數不是 <see cref="T:System.Reflection.MethodInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1179">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1180">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1181">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberSignature Language="F#" Value="static member PrelinkAll : Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PrelinkAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="54fdc-1182">要檢查其方法的類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1182">The class whose methods are to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1183">對類別上的方法進行連結前檢查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1183">Performs a pre-link check for all methods on a class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1184"><xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A>方法會叫用<xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType>上為特定類型的每個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1184">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="54fdc-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> 執行一次方法設定工作，而不需要呼叫每個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1185"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="54fdc-1186">您可以使用<xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A>只適用於平台叫用呼叫。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1186">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1187">
            <paramref name="c" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1187">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1188">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1189">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1190">配置 Managed <see cref="T:System.String" />，並將 Unmanaged ANSI 字串的全部或部分複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1190">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1191">Unmanaged 字串第一個字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1191">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1192">從 Unmanaged ANSI 字串將直到第一個 null 字元的所有字元複製到 Managed <see cref="T:System.String" />，並且將每個 ANSI 字元擴展為 Unicode。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1192">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1193">存有 Unmanaged ANSI 字串複本的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1193">A managed string that holds a copy of the unmanaged ANSI string.</span>
          </span>
          <span data-ttu-id="54fdc-1194">如果 <paramref name="ptr" /> 為 <see langword="null" />，方法就會傳回 null 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1194">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1195"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1196">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1196">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1197">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1197">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1198">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>方法用來建立 managed 的字串從 unmanaged`char`陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1198">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1199">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1199">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1200">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1200">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1201">Unmanaged 字串第一個字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1201">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="54fdc-1202">要複製的輸入字串的位元組計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1202">The byte count of the input string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1203">配置 Managed <see cref="T:System.String" />、從 Unmanaged ANSI 字串將指定數目的字元複製到其中，並將每一個 ANSI 字元擴展為 Unicode。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1203">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1204">如果 <paramref name="ptr" /> 參數的值不是 <see langword="null" />，則為包含原生 ANSI 字串複本的 Managed 字串，否則這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1204">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1206">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1206">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1207">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1207">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1208">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>方法用來建立 managed 的字串從 unmanaged`char`陣列。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1208">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1209">
            <paramref name="len" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1209">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1210">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1210">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1211">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1211">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1212">配置 Managed <see cref="T:System.String" />，並將 Unmanaged 字串的全部或部分複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1212">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1213">對於 Unicode 平台，為第一個 Unicode 字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1213">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="54fdc-1214">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1214">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1215">對於 ANSI 平台，為第一個 ANSI 字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1215">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1216">配置 Managed <see cref="T:System.String" />，並從儲存在 Unmanaged 記憶體的字串中將直到第一個 Null 字元的所有字元複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1216">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1217">如果 <paramref name="ptr" /> 參數的值不是 <see langword="null" />，則為包含 Unmanaged 字串複本的 Managed 字串，否則這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1217">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1218">如果目前的平台是 Unicode 每一個 ANSI 字元擴展為 Unicode 字元，這個方法會呼叫<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1218">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="54fdc-1219">否則，這個方法會呼叫<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1219">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="54fdc-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1220"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1221">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1221">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1222"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1223">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1223">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1224">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1224">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1225">對於 Unicode 平台，為第一個 Unicode 字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1225">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="54fdc-1226">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1226">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1227">對於 ANSI 平台，為第一個 ANSI 字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1227">For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="54fdc-1228">要複製的字元數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1228">The number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1229">配置 Managed <see cref="T:System.String" />，並且從儲存在 Unmanaged 記憶體中的字串將指定數目的字元複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1229">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1230">如果 <paramref name="ptr" /> 參數的值不是 <see langword="null" />，則為包含原生字串複本的 Managed 字串，否則這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1230">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1231">Unicode 平台上，這個方法會呼叫<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; 在 ANSI 平台，它會呼叫<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1231">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="54fdc-1232">不會進行轉換之前會呼叫這些方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1232">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="54fdc-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1233"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1234">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1234">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1235"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1236">
            <paramref name="len" /> 小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1236">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1237">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1237">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1238">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1238">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringBSTR : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1239">Unmanaged 字串第一個字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1239">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1240">配置 Managed <see cref="T:System.String" />，並將儲存在 Unmanaged 記憶體的[二進位字串 (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) 複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1240">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1241">存有 Unmanaged 字串複本的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1241">A managed string that holds a copy of the unmanaged string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1242">呼叫這個方法只能在已配置的字串上使用 unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx)並[SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx)函式。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1242">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="54fdc-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1243"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1244">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1244">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1245">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1245">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1246">
            <paramref name="ptr" />等於 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1246">
              <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1247">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1247">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1248">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1248">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1249">配置 Managed <see cref="T:System.String" />，並將 Unmanaged Unicode 字串的全部或部分複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1249">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1250">Unmanaged 字串第一個字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1250">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1251">配置 Managed <see cref="T:System.String" />，並從 Unmanaged Unicode 字串將直到第一個 Null 字元的所有字元複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1251">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1252">如果 <paramref name="ptr" /> 參數的值不是 <see langword="null" />，則為包含 Unmanaged 字串複本的 Managed 字串，否則這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1252">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> 混合 managed 和 unmanaged 程式碼時，就是適用於自訂封送處理，或使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1254">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1254">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1255">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1255">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1256">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1256">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1257">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1257">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1258">Unmanaged 字串第一個字元的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1258">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="54fdc-1259">要複製的 Unicode 字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1259">The number of Unicode characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1260">配置 Managed <see cref="T:System.String" />，並從 Unmanaged Unicode 字串將指定數目的字元複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1260">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1261">如果 <paramref name="ptr" /> 參數的值不是 <see langword="null" />，則為包含 Unmanaged 字串複本的 Managed 字串，否則這個方法會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1261">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1262"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1263">因為此方法會建立一份 unmanaged 的字串的內容，您必須釋放為適當的原始字串。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1263">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="54fdc-1264">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType>和<xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1264">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1265">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1265">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1266">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1266">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 (ptr, byteLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1267">從 Unmanaged 記憶體區塊封送處理資料到 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1267">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * obj -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Object) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296512")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1268">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1268">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="54fdc-1269">複製資料所到的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1269">The object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="54fdc-1270">這必須是格式化類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1270">This must be an instance of a formatted class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1271">從 Unmanaged 記憶體區塊封送處理資料到 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1271">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> 通常是必要的 COM interop 和平台叫用時結構參數會表示為<xref:System.IntPtr?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1272"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="54fdc-1273">您無法使用這個多載方法具有實值類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1273">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1274">結構配置不是循序或明確的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1274">Structure layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="54fdc-1275">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1275">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1276">結構為 Boxed 實值類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1276">Structure is a boxed value type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1277">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1277">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1278">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1278">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("PtrToStructure(IntPtr, Type) may be unavailable in future releases. Instead, use PtrToStructure&lt;T&gt;(IntPtr). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296513")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1279">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1279">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structureType">
          <span data-ttu-id="54fdc-1280">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1280">The type of object to be created.</span>
          </span>
          <span data-ttu-id="54fdc-1281">這個物件必須表示格式化類別或結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1281">This object must represent a formatted class or a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1282">從 Unmanaged 記憶體區塊封送處理資料到新配置的指定類型的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1282">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1283">包含 <paramref name="ptr" /> 參數所指向的資料的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1283">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> 通常是必要的 COM interop 和平台叫用時結構參數會表示為<xref:System.IntPtr?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1284"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="54fdc-1285">您可以將實值型別傳遞至這個多載方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1285">You can pass a value type to this overload method.</span></span> <span data-ttu-id="54fdc-1286">在此情況下，傳回的物件是經過 boxing 處理的執行個體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1286">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1287">下列範例會建立受管理的結構、 將其傳輸至 unmanaged 記憶體中，並再將其傳輸回 managed 的記憶體使用<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1287">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="54fdc-1288">下列範例示範如何 unmanaged 到 managed 的結構使用的記憶體區塊封送處理<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1288">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="54fdc-1289">此程式碼假設 32 位元編譯。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1289">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="54fdc-1290">之前使用 64 位元編譯器，取代<xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType>與<xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1290">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1291">
            <paramref name="structureType" /> 參數配置不是循序或明確的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1291">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="54fdc-1292">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1292">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1293">
            <paramref name="structureType" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1293">The <paramref name="structureType" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1294">
            <paramref name="structureType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1294">
              <paramref name="structureType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="54fdc-1295">
            <paramref name="structureType" /> 指定的類別沒有可存取的預設建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1295">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1296">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1296">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1297">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1297">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1298">複製資料所到的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1298">The type of the object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="54fdc-1299">這必須是格式化類別或結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1299">This must be a formatted class or a structure.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="54fdc-1300">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1300">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1301">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1301">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1302">從 Unmanaged 記憶體區塊封送處理資料到新配置的指定類型的 Managed 物件 (其類型是由泛型型別參數所指定)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1302">Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1303">包含 <paramref name="ptr" /> 參數所指向的資料的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1303">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> 通常是必要的 COM interop 和平台叫用時結構參數會表示為<xref:System.IntPtr?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1304"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="54fdc-1305">您可以將實值型別傳遞給這個方法多載。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1305">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1306">
            <typeparamref name="T" /> 的配置不是循序或明確的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1306">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="54fdc-1307">
            <typeparamref name="T" /> 指定的類別沒有可存取的預設建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1307">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1308">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1308">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1309">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1309">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * 'T -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1310">型別<c>結構</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1310">The type of <c>structure</c>.</span>
          </span>
          <span data-ttu-id="54fdc-1311">這必須是格式化類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1311">This must be a formatted class.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="54fdc-1312">Unmanaged 記憶體區塊的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1312">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="54fdc-1313">複製資料所到的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1313">The object to which the data is to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1314">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1314">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1315">從 Unmanaged 記憶體區塊封送處理資料到指定類型的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1315">Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> 通常是必要的 COM interop 和平台叫用時結構參數會表示為<xref:System.IntPtr>值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1316"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="54fdc-1317">您無法使用這個方法多載具有實值類型。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1317">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1318">結構配置不是循序或明確的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1318">Structure layout is not sequential or explicit.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1319">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1319">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1320">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1320">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="static member QueryInterface : nativeint *  *  -&gt; int" Usage="System.Runtime.InteropServices.Marshal.QueryInterface (pUnk, iid, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="54fdc-1321">要被查詢的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1321">The interface to be queried.</span>
          </span>
        </param>
        <param name="iid">
          <span data-ttu-id="54fdc-1322">所要求介面的介面識別項 (IID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1322">The interface identifier (IID) of the requested interface.</span>
          </span>
        </param>
        <param name="ppv">
          <span data-ttu-id="54fdc-1323">這個方法傳回時，會包含到傳回介面的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1323">When this method returns, contains a reference to the returned interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1324">從 COM 物件要求指定介面的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1324">Requests a pointer to a specified interface from a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1325">表示呼叫成功或失敗的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1325">An HRESULT that indicates the success or failure of the call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1326"><xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A>方法會公開[iunknown:: Queryinterface](http://go.microsoft.com/fwlink/?LinkID=144867) COM 物件，這會嘗試取得特定的介面指標的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1326">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="54fdc-1327">使用`QueryInterface`基礎為 COM 物件是 managed 程式碼中執行轉換作業相同。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1327">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="54fdc-1328">這個方法與呼叫物件時，會導致遞增的介面指標上，才會傳回指標的參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1328">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="54fdc-1329">一律使用<xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>遞減參考計數，一旦完成指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1329">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="54fdc-1330">若要取得<xref:System.IntPtr>值，表示[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)介面指標，您可以呼叫<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>，或<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1330">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1331">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1331">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1332">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1332">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1333">從 Unmanaged 記憶體讀取單一位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1333">Reads a single byte from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1334">支援讀取未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1334">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1335">從 Unmanaged 記憶體中讀取的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1335">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1336">從 Unmanaged 記憶體讀取單一位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1336">Reads a single byte from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1337">從 Unmanaged 記憶體讀取的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1337">The byte read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 具有隱含的位移為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1338"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="54fdc-1339">這個方法可讓 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用的直接互動 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1339">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1340">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1340">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1341">下列範例會建立未受管理的記憶體區塊、 將位元組寫入 unmanaged 記憶體、 從 unmanaged 記憶體讀取位元組，然後處置 unmanaged 的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1341">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="54fdc-1342">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>方法來讀取的非受控的字元值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1342">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1343">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1343">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1344">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1344">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1345">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1345">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1346">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1346">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1347">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1347">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1348">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1348">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1349">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1349">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1350">從 Unmanaged 記憶體中讀取的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1350">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1351">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1351">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1352">從 Unmanaged 記憶體讀取在指定位移 (或索引) 的單一位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1352">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1353">從 Unmanaged 記憶體中指定位移處讀取的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1353">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1354"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1355">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1355">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1356">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteByte%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1356">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="54fdc-1357">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>方法來讀取的非受控的字元值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1357">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1358">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1358">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1359">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1359">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1360">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1360">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : obj * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("ReadByte(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1361">來源物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1361">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1362">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1362">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1363">從 Unmanaged 記憶體讀取在指定位移 (或索引) 的單一位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1363">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1364">從 Unmanaged 記憶體中指定位移處讀取的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1364">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1365"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1366">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1366">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1367">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1367">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1368">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1368">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1369">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1369">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1370">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1370">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1371">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1371">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1372">從 Unmanaged 記憶體讀取 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1372">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1373">支援讀取未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1373">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1374">從 Unmanaged 記憶體中讀取的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1374">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1375">從 Unmanaged 記憶體讀取 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1375">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1376">從 Unmanaged 記憶體讀取的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1376">The 16-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 具有隱含的位移為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1377"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="54fdc-1378">這個方法可讓未受管理的 C 樣式的直接互動`Int16`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1378">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1379">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1379">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1380">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1380">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="54fdc-1381">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>方法來讀取值的 unmanaged`short`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1381">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1382">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1382">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1383">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1383">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1384">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1384">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1385">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1385">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1386">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1386">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1387">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1387">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1388">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1388">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1389">從 Unmanaged 記憶體中讀取的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1389">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1390">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1390">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1391">從 Unmanaged 記憶體中指定位移處讀取 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1391">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1392">從 Unmanaged 記憶體中指定位移處讀取的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1392">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1393"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1394">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1394">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1395">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1395">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="54fdc-1396">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>方法來讀取值的 unmanaged`short`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1396">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1397">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1397">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1398">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1398">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1399">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1399">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : obj * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("ReadInt16(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1400">來源物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1400">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1401">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1401">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1402">從 Unmanaged 記憶體中指定位移處讀取 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1402">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1403">從 Unmanaged 記憶體中指定位移處讀取的 16 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1403">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1404"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1405">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1405">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1406">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1406">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1407">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1407">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1408">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1408">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1409">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1409">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1410">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1410">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1411">從 Unmanaged 記憶體讀取 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1411">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1412">支援讀取未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1412">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1413">從 Unmanaged 記憶體中讀取的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1413">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1414">從 Unmanaged 記憶體讀取 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1414">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1415">從 Unmanaged 記憶體讀取的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1415">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 具有隱含的位移為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1416"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="54fdc-1417">這個方法可讓未受管理的 C 樣式的直接互動`Int32`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1417">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1418">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1418">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1419">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1419">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="54fdc-1420">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>方法來讀取值的 unmanaged`int`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1420">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1421">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1421">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1422">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1422">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1423">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1423">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1424">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1424">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1425">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1425">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1426">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1426">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1427">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1427">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1428">從 Unmanaged 記憶體中讀取的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1428">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1429">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1429">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1430">從 Unmanaged 記憶體中指定位移處讀取 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1430">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1431">從 Unmanaged 記憶體讀取的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1431">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 可讓您直接互動的 unmanaged 32 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1432"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1433">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1433">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1434">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1434">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="54fdc-1435">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>方法來讀取值的 unmanaged`int`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1435">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1436">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1436">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1437">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1437">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1438">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1438">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : obj * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("ReadInt32(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1439">來源物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1439">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1440">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1440">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1441">從 Unmanaged 記憶體中指定位移處讀取 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1441">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1442">從 Unmanaged 記憶體中指定位移處讀取的 32 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1442">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> 可讓您直接互動的 unmanaged 32 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1443"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1444">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1444">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1445">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1445">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1446">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1446">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1447">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1447">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1448">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1448">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1449">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1449">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1450">從 Unmanaged 記憶體讀取 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1450">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1451">支援讀取未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1451">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1452">從 Unmanaged 記憶體中讀取的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1452">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1453">從 Unmanaged 記憶體讀取 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1453">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1454">從 Unmanaged 記憶體讀取的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1454">The 64-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 具有隱含的位移為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1455"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="54fdc-1456">這個方法可讓未受管理的 C 樣式的直接互動`Int64`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1456">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1457">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1457">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1458">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1458">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="54fdc-1459">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>方法來讀取值的 unmanaged`__int64`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1459">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1460">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1460">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1461">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1461">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1462">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1462">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1463">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1463">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1464">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1464">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1465">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1465">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1466">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1466">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1467">從 Unmanaged 記憶體中讀取的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1467">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1468">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1468">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1469">從 Unmanaged 記憶體中指定位移處讀取 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1469">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1470">從 Unmanaged 記憶體中指定位移處讀取的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1470">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 可讓您直接互動的 unmanaged 64 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1471"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1472">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1472">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1473">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1473">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="54fdc-1474">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>方法來讀取值的 unmanaged`__int64`變數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1474">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1475">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1475">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1476">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1476">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1477">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1477">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : obj * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("ReadInt64(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1478">來源物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1478">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1479">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1479">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1480">從 Unmanaged 記憶體中指定位移處讀取 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1480">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1481">從 Unmanaged 記憶體中指定位移處讀取的 64 位元帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1481">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> 可讓您直接互動的 unmanaged 64 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1482"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1483">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1483">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1484">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1484">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1485">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1485">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1486">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1486">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1487">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1487">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1488">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1488">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1489">從 Unmanaged 記憶體讀取處理器原生大小的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1489">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1490">支援讀取未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1490">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1491">從 Unmanaged 記憶體中讀取的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1491">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1492">從 Unmanaged 記憶體讀取處理器原生大小的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1492">Reads a processor native-sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1493">從 Unmanaged 記憶體讀取的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1493">The integer read from unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1494">在 32 位元電腦上會傳回 32 位元整數，而在 64 位元電腦上則會傳回 64 位元整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1494">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 具有隱含的位移為 0。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1495"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="54fdc-1496">這個方法可讓未受管理的 C 樣式的直接互動`IntPtr`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1496">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1497">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1497">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1498">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1498">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1499">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1499">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1500">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1500">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1501">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1501">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1502">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1502">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1503">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1503">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1504">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1504">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1505">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1505">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1506">從 Unmanaged 記憶體中讀取的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1506">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1507">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1507">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1508">從 Unmanaged 記憶體中指定位移處讀取處理器原生大小的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1508">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1509">從 Unmanaged 記憶體中指定位移處讀取的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1509">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 可讓您直接使用未受管理的 C 樣式的互動`IntPtr`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1510"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1511">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1511">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1512">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1512">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1513">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1513">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1514">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1514">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1515">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1515">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : obj * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("ReadIntPtr(Object, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1516">來源物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1516">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1517">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再進行讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1517">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1518">從 Unmanaged 記憶體讀取處理器原生大小的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1518">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1519">從 Unmanaged 記憶體中指定位移處讀取的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1519">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> 可讓您直接使用未受管理的 C 樣式的互動`IntPtr`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，再讀取其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1520"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1521">支援讀取未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1521">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1522">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1522">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1523">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1523">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1524">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1524">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1525">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1525">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1526">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1526">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocCoTaskMem : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="54fdc-1527">用 <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /> 所配置之記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1527">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="54fdc-1528">配置的區塊的新大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1528">The new size of the allocated block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1529">調整先前用 <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" /> 所配置的記憶體區塊的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1529">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1530">表示重新配置的記憶體區塊位址的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1530">An integer representing the address of the reallocated block of memory.</span>
          </span>
          <span data-ttu-id="54fdc-1531">這個記憶體必須使用 <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" /> 來釋放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1531">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> 中的兩種記憶體重新配置方法之一是<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1532"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="54fdc-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>是另。)重新配置的記憶體內容的開頭等同於原始的內容;不過，整個記憶體區塊都可以在不同的位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1533">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="54fdc-1534">這個方法會公開 COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778)函式，這稱為 「 COM 工作記憶體配置器。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1534">This method exposes the COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1535">記憶體不足，無法滿足要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1535">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1536">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1536">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1537">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1537">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocHGlobal : nativeint * nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocHGlobal (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="54fdc-1538">用 <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> 所配置之記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1538">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="54fdc-1539">配置的區塊的新大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1539">The new size of the allocated block.</span>
          </span>
          <span data-ttu-id="54fdc-1540">這不是指標；它是您所要求、轉換成 <see cref="T:System.IntPtr" /> 類型的位元組計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1540">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          </span>
          <span data-ttu-id="54fdc-1541">如果您傳遞指標，它會被視為大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1541">If you pass a pointer, it is treated as a size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1542">調整先前用 <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" /> 所配置的記憶體區塊的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1542">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1543">重新配置的記憶體的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1543">A pointer to the reallocated memory.</span>
          </span>
          <span data-ttu-id="54fdc-1544">這個記憶體必須使用 <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> 來釋放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1544">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> 是兩個記憶體重新配置的其中一個 API 方法<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1545"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="54fdc-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType>是另。)</span><span class="sxs-lookup"><span data-stu-id="54fdc-1546">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="54fdc-1547">這個方法會公開 Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780)函式，從 Kernel32.dll。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1547">This method exposes the Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="54fdc-1548">傳回的指標可能不同於原始。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1548">The returned pointer can differ from the original.</span></span> <span data-ttu-id="54fdc-1549">如果不同，原始記憶體區塊的內容已複製到新的區塊，並釋出原始記憶體區塊。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1549">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1550">記憶體不足，無法滿足要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1550">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1551">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1551">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1552">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1552">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member Release : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.Release pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="54fdc-1553">要釋放的介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1553">The interface to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1554">遞減指定介面上的參考次數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1554">Decrements the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1555">介面上由 <paramref name="pUnk" /> 參數指定的參考次數的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1555">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1556">通用語言執行平台管理的 COM 物件的參考計數，讓您使其不必直接使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1556">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="54fdc-1557">使用此值僅供測試用途。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1557">Use this value only for testing purposes.</span></span> <span data-ttu-id="54fdc-1558">在罕見的情況下，例如測試自訂封送處理器，您可能會發現需要手動操作物件的存留期。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1558">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="54fdc-1559">只有程式呼叫<xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType>應該呼叫<xref:System.Runtime.InteropServices.Marshal.Release%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1559">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="54fdc-1560">呼叫<xref:System.Runtime.InteropServices.Marshal.Release%2A>之後參考計數達到零會導致未定義的行為。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1560">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="54fdc-1561">您可以呼叫<xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>， <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>，或<xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>來取得<xref:System.IntPtr>值，表示[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003)釋放介面指標。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1561">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="54fdc-1562">您也可以使用這些方法和<xref:System.Runtime.InteropServices.Marshal.Release%2A>受管理的物件，表示釋放 managed 物件所表示的 COM 介面上的方法[COM 可呼叫包裝函式](~/docs/framework/interop/com-callable-wrapper.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1562">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1563">下列範例示範如何擷取`IUnknown`介面的 managed 的物件，使用<xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1563">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="54fdc-1564">範例接著會釋放介面指標呼叫<xref:System.Runtime.InteropServices.Marshal.Release%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1564">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1565">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1565">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1566">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1566">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member ReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="54fdc-1567">要釋放的 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1567">The COM object to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1568">遞減與指定 COM 物件建立關聯之[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) 的參考計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1568">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1569">與 <paramref name="o" /> 關聯的 RCW 之參考計數的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1569">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          </span>
          <span data-ttu-id="54fdc-1570">這個值通常為零，因為不論呼叫的 Managed 用戶端數目，RCW 只保留一個包裝的 COM 物件參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1570">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1571">這個方法用來明確控制用於從 managed 程式碼的 COM 物件的存留期。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1571">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="54fdc-1572">您應該使用這個方法來釋放保留資源的參考，即時或以特定順序，就必須釋放物件的基礎 COM 物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1572">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="54fdc-1573">每次 COM 介面指標輸入 common language runtime (CLR)，則會將它包裝在 RCW。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1573">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="54fdc-1574">RCW 有每當 COM 介面指標對應到它就會遞增參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1574">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="54fdc-1575"><xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>方法遞減參考計數的 RCW。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1575">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="54fdc-1576">執行階段當參考計數到達零時，釋放 unmanaged 的 COM 物件上的所有其參考，並擲回<xref:System.NullReferenceException?displayProperty=nameWithType>如果您嘗試將進一步使用的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1576">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="54fdc-1577">如果相同的 COM 介面傳遞一個以上的時間從 unmanaged 到 managed 程式碼，則包裝函式上的參考計數會遞增每個階段，並呼叫<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>傳回剩餘參考的數目。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1577">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="54fdc-1578">這個方法可讓您強制，使它會精確地當您想要的 RCW 參考計數版本。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1578">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="54fdc-1579">不過，不當使用<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>可能會導致您的應用程式失敗，或可能會造成存取違規。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1579">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="54fdc-1580">假設應用程式定義域中的 managed 程式碼緊握表示的 COM 元件的 RCW。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1580">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="54fdc-1581">如果您呼叫<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>在 RCW 上的方法，managed 程式碼將無法存取 RCW，然後發出<xref:System.Runtime.InteropServices.InvalidComObjectException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1581">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="54fdc-1582">如果 RCW 呼叫已執行發行 RCW 時，可能會發生更嚴重的錯誤。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1582">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="54fdc-1583">在此情況下，沒有機會進行呼叫的執行緒會造成存取違規。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1583">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="54fdc-1584">不過，處理序記憶體可能已損毀，而且程序可能繼續執行，直到它因為很難進行偵錯的原因而失敗。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1584">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="54fdc-1585">這項風險就更加複雜時所使用的 COM 元件是單一值，原因如下： CLR 啟動 COM 元件，藉由呼叫 COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894)函式，傳回相同的介面指標，來顯示每個它會呼叫單一 COM 元件的時間。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1585">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="54fdc-1586">因此，不同且獨立的應用程式定義域中的 managed 程式碼片段可以使用相同的 RCW 單一 COM 元件，以及是否有可能是一個呼叫<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>COM 元件上的方法，其他會中斷。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1586">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="54fdc-1587">因此，使用<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>只有當絕對必要。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1587">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="54fdc-1588">如果您想要呼叫這個方法，以確保在決定時間釋放 COM 元件，請考慮使用<xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>方法改為。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1588">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="54fdc-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> 將發行的基礎 COM 元件，不論它已重新進入 CLR 的次數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1589"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="54fdc-1590">內部的參考計數的 RCW 都會加一每次重新進入的 COM 元件的 CLR。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1590">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="54fdc-1591">因此，您可以呼叫<xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A>方法中的迴圈，直到傳回的值為零。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1591">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="54fdc-1592">這可達到相同結果<xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1592">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1593">
            <paramref name="o" /> 不是有效的 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1593">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="54fdc-1594">
            <paramref name="o" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1594">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1595">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1595">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1596">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1596">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberSignature Language="F#" Value="static member ReleaseThreadCache : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ReleaseThreadCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("This API did not perform any operation and will be removed in future versions of the CLR.", false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1597">釋放執行緒快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1597">Releases the thread cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1598">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1598">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1599">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1599">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToBSTR : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1600">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1600">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1601">配置 Unmanaged [二進位字串 (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx)，並將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1601">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1602">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目的位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1602">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1603"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1603">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1604">這個方法會配置字串所需的 unmanaged 的記憶體，因為永遠免費`BSTR`藉由呼叫完成時<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1604">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1605">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1605">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-1606">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1606">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1607">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1607">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1608">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1608">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1609">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1609">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="54fdc-1610">
            <para>這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1610">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1611">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1611">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1612">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1612">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1613">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目的位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1613">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1614"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1614">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1615">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1615">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="54fdc-1616">字串的字元會複製為 ANSI 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1616">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1617">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>方法來封送處理，並解密<xref:System.Security.SecureString>的 unmanaged 記憶體區塊的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1617">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="54fdc-1618">然後它會使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>會全面清除和處置 unmanaged 的區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1618">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1619">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1619">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-1620">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1620">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1621">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1621">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1622">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1622">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1623">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1623">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="54fdc-1624">
            <para>這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1624">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1625">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1625">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1626">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1626">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1627">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目的位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1627">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1628"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1628">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1629">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1629">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="54fdc-1630">字串的字元會複製為 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1630">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1631">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>方法來封送處理，並解密<xref:System.Security.SecureString>的 unmanaged 記憶體區塊的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1631">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="54fdc-1632">然後它會使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>會全面清除和處置 unmanaged 的區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1632">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1633">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1633">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-1634">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1634">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1635">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1635">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1636">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1636">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1637">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1637">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="54fdc-1638">
            <para>這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1638">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1639">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1639">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1640">將 Managed <see cref="T:System.Security.SecureString" /> 的內容複製到 Unmanaged 記憶體中，並在它複製時轉換成 ANSI 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1640">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1641">Unmanaged 記憶體中複製 <paramref name="s" /> 參數的目標位址；如果提供 Null 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1641">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1642"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>方法可用於自訂封送處理，或當混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1642">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1643">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1643">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1644">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>方法來封送處理，並解密<xref:System.Security.SecureString>的 unmanaged 記憶體區塊的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1644">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="54fdc-1645">然後它會使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>會全面清除和處置 unmanaged 的區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1645">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1646">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1646">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-1647">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1647">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1648">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1648">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1649">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1649">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1650">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1650">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="54fdc-1651">
            <para>這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1651">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1652">要複製的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1652">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1653">將 Managed <see cref="T:System.Security.SecureString" /> 物件的內容複製到 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1653">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1654">Unmanaged 記憶體中複製 <paramref name="s" /> 的目標位址；如果 <paramref name="s" /> 是長度為 0 的 <see cref="T:System.Security.SecureString" /> 物件，則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1654">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1655"><xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>方法會很有用的自訂封送處理，或用於混合 managed 和 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1655">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1656">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1656">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1657">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>方法使用 unmanaged`LogonUser`函式來執行模擬<xref:System.Security.SecureString>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1657">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="54fdc-1658">然後此範例使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>會全面清除並釋放的 unmanaged 的字串參考的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1658">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1659">
            <paramref name="s" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1659">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="54fdc-1660">目前的電腦未執行 Windows 2000 Service Pack 3 或更新版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1660">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1661">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1661">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1662">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1662">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1663">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1663">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="54fdc-1664">
            <para>這個方法是執行 Windows 2000 Service Pack 3 的電腦上才支援或更新版本。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1664">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetComObjectData : obj * obj * obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.SetComObjectData (obj, key, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="54fdc-1665">要儲存資料的 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1665">The COM object in which to store the data.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="54fdc-1666">要儲存資料的 COM 物件內部雜湊表中的金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1666">The key in the internal hash table of the COM object in which to store the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="54fdc-1667">要設定的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1667">The data to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1668">設定指定COM 物件中指定索引所參考的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1668">Sets data referenced by the specified key in the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1669">如果已成功設定資料，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1669">
              <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1670">所有的 COM 物件包裝在[執行階段可呼叫包裝函式](~/docs/framework/interop/runtime-callable-wrapper.md)(RCW) 有相關聯雜湊資料表，要<xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A>加入資料。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1670">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="54fdc-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> 從雜湊資料表擷取資料。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1671"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="54fdc-1672">您應該永遠不會需要從您的程式碼呼叫這兩種方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1672">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1673">
            <paramref name="obj" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1673">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1674">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1674">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1675">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1675">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1676">
            <paramref name="obj" /> 不是 COM 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1676">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="54fdc-1677">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1677">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1678">
            <paramref name="obj" /> 是 [!INCLUDE[wrt](~/includes/wrt-md.md)] 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1678">
              <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1679">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1679">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1680">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1680">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1681">傳回類別的 Unmanaged 大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1681">Returns the unmanaged size, in bytes, of a class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("SizeOf(Object) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296514")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="54fdc-1682">其大小要被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1682">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1683">傳回物件的 Unmanaged 大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1683">Returns the unmanaged size of an object in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1684">Unmanaged 程式碼中指定之物件的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1684">The size of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1685">這個方法會接受可以是參考型別或 boxed 實的值類型的結構的執行個體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1685">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="54fdc-1686">配置必須是循序或明確。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1686">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="54fdc-1687">傳回的大小是 unmanaged 物件的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1687">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="54fdc-1688">非受控和受控物件的大小可能會不同。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1688">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="54fdc-1689">字元類型的大小會受到<xref:System.Runtime.InteropServices.CharSet>套用到該類別的值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1689">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="54fdc-1690">您可以使用<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>方法來判斷多少配置使用的 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>和<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1690">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1691">下列範例會建立受管理的結構、 將其傳輸至 unmanaged 記憶體中，並再將其傳輸回 managed 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1691">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="54fdc-1692">這個範例會使用<xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>方法，以判斷要配置多少 unmanaged 的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1692">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1693">
            <paramref name="structure" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1693">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member SizeOf : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("SizeOf(Type) may be unavailable in future releases. Instead, use SizeOf&lt;T&gt;(). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296515")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="54fdc-1694">要傳回其大小的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1694">The type whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1695">傳回 Unmanaged 類型的大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1695">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1696">Unmanaged 程式碼中指定之類型的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1696">The size of the specified type in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1697">當您不需要結構時，您可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1697">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="54fdc-1698">配置必須是循序或明確。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1698">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="54fdc-1699">傳回的大小是 unmanaged 類型的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1699">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="54fdc-1700">非受控和受控物件的大小可能會不同。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1700">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="54fdc-1701">字元類型的大小會受到<xref:System.Runtime.InteropServices.CharSet>套用到該類別的值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1701">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1702">下列程式碼範例示範如何呼叫 <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1702">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="54fdc-1703">此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1703">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1704">
            <paramref name="t" /> 參數是泛型型別定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1704">The <paramref name="t" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1705">
            <paramref name="t" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1705">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1706">要傳回其大小的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1706">The type whose size is to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="54fdc-1707">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1707">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1708">傳回 Unmanaged 類型的大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1708">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1709">
            <typeparamref name="T" /> 泛型類型參數所指定之類型的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1709">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1710">當您不需要結構時，您可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1710">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="54fdc-1711">配置必須是循序或明確。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1711">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="54fdc-1712">傳回的大小是 unmanaged 類型的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1712">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="54fdc-1713">非受控和受控物件的大小可能會不同。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1713">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="54fdc-1714">字元類型的大小會受到<xref:System.Runtime.InteropServices.CharSet>套用到該類別的值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1714">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : 'T -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1715">型別<c>結構</c>參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1715">The type of the <c>structure</c> parameter.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="54fdc-1716">其大小要被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1716">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1717">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1717">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1718">傳回指定類型之物件的 Unmanaged 大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1718">Returns the unmanaged size of an object of a specified type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1719">Unmanaged 程式碼中指定之物件的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1719">The size, in bytes, of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1720">這個方法會接受可以是參考型別或 boxed 實的值類型的結構的執行個體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1720">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="54fdc-1721">配置必須是循序或明確。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1721">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="54fdc-1722">傳回的大小是 unmanaged 物件的大小。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1722">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="54fdc-1723">非受控和受控物件的大小可能會不同。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1723">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="54fdc-1724">字元類型的大小會受到<xref:System.Runtime.InteropServices.CharSet>套用到該類別的值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1724">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="54fdc-1725">您可以使用<xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29>方法，以判斷要使用來配置多少 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>和<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1725">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54fdc-1726">
            <paramref name="structure" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1726">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToBSTR : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1727">要被複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1727">The managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1728">配置 [BSTR](https://msdn.microsoft.com/library/ms221069.aspx)，並將 Managed <see cref="T:System.String" /> 的內容複製到其中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1728">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1729">
            <see langword="BSTR" /> 的 Unmanaged 指標，如果 <paramref name="s" /> 為 null 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1729">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1730"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1731">這個方法會配置字串所需的 unmanaged 的記憶體，因為永遠免費`BSTR`藉由呼叫完成時<xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1731">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-1732">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1732">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1733">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1733">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1734">
            <paramref name="s" /> 的長度超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1734">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1735">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1735">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1736">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1736">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1737">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1737">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1738">複製 Managed <see cref="T:System.String" /> 的內容到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1738">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1739">整數，表示配置給字串的記憶體區塊指標，如果 <paramref name="s" /> 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1739">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1740"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1741">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1741">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="54fdc-1742">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1742">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-1743">字串的字元會複製為 ANSI 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1743">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1744">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1744">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1745">
            <paramref name="s" /> 參數超過作業系統所允許的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1745">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1746">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1746">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1747">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1747">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1748">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1748">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1749">複製 Managed <see cref="T:System.String" /> 的內容到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1749">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1750">配置的記憶體區塊，如果 <paramref name="s" /> 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1750">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> 混合 managed 和 unmanaged 程式碼時，就是適用於自訂封送處理，或使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1751"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1752">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1752">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="54fdc-1753">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1753">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1754">字串的字元會複製為 ANSI 或 Unicode 字元，根據程式碼執行所在的作業系統。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1754">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="54fdc-1755">在 Windows 98 上為 ANSI 字元複製的字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1755">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="54fdc-1756">在 Windows NT 4.0 Windows 2000、 Windows XP 和 Windows Server 2003 系列，會複製為 Unicode 字元的字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1756">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1757">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1757">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1758">
            <paramref name="s" /> 的長度超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1758">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1759">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1759">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1760">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1760">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1761">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1761">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1762">複製 Managed <see cref="T:System.String" /> 的內容到從 Unmanaged COM 工作配置器配置的記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1762">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1763">整數，表示配置給字串的記憶體區塊指標，如果 s 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1763">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> 混合 managed 和 unmanaged 程式碼時，就是適用於自訂封送處理，或使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1764"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1765">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1765">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-1766">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1766">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="54fdc-1767">字串的字元會複製為 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1767">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1768">
            <paramref name="s" /> 參數超過作業系統所允許的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1768">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1769">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1769">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1770">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1770">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1771">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1771">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUTF8 : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1772">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1772">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1773">將 Managed <see cref="T:System.String" /> 的內容複製到 Unmanaged 記憶體中，並在它複製時轉換成 ANSI 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1773">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1774">Unmanaged 記憶體中複製 <paramref name="s" /> 的目的位址，如果 <paramref name="s" /> 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1774">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 是自訂封送處理，或混合 managed 和 unmanaged 程式碼時很有用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1775"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1776">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1776">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="54fdc-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> 提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1777"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1778">這個方法會複製內嵌的 null 字元，並包含結束的 null 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1778">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1779">下列範例示範如何將轉換的 managed 內容<xref:System.String>類別寫入 unmanaged 記憶體，然後再處置時完成的 unmanaged 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1779">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1780">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1780">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1781">
            <paramref name="s" /> 參數超過作業系統所允許的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1781">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1782">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1782">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1783">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1783">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1784">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1784">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1785">複製 Managed <see cref="T:System.String" /> 的內容到 Unmanaged 記憶體中，如有需要則轉換成 ANSI 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1785">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1786">Unmanaged 記憶體中複製字串的目的位址，如果 <paramref name="s" /> 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1786">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> 混合 managed 和 unmanaged 程式碼時，就是適用於自訂封送處理，或使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1787"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1788">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1788">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="54fdc-1789">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1789">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1790">這個方法會複製內嵌的 null 字元，並包含結束的 null 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1790">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1791">下列範例示範如何將轉換的 managed 內容<xref:System.String>類別寫入 unmanaged 記憶體，然後再處置時完成的 unmanaged 記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1791">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1792">可用的記憶體不足。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1792">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1793">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1793">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1794">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1794">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-1795">要複製的 Managed 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1795">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1796">將 Managed <see cref="T:System.String" /> 的內容複製到 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1796">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1797">Unmanaged 記憶體中複製 <paramref name="s" /> 的目的位址，如果 <paramref name="s" /> 為 <see langword="null" /> 則為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1797">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> 混合 managed 和 unmanaged 程式碼時，就是適用於自訂封送處理，或使用。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1798"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="54fdc-1799">因為此方法會配置字串所需的 unmanaged 的記憶體，一律以釋放記憶體呼叫<xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1799">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="54fdc-1800">這個方法提供的功能相反<xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1800">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1801">這個方法會複製內嵌的 null 字元，並包含結束的 null 字元。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1801">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="54fdc-1802">方法無法配置足夠的原生堆積記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1802">The method could not allocate enough native heap memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="54fdc-1803">
            <paramref name="s" /> 參數超過作業系統所允許的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1803">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1804">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1804">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1805">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1805">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : obj * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("StructureToPtr(Object, IntPtr, Boolean) may be unavailable in future releases. Instead, use StructureToPtr&lt;T&gt;(T, IntPtr, Boolean). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296516")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="54fdc-1806">存有要封送處理之資料的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1806">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="54fdc-1807">這個物件必須是格式化類別的結構或執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1807">This object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="54fdc-1808">Unmanaged 記憶體區塊的指標，這記憶體必須在呼叫這個方法之前被配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1808">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="54fdc-1809">
            <see langword="true" /> 表示在此方法複製資料之前，在 <c>ptr</c> 參數上呼叫 <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1809">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="54fdc-1810">區塊必須包含有效的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1810">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="54fdc-1811">請注意，當記憶體區塊已經包含資料時傳遞 <see langword="false" /> 會造成記憶體流失。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1811">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1812">從 Managed 物件封送處理資料到 Unmanaged 記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1812">Marshals data from a managed object to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1813">如果`structure`是實值類型，可以進行 boxed 處理或 unbox 處理。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1813">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="54fdc-1814">如果會經過 boxing 處理，它會 unboxed 複製之前。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1814">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="54fdc-1815">格式化的類別是參考類型的配置由<xref:System.Runtime.InteropServices.StructLayoutAttribute>屬性，為<xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>或<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1815">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> 複製的內容`structure`預先配置的記憶體區塊，`ptr`參數所指向。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1816"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="54fdc-1817">如果`structure`含有封送處理 COM 介面指標的參考型別 (介面，而不需要配置的類別和<xref:System.Object?displayProperty=nameWithType>)，受管理的物件會保持運作以參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1817">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="54fdc-1818">所有其他參考型別 （例如，字串和陣列） 會封送處理至複本時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1818">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="54fdc-1819">若要釋放這些受管理或未受管理的物件，您必須呼叫<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType>之前釋放記憶體區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1819">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="54fdc-1820">如果您使用<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>可在稍後的時間，將不同的執行個體複製之記憶體區塊的方法指定`true`如`fDeleteOld`移除參考計數中先前的執行個體的參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1820">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="54fdc-1821">否則，有效地流失 managed 的參考 typesand unmanaged 複本。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1821">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="54fdc-1822">整體使用模式<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>如下所示：</span><span class="sxs-lookup"><span data-stu-id="54fdc-1822">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="54fdc-1823">在第一次呼叫<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>方法之後已配置的記憶體區塊，`fDeleteOld`必須是`false`，因為沒有任何內容，以清除。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1823">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="54fdc-1824">指定`true`針對`fDeleteOld`只有區塊包含有效的資料。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1824">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="54fdc-1825">如果您將不同的執行個體複製到記憶體區塊，而且此物件包含參考型別，`fDeleteOld`必須是`true`釋放舊的內容中的參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1825">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="54fdc-1826">如果物件包含參考類型，您必須呼叫<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>之前釋放記憶體區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1826">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-1827">若要釘選而不要複製現有的結構，請使用<xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType>建立結構的固定控制代碼的型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1827">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="54fdc-1828">如需如何釘選的詳細資訊，請參閱 <<c0> [ 複製和 Pin](~/docs/framework/interop/copying-and-pinning.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1828">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1829">下列範例會建立受管理的結構，然後將其傳輸至 unmanaged 的記憶體使用<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>方法，然後再傳送回 managed 的記憶體使用<xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1829">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1830">
            <paramref name="structure" /> 為非格式化類別的參考型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1830">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
          <span data-ttu-id="54fdc-1831">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1831">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1832">
            <paramref name="structure" /> 是泛型型別的執行個體 (僅限 .NET Framework 4.5 和較舊版本)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1832">
              <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1833">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1833">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1834">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1834">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : 'T * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1835">Managed 物件的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1835">The type of the managed object.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="54fdc-1836">存有要封送處理之資料的 Managed 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1836">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="54fdc-1837">物件必須是格式化類別的結構或執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1837">The object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="54fdc-1838">Unmanaged 記憶體區塊的指標，這記憶體必須在呼叫這個方法之前被配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1838">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="54fdc-1839">
            <see langword="true" /> 表示在此方法複製資料之前，在 <c>ptr</c> 參數上呼叫 <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1839">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="54fdc-1840">區塊必須包含有效的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1840">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="54fdc-1841">請注意，當記憶體區塊已經包含資料時傳遞 <see langword="false" /> 會造成記憶體流失。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1841">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1842">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1842">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1843">從指定類型的 Managed 物件封送處理資料到 Unmanaged 記憶體區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1843">Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1844">格式化的類別是參考類型的配置由<xref:System.Runtime.InteropServices.StructLayoutAttribute>屬性，為<xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>或<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1844">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="54fdc-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> 複製的內容`structure`預先配置的記憶體區塊，`ptr`參數所指向。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1845"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="54fdc-1846">如果`structure`含有封送處理 COM 介面指標的參考型別 (介面，而不需要配置的類別和<xref:System.Object?displayProperty=nameWithType>)，受管理的物件會保持運作以參考計數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1846">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="54fdc-1847">所有其他參考型別 （例如，字串和陣列） 會封送處理至複本時。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1847">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="54fdc-1848">若要釋放這些受管理或未受管理的物件，您必須呼叫<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29>之前釋放記憶體區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1848">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="54fdc-1849">如果您使用<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29>可在稍後的時間，將不同的執行個體複製之記憶體區塊的方法指定`true`如`fDeleteOld`移除參考計數中先前的執行個體的參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1849">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="54fdc-1850">否則為未受管理的複本與受管理的參考型別會有效地流失。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1850">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="54fdc-1851">整體使用模式<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29>如下所示：</span><span class="sxs-lookup"><span data-stu-id="54fdc-1851">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="54fdc-1852">在第一次呼叫<xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A>方法之後已配置的記憶體區塊，`fDeleteOld`必須是`false`，因為沒有任何內容，以清除。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1852">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="54fdc-1853">指定`true`針對`fDeleteOld`只有區塊包含有效的資料。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1853">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="54fdc-1854">如果您將不同的執行個體複製到記憶體區塊，而且此物件包含參考型別，`fDeleteOld`必須是`true`釋放舊的內容中的參考型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1854">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="54fdc-1855">如果物件包含參考類型，您必須呼叫<xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>之前釋放記憶體區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1855">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="54fdc-1856">若要釘選而不要複製現有的結構，請使用<xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType>建立結構的固定控制代碼的型別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1856">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="54fdc-1857">如需如何釘選的詳細資訊，請參閱 <<c0> [ 複製和 Pin](~/docs/framework/interop/copying-and-pinning.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1857">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1858">
            <paramref name="structure" /> 為非格式化類別的參考型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1858">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1859">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1859">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1860">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1860">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemDefaultCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1861">表示系統上的預設字元大小；Unicode 系統的預設值為 2，ANSI 系統為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1861">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          </span>
          <span data-ttu-id="54fdc-1862">此欄位為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1862">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54fdc-1863">下列範例示範<xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize>欄位。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1863">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="54fdc-1864">此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1864">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemMaxDBCSCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1865">表示用於目前作業系統雙位元組字元集 (DBCS) 大小的最大值，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1865">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          </span>
          <span data-ttu-id="54fdc-1866">此欄位為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1866">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54fdc-1867">下列範例示範<xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize>欄位。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1867">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="54fdc-1868">此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.InteropServices.Marshal>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1868">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1869">擲回具有特定錯誤 HRESULT 值的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1869">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="54fdc-1870">對應於希望的例外狀況的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1870">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1871">擲回具有特定錯誤 HRESULT 值的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1871">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1872">這個方法會建立指定的失敗 HRESULT 的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1872">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="54fdc-1873">如果 HRESULT 是 0 或正值 （成功碼），這個方法會傳回而不需要建立或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1873">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="54fdc-1874">請注意，<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29>方法會傳回根據例外狀況[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)若已設定目前執行緒的介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1874">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="54fdc-1875">當發生這種情況時，`errorCode`參數會被忽略。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1875">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="54fdc-1876">某些失敗的 Hresult 會對應到已定義的例外狀況，而有些則不的範圍。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1876">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="54fdc-1877">如果 HRESULT 對應至已定義的例外狀況，<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>建立例外狀況的執行個體，並在擲回。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1877">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="54fdc-1878">否則，它會建立的執行個體<xref:System.Runtime.InteropServices.COMException>hresult，將錯誤的程式碼欄位初始化，則會擲回該例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1878">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="54fdc-1879">當<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>會叫用，它會嘗試使用未受管理擷取關於此錯誤的額外資訊[GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx)函式。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1879">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="54fdc-1880">每一個 hresult 與其在.NET Framework 中的可比較的例外狀況類別的對應，請參閱 <<c0> [ 如何： 對應 Hresult 和例外狀況](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1880">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="54fdc-1881">有時候，<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>可能會從先前的 COM 呼叫傳回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1881">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="54fdc-1882">在此情況下，您可以使用下列因應措施，並傳遞`IntPtr(-1)`做為第二個參數 (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="54fdc-1882">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1883">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1883">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1884">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1884">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="54fdc-1885">對應於希望的例外狀況的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1885">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="54fdc-1886">提供錯誤詳細資訊之 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 介面的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1886">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="54fdc-1887">您可以指定 <c>IntPtr(0)</c> 以使用目前的 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 介面，或指定 <c>IntPtr(-1)</c> 忽略目前的 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 介面，並且只從錯誤碼建構例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1887">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1888">根據指定的 [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) 介面，擲回具有特定失敗 HRESULT 的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1888">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1889">這個方法會建立指定的失敗 HRESULT 的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1889">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="54fdc-1890">如果 HRESULT 是 0 或正值 （成功碼），這個方法會傳回而不需要建立或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1890">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="54fdc-1891"><xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>方法會釋放`errorInfo`參數，減少 COM 參考計數[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1891">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="54fdc-1892">請注意，<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>方法會傳回根據例外狀況[IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx)若已設定目前執行緒的介面。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1892">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="54fdc-1893">當發生這種情況時，`errorCode`參數會被忽略。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1893">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="54fdc-1894">某些失敗的 Hresult 會對應到已定義的例外狀況，而有些則不的範圍。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1894">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="54fdc-1895">如果 HRESULT 對應至已定義的例外狀況，<xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A>建立例外狀況的執行個體，並在擲回。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1895">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="54fdc-1896">否則，它會建立的執行個體<xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>hresult，將錯誤的程式碼欄位初始化，則會擲回該例外狀況。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1896">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="54fdc-1897">`errorInfo`參數用來擷取關於此錯誤的額外資訊。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1897">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="54fdc-1898">每一個 hresult 與其在.NET Framework 中的可比較的例外狀況類別的對應，請參閱 <<c0> [ 如何： 對應 Hresult 和例外狀況](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1898">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1899">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1899">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1900">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1900">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("UnsafeAddrOfPinnedArrayElement(Array, Int32) may be unavailable in future releases. Instead, use UnsafeAddrOfPinnedArrayElement&lt;T&gt;(T[], Int32). For more info, go to http://go.microsoft.com/fwlink/?LinkID=296517")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="54fdc-1901">包含所需元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1901">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="54fdc-1902">所需項目之 <c>arr</c> 參數中的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1902">The index in the <c>arr</c> parameter of the desired element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1903">取得指定陣列內指定索引處的元素的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1903">Gets the address of the element at the specified index inside the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1904">
            <paramref name="index" /> 內部的 <paramref name="arr" /> 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1904">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1905">陣列必須使用固定<xref:System.Runtime.InteropServices.GCHandle>它傳遞給這個方法之前。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1905">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="54fdc-1906">為達最佳效能，這個方法不會驗證傳遞給它; 的陣列這可能會導致非預期的行為。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1906">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1907">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1907">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1908">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1908">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : 'T[] * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="54fdc-1909">陣列的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1909">The type of the array.</span>
          </span>
        </typeparam>
        <param name="arr">
          <span data-ttu-id="54fdc-1910">包含所需元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1910">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="54fdc-1911">
            <c>arr</c> 陣列中所需項目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1911">The index of the desired element in the <c>arr</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1912">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1912">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="54fdc-1913">在指定類型的陣列中取得位於指定索引處的元素的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1913">Gets the address of the element at the specified index in an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54fdc-1914">
            <paramref name="index" /> 內部的 <paramref name="arr" /> 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1914">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1915">陣列必須使用已釘選<xref:System.Runtime.InteropServices.GCHandle>它傳遞給這個方法之前。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1915">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="54fdc-1916">為達最佳效能，這個方法不會驗證傳遞給它; 的陣列這可能會導致非預期的行為。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1916">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1917">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1917">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1918">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1918">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1919">將單一位元組值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1919">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1920">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1920">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1921">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1921">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1922">將單一位元組值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1922">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1923"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1924">下列範例會建立未受管理的記憶體區塊、 將位元組寫入 unmanaged 記憶體、 從 unmanaged 記憶體讀取位元組，然後處置 unmanaged 的記憶體。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1924">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1925">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1925">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1926">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1926">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1927">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1927">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1928">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1928">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1929">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1929">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1930">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1930">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1931">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1931">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1932">Unmanaged 記憶體中要寫入的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1932">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1933">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1934">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1934">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1935">將單一位元組值寫入 Unmanaged 記憶體中的指定位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1935">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1936"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1937">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadByte%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteByte%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1937">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1938">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1938">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1939">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1939">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1940">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1940">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : obj * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteByte(Object, Int32, Byte) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1941">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1941">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1942">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1942">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1943">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1943">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1944">將單一位元組值寫入 Unmanaged 記憶體中的指定位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1944">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1945"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1946">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1946">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-1947">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1947">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-1948">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1948">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1949">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1949">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1950">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1950">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-1951">將 16 位元帶正負號的整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1951">Writes a 16-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-1952">支援寫入未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1952">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1953">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1953">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1954">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1954">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1955">將字元當做 16 位元整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1955">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1956"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1957">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1957">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1958">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1958">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1959">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1959">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1960">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1960">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1961">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1961">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1962">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1962">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1963">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1963">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1964">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1964">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1965">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1965">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1966">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1966">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1967">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1967">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1968">將 16 位元整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1968">Writes a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1970">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1970">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1971">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1971">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1972">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1972">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-1973">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1973">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1974">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1974">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-1975">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1975">-or-</span>
          </span>
          <span data-ttu-id="54fdc-1976">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1976">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1977">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1977">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1978">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1978">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1979">原生堆積中要寫入的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1979">The base address in the native heap to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1980">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1980">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1981">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1981">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1982">在指定的位移，將 16 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1982">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1983"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1984">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1984">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1985">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1985">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1986">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1986">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1987">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1987">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1988">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1988">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1989">Unmanaged 記憶體中要寫入的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1989">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-1990">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1990">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-1991">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1991">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-1992">將 16 位元帶正負號的整數值寫入 Unmanaged 記憶體中的指定位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1992">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1993"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-1994">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1994">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-1995">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-1995">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-1996">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1996">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-1997">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1997">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-1998">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1998">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Char) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-1999">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-1999">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2000">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2000">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2001">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2001">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2002">在指定的位移，將 16 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2002">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2004">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2004">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2005">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2005">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-2006">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2006">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-2007">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2007">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2008">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2008">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2009">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2009">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteInt16(Object, Int32, Int16) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2010">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2010">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2011">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2011">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2012">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2012">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2013">在指定的位移，將 16 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2013">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> 可讓您直接互動的 unmanaged 16 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2014"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2015">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2015">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2016">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2016">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-2017">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2017">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-2018">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2018">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2019">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2019">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2020">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2020">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-2021">將 32 位元帶正負號的整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2021">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-2022">支援寫入未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2022">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2023">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2023">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2024">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2024">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2025">將 32 位元帶正負號的整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2025">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 可讓您直接互動的 unmanaged 32 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2026"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2027">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2027">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2028">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2028">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2029">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2029">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-2030">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2030">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2031">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2031">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-2032">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2032">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2033">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2033">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2034">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2034">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2035">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2035">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2036">Unmanaged 記憶體中要寫入的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2036">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2037">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2037">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2038">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2038">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2039">將 32 位元帶正負號的整數值寫入 Unmanaged 記憶體中的指定位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2039">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 可讓您直接互動的 unmanaged 32 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2040"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2041">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2041">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2042">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2042">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2043">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2043">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2044">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2044">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2045">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2045">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : obj * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteInt32(Object, Int32, Int32) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2046">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2046">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2047">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2048">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2048">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2049">在指定的位移，將 32 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2049">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> 可讓您直接互動的 unmanaged 32 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2050"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2051">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2051">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2052">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2052">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-2053">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2053">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-2054">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2054">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2055">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2055">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2056">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2056">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-2057">將 64 位元帶正負號的整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2057">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-2058">支援寫入未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2058">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2059">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2059">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2060">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2060">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2061">將 64 位元帶正負號的整數值寫入 Unmanaged 記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2061">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 可讓您直接互動的 unmanaged 64 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2062"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2063">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2063">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2064">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2064">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2065">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2065">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-2066">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2066">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2067">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2067">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-2068">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2068">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2069">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2069">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2070">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2070">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2071">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2071">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2072">要寫入之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2072">The base address in unmanaged memory to write.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2073">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2073">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2074">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2074">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2075">在指定的位移，將 64 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2075">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 可讓您直接互動的 unmanaged 64 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2076"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2077">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2077">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2078">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2078">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2079">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2079">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2080">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2080">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2081">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2081">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : obj * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteInt64(Object, Int32, Int64) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2082">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2082">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2083">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2083">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2084">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2084">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2085">在指定的位移，將 64 位元帶正負號的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2085">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> 可讓您直接互動的 unmanaged 64 位元帶正負號陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2086"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2087">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2087">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2088">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2088">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-2089">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2089">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-2090">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2090">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2091">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2091">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2092">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2092">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54fdc-2093">將處理器原生大小的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2093">Writes a processor native-sized integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="54fdc-2094">在 32 位元系統上會寫入 32 位元整數，而在 64 位元系統上則會寫入 64 位元整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2094">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          </span>
          <span data-ttu-id="54fdc-2095">支援寫入未配置的記憶體位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2095">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2096">Unmanaged 記憶體中要寫入的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2096">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2097">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2097">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2098">將處理器原來大小的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2098">Writes a processor native sized integer value into unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 可讓您直接使用未受管理的 C 樣式的互動`IntPtr`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2099"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2100">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2100">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2101">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2101">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2102">
            <paramref name="ptr" /> 不是可辨認的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2102">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="54fdc-2103">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2103">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2104">
            <paramref name="ptr" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2104">
              <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="54fdc-2105">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2105">-or-</span>
          </span>
          <span data-ttu-id="54fdc-2106">
            <paramref name="ptr" /> 無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2106">
              <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2107">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2107">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2108">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2108">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2109">Unmanaged 記憶體中要寫入的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2109">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2110">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2110">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2111">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2111">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2112">將處理器原生大小的整數值寫入 Unmanaged 記憶體中的指定位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2112">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2113">這個方法會在 32 位元系統，並在 64 位元系統上的 64 位元整數寫入 32 位元整數。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2113">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="54fdc-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 可讓您直接使用未受管理的 C 樣式的互動`IntPtr`陣列中，刪除複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2114"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2115">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2115">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2116">下列範例示範如何讀取及寫入使用非受控的陣列<xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A>和<xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2116">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2117">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2117">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2118">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2118">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2119">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2119">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : obj * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Obsolete("WriteIntPtr(Object, Int32, IntPtr) may be unavailable in future releases.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="54fdc-2120">目標物件之 Unmanaged 記憶體中的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2120">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="54fdc-2121">額外的位元組位移，會先新增至參數 <c>ptr</c>，然後再寫入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2121">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="54fdc-2122">要寫入的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2122">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2123">將處理器原來大小的整數值寫入 Unmanaged 記憶體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2123">Writes a processor native sized integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> 可讓您直接互動 unmanaged C 樣式位元組陣列，避免複製的整個的 unmanaged 的陣列的費用 (使用<xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) 到個別的 managed 陣列，才能設定其項目值。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2124"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="54fdc-2125">支援寫入未配置的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2125">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="54fdc-2126">基底位址 (<paramref name="ptr" />) 加上位移位元組 (<paramref name="ofs" />) 會產生 Null 或無效的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2126">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54fdc-2127">
            <paramref name="ptr" /> 是 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2127">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="54fdc-2128">這個方法不會接受 <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> 參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2128">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2129">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2129">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2130">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2130">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-2131">要釋放的 <see langword="BSTR" /> 的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2131">The address of the <see langword="BSTR" /> to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2132">釋放之前使用 <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> 方法配置的 [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) 指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2132">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2133"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A>方法第一次將 BSTR 的內容設定為零，，然後再釋放的 BSTR。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2133">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2134">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2134">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2135">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2135">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-2136">要釋放的 Unmanaged 字串的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2136">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2137">釋放之前使用 <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> 方法配置的 Unmanaged 字串指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2137">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2138"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>方法第一次出零，然後再釋放配置的 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2138">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2139">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A>方法來封送處理，並解密<xref:System.Security.SecureString>的 unmanaged 記憶體區塊的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2139">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="54fdc-2140">然後它會使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>會全面清除和處置 unmanaged 的區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2140">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2141">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2141">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2142">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2142">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-2143">要釋放的 Unmanaged 字串的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2143">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2144">釋放之前使用 <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> 方法配置的 Unmanaged 字串指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2144">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2145"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A>方法第一次出零，然後再釋放配置的 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2145">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2146">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2146">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2147">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2147">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUTF8 : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.1">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-2148">要釋放的 Unmanaged 字串的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2148">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2149">釋放之前使用 <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> 方法配置的 Unmanaged 字串指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2149">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2150"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>方法第一次出零，然後再釋放配置的 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2150">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2151">下列範例會使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A>方法來封送處理，並解密<xref:System.Security.SecureString>的 unmanaged 記憶體區塊的物件。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2151">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="54fdc-2152">然後它會使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A>會全面清除和處置 unmanaged 的區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2152">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2153">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2153">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2154">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2154">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="54fdc-2155">要釋放的 Unmanaged 字串的位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2155">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54fdc-2156">釋放之前使用 <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> 方法配置的 Unmanaged 字串指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2156">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54fdc-2157"><xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>方法第一次出零，然後再釋放配置的 unmanaged 的記憶體<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2157">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54fdc-2158">下列範例示範如何使用<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A>方法使用 unmanaged`LogonUser`函式來執行模擬<xref:System.Security.SecureString>類別。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2158">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="54fdc-2159">然後此範例使用<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A>會全面清除並釋放的 unmanaged 的字串參考的方法。</span><span class="sxs-lookup"><span data-stu-id="54fdc-2159">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="54fdc-2160">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2160">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="54fdc-2161">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54fdc-2161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>