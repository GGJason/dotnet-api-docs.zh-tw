<Type Name="ErrorWrapper" FullName="System.Runtime.InteropServices.ErrorWrapper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="11d4185e1d40676ca5097d93e0d9d7fea7e96eed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ErrorWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ErrorWrapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ErrorWrapper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrorWrapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrorWrapper sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="667f1-101">包裝封送處理器應將其當做 <see langword="VT_ERROR" /> 來封送處理的物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="667f1-101">Wraps objects the marshaler should marshal as a <see langword="VT_ERROR" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="667f1-102">根據預設，<xref:System.Object>型別引數封送處理為`VARIANT`型別，其中的物件類型會決定`VARTYPE`值`VARIANT`。</span><span class="sxs-lookup"><span data-stu-id="667f1-102">By default, <xref:System.Object> type arguments are marshaled as a `VARIANT` type, where the object type determines the `VARTYPE` value of the `VARIANT`.</span></span>  
  
 <span data-ttu-id="667f1-103"><xref:System.Runtime.InteropServices.ErrorWrapper>輸入必須做為傳遞<xref:System.Object>類型封送處理為`VARIANT`型別的`VT_ERROR`，否則為<xref:System.Runtime.InteropServices.ErrorWrapper>類型封送處理為整數。</span><span class="sxs-lookup"><span data-stu-id="667f1-103">The <xref:System.Runtime.InteropServices.ErrorWrapper> type must to be passed as an <xref:System.Object> type to be marshaled as a `VARIANT` of type `VT_ERROR`, otherwise the <xref:System.Runtime.InteropServices.ErrorWrapper> type is marshaled as an integer.</span></span>  
  
 <span data-ttu-id="667f1-104">下表說明封送處理 managed 呼叫原生函式中使用的平台叫用。</span><span class="sxs-lookup"><span data-stu-id="667f1-104">The following table illustrates marshaling in a managed call to a native function, using platform invoke.</span></span>  
  
|<span data-ttu-id="667f1-105">Managed 簽章參數</span><span class="sxs-lookup"><span data-stu-id="667f1-105">Managed signature parameter</span></span>|<span data-ttu-id="667f1-106">pArr 值</span><span class="sxs-lookup"><span data-stu-id="667f1-106">pArr value</span></span>|<span data-ttu-id="667f1-107">封送處理為</span><span class="sxs-lookup"><span data-stu-id="667f1-107">Marshaled as</span></span>|  
|---------------------------------|----------------|------------------|  
|<span data-ttu-id="667f1-108">ErrorWrapper [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-108">ErrorWrapper[] pArr</span></span>|<span data-ttu-id="667f1-109">ErrorWrapper(77) ErrorWrapper [10]</span><span class="sxs-lookup"><span data-stu-id="667f1-109">ErrorWrapper[10] of ErrorWrapper(77)</span></span>|`Int[10]`|  
|<span data-ttu-id="667f1-110">物件 [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-110">Object[] pArr</span></span>|<span data-ttu-id="667f1-111">ErrorWrapper(77) ErrorWrapper [10]</span><span class="sxs-lookup"><span data-stu-id="667f1-111">ErrorWrapper[10] of ErrorWrapper(77)</span></span>|<span data-ttu-id="667f1-112">`VARIANT[10]` 的 `VT_ERROR`</span><span class="sxs-lookup"><span data-stu-id="667f1-112">`VARIANT[10]` of `VT_ERROR`</span></span>|  
|<span data-ttu-id="667f1-113">物件 [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-113">Object[] pArr</span></span>|<span data-ttu-id="667f1-114">Object[10] of ErrorWrapper(77)</span><span class="sxs-lookup"><span data-stu-id="667f1-114">Object[10] of ErrorWrapper(77)</span></span>|<span data-ttu-id="667f1-115">`VARIANT[10]` 的 `VT_ERROR`</span><span class="sxs-lookup"><span data-stu-id="667f1-115">`VARIANT[10]` of `VT_ERROR`</span></span>|  
  
 <span data-ttu-id="667f1-116">下表說明使用 COM 執行階段可呼叫包裝函式 (RCW) 的原生函式的 managed 呼叫中的封送處理資料。</span><span class="sxs-lookup"><span data-stu-id="667f1-116">The following table illustrates marshaling data in a managed call to a native function, using COM runtime callable wrappers (RCW).</span></span>  
  
|<span data-ttu-id="667f1-117">Managed 簽章參數</span><span class="sxs-lookup"><span data-stu-id="667f1-117">Managed signature parameter</span></span>|<span data-ttu-id="667f1-118">pArr 值</span><span class="sxs-lookup"><span data-stu-id="667f1-118">pArr value</span></span>|<span data-ttu-id="667f1-119">封送處理為</span><span class="sxs-lookup"><span data-stu-id="667f1-119">Marshaled as</span></span>|  
|---------------------------------|----------------|------------------|  
|<span data-ttu-id="667f1-120">ErrorWrapper [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-120">ErrorWrapper[] pArr</span></span>|<span data-ttu-id="667f1-121">ErrorWrapper(77) ErrorWrapper [10]</span><span class="sxs-lookup"><span data-stu-id="667f1-121">ErrorWrapper[10] of ErrorWrapper(77)</span></span>|`Int[10]`|  
|<span data-ttu-id="667f1-122">物件 [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-122">Object[] pArr</span></span>|<span data-ttu-id="667f1-123">ErrorWrapper(77) ErrorWrapper [10]</span><span class="sxs-lookup"><span data-stu-id="667f1-123">ErrorWrapper[10] of ErrorWrapper(77)</span></span>|<span data-ttu-id="667f1-124">`SafeArrayTypeMismatch` 例外狀況</span><span class="sxs-lookup"><span data-stu-id="667f1-124">`SafeArrayTypeMismatch` exception</span></span>|  
|<span data-ttu-id="667f1-125">物件 [] pArr</span><span class="sxs-lookup"><span data-stu-id="667f1-125">Object[] pArr</span></span>|<span data-ttu-id="667f1-126">Object[10] of ErrorWrapper(77)</span><span class="sxs-lookup"><span data-stu-id="667f1-126">Object[10] of ErrorWrapper(77)</span></span>|`SAFEARRAY(VARIANT)`|  
  
 <span data-ttu-id="667f1-127">請注意，<xref:System.Runtime.InteropServices.ErrorWrapper>物件沒有封送處理為型別`VT_ERROR`從 COM 傳遞之後</span><span class="sxs-lookup"><span data-stu-id="667f1-127">Note that <xref:System.Runtime.InteropServices.ErrorWrapper> objects are not marshaled as type `VT_ERROR` after they are passed back from COM.</span></span>  <span data-ttu-id="667f1-128">從 COM 類型的單一值會封送處理`VT_I4`，而從 COM 類型會封送處理陣列`VT_UI4`。</span><span class="sxs-lookup"><span data-stu-id="667f1-128">A single value is marshaled back from COM as type `VT_I4`, while arrays are marshaled back from COM as type `VT_UI4`.</span></span>  
  
 <span data-ttu-id="667f1-129">如需有關`VT_ERROR`，現有的文件，請參閱`VARENUM::VT_ERROR`MSDN library 中。</span><span class="sxs-lookup"><span data-stu-id="667f1-129">For more information on `VT_ERROR`, please see the existing documentation for `VARENUM::VT_ERROR` in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="667f1-130">下列程式碼範例會先示範單獨<xref:System.Int32>物件封送處理為 COM 從<xref:System.Int32>物件。</span><span class="sxs-lookup"><span data-stu-id="667f1-130">The following code example first demonstrates a lone <xref:System.Int32> object marshaled back from COM as an <xref:System.Int32> object.</span></span> <span data-ttu-id="667f1-131">然後示範<xref:System.Int32>陣列封送處理為 COM 從<xref:System.UInt32>陣列。</span><span class="sxs-lookup"><span data-stu-id="667f1-131">It then demonstrates an <xref:System.Int32> array marshaled back from COM as a <xref:System.UInt32> array.</span></span>  
  
```  
// Scenario 1:  
// Pass a single value.  
Int32 x = 3;  
Object o = new ErrorWrapper(x);  
// Pass 'o' to COM.  
// On the return trip, 'o' has been unwrapped and is still an Int32 object.  
Int32 y = (Int32)o;  
Scenario 2:  
// Pass an array of values.  
Int32[] arr = new Int32[3];  
Object o = new ErrorWrapper(arr);  
// Pass 'o' to COM.  
// On the return trip, 'o' has been unwrapped and is now a UInt32[] array.  
UInt32[ ] arr2 = (UInt32[])o;  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="667f1-132">初始化 <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-132">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorWrapper(Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="667f1-133">要轉換為錯誤碼的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-133">The exception to be converted to an error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="667f1-134">使用與所提供之例外狀況 (Exception) 對應的 HRESULT，初始化 <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-134">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with the HRESULT that corresponds to the exception supplied.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="667f1-135">呼叫 unmanaged 程式碼的權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-135">for permission to call unmanaged code.</span>
          </span>
          <span data-ttu-id="667f1-136">安全性動作： 需求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-136">Security Action: Demand.</span>
          </span>
          <span data-ttu-id="667f1-137">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-137">Associated Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorWrapper(int errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="667f1-138">錯誤的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-138">The HRESULT of the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="667f1-139">使用錯誤的 HRESULT 來初始化 <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-139">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with the HRESULT of the error.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorWrapper (object errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (errorCode As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorWrapper(System::Object ^ errorCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="667f1-140">包含錯誤的 HRESULT 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-140">The object containing the HRESULT of the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="667f1-141">使用包含錯誤的 HRESULT 的物件，初始化 <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-141">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ErrorWrapper" /> class with an object containing the HRESULT of the error.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="667f1-142">
            <paramref name="errorCode" /> 參數不是 <see cref="T:System.Int32" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-142">The <paramref name="errorCode" /> parameter is not an <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public int ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ErrorCode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ErrorWrapper.ErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ErrorCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="667f1-143">取得包裝函式的錯誤碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-143">Gets the error code of the wrapper.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="667f1-144">錯誤的 HRESULT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="667f1-144">The HRESULT of the error.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>