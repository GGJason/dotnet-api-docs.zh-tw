<Type Name="_Exception" FullName="System.Runtime.InteropServices._Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b929180210874282c618776f202273aacb286bf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36536739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Exception" />
  <TypeSignature Language="F#" Value="type _Exception = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b36b5c63-42ef-38bc-a07e-0b34c98f164a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>公開 <see cref="T:System.Exception" /> 類別的公用成員至 Unmanaged 程式碼。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此介面會從 unmanaged 程式碼會存取 managed 類別，而且不應該從 managed 程式碼呼叫。  
  
 這個介面會保留 vtable 順序的<xref:System.Exception?displayProperty=nameWithType>類別可由 unmanaged COM 物件存取的成員。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Exception.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">與目前的 <see cref="T:System.Object" /> 相比較的 <see cref="T:System.Object" />。</param>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Object.Equals(System.Object)" /> 方法之存取權。</summary>
        <returns>如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Object.Equals%2A?displayProperty=nameWithType>方法會判斷是否指定<xref:System.Object>是否等於目前<xref:System.Object>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception" Usage="_Exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetBaseException" /> 方法之存取權。</summary>
        <returns>例外狀況鏈中擲回的第一個例外狀況。 如果目前的例外狀況的 <see cref="P:System.Exception.InnerException" /> 屬性為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則這個屬性會傳回目前的例外狀況。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType>方法會傳回<xref:System.Exception>也就是一或多個後續的例外狀況的根本原因。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetBaseException" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Exception.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetHashCode" /> 方法之存取權。</summary>
        <returns>目前執行個體的雜湊碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法做為特定類型的雜湊函式。 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 適用於雜湊演算法和資料結構，例如雜湊表。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，包含有關擲回之例外狀況的序列化物件資料。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構，包含關於來源或目的端的內容資訊。</param>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法存取。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType>方法會設定<xref:System.Runtime.Serialization.SerializationInfo>例外狀況的相關資訊的物件。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">需要完全信任立即呼叫者。 這個成員無法供部分信任或安全性透明程式碼。</permission>
        <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Exception.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetType" /> 方法之存取權。</summary>
        <returns>
          <see cref="T:System.Type" /> 物件，代表目前執行個體的確實執行階段類型。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.GetType%2A?displayProperty=nameWithType>方法會取得目前的執行個體的執行階段類型。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetType" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.HelpLink" /> 屬性之存取權。</summary>
        <value>說明檔的統一資源名稱 (URN) 或統一資源定位器 (URL)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.HelpLink%2A?displayProperty=nameWithType>屬性會取得或設定與這個例外狀況相關聯的說明檔連結。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.HelpLink" />
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Runtime.InteropServices._Exception.InnerException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.InnerException" /> 屬性之存取權。</summary>
        <value>
          <see cref="T:System.Exception" /> 的執行個體，描述造成目前例外狀況的錯誤。 <see cref="P:System.Exception.InnerException" /> 屬性會傳回與傳遞到建構函式相同的值，但如果沒有提供內部例外狀況值給建構函式，則會傳回 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。 這個屬性是唯讀的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.InnerException%2A?displayProperty=nameWithType>屬性會取得<xref:System.Exception>造成目前例外狀況的執行個體。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Runtime.InteropServices._Exception.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.Message" /> 屬性之存取權。</summary>
        <value>解釋例外狀況原因的錯誤訊息，或是空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.Message%2A?displayProperty=nameWithType>屬性會取得描述目前例外狀況的訊息。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Message" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Runtime.InteropServices._Exception.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.Source" /> 屬性之存取權。</summary>
        <value>造成錯誤的應用程式或物件的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.Source%2A?displayProperty=nameWithType>屬性會取得或設定的應用程式或造成錯誤的物件名稱。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Source" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.StackTrace" /> 屬性之存取權。</summary>
        <value>描述呼叫堆疊內容的字串，最先出現最近的方法呼叫。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.StackTrace%2A?displayProperty=nameWithType>屬性取得呼叫堆疊上框架的字串表示，在擲回目前例外狀況的時間。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="P:System.Exception.TargetSite" /> 屬性之存取權。</summary>
        <value>擲回目前例外狀況的 <see cref="T:System.Reflection.MethodBase" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.TargetSite%2A?displayProperty=nameWithType>屬性會取得擲回目前例外狀況的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.TargetSite" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Exception.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為 COM 物件提供與版本無關的 <see cref="M:System.Exception.ToString" /> 方法之存取權。</summary>
        <returns>代表目前 <see cref="T:System.Exception" /> 物件的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從 unmanaged 程式碼會存取 managed 類別，並不應該從 managed 程式碼呼叫。  
  
 <xref:System.Exception.ToString%2A?displayProperty=nameWithType>方法會建立並傳回目前例外狀況的字串表示。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>