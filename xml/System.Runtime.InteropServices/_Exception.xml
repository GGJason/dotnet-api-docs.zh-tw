<Type Name="_Exception" FullName="System.Runtime.InteropServices._Exception">
  <Metadata><Meta Name="ms.openlocfilehash" Value="079e4dcfbc8aa735c04acf28cfd7472c17227cd8" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48625458" /></Metadata><TypeSignature Language="C#" Value="public interface _Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Exception" />
  <TypeSignature Language="F#" Value="type _Exception = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("b36b5c63-42ef-38bc-a07e-0b34c98f164a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6290-101">公開 <see cref="T:System.Exception" /> 類別的公用成員至 Unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-101">Exposes the public members of the <see cref="T:System.Exception" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-102">此介面是以 managed 類別從 unmanaged 程式碼存取，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="b6290-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-103">此介面保留的 vtable 順序<xref:System.Exception?displayProperty=nameWithType>類別可由 unmanaged 的 COM 物件存取的成員。</span><span class="sxs-lookup"><span data-stu-id="b6290-103">This interface preserves the vtable order of the <xref:System.Exception?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Exception.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b6290-104"><see cref="T:System.Object" />，要與目前的 <see cref="T:System.Object" /> 比較。</span><span class="sxs-lookup"><span data-stu-id="b6290-104">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="b6290-105">為 COM 物件提供與版本無關的 <see cref="M:System.Object.Equals(System.Object)" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-105">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="b6290-106">如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b6290-106"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-107">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-107">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-108"><xref:System.Object.Equals%2A?displayProperty=nameWithType>方法會判斷是否指定<xref:System.Object>是否等於目前<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="b6290-108">The <xref:System.Object.Equals%2A?displayProperty=nameWithType> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetBaseException();" />
      <MemberSignature Language="F#" Value="abstract member GetBaseException : unit -&gt; Exception" Usage="_Exception.GetBaseException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6290-109">為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetBaseException" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-109">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetBaseException" /> method.</span></span></summary>
        <returns><span data-ttu-id="b6290-110">例外狀況鏈結中所擲回的第一個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b6290-110">The first exception thrown in a chain of exceptions.</span></span> <span data-ttu-id="b6290-111">如果目前的例外狀況的 <see cref="P:System.Exception.InnerException" /> 屬性為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，則這個屬性會傳回目前的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="b6290-111">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-112">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-112">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-113"><xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType>方法會傳回<xref:System.Exception>也就是一或多個後續的例外狀況的根本原因。</span><span class="sxs-lookup"><span data-stu-id="b6290-113">The <xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType> method returns the <xref:System.Exception> that is the root cause of one or more subsequent exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetBaseException" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Exception.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6290-114">為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetHashCode" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-114">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="b6290-115">目前執行個體的雜湊程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-115">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-116">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-116">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-117"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法做為特定類型的雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="b6290-117">The <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="b6290-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 適合用於雜湊演算法和資料結構，例如雜湊表。</span><span class="sxs-lookup"><span data-stu-id="b6290-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Exception.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b6290-119"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件，其中可保存關於擲回之例外狀況的序列化物件資料。</span><span class="sxs-lookup"><span data-stu-id="b6290-119">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="b6290-120"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 結構，包含關於來源或目的端的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="b6290-120">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="b6290-121">為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> 方法存取。</span><span class="sxs-lookup"><span data-stu-id="b6290-121">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-122">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-122">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-123"><xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType>方法會設定<xref:System.Runtime.Serialization.SerializationInfo>例外狀況的相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="b6290-123">The <xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType> method sets the <xref:System.Runtime.Serialization.SerializationInfo> object with information about the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="b6290-124">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="b6290-124">requires full trust for the immediate caller.</span></span> <span data-ttu-id="b6290-125">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-125">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Exception.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6290-126">為 COM 物件提供與版本無關的 <see cref="M:System.Exception.GetType" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-126">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="b6290-127"><see cref="T:System.Type" /> 物件，代表目前執行個體的確實執行階段型別。</span><span class="sxs-lookup"><span data-stu-id="b6290-127">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-128">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-128">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-129"><xref:System.Exception.GetType%2A?displayProperty=nameWithType>方法會取得目前的執行個體的執行階段類型。</span><span class="sxs-lookup"><span data-stu-id="b6290-129">The <xref:System.Exception.GetType%2A?displayProperty=nameWithType> method gets the runtime type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetType" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpLink : string with get, set" Usage="System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-130">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.HelpLink" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-130">Provides COM objects with version-independent access to the <see cref="P:System.Exception.HelpLink" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-131">說明檔的統一資源名稱 (URN) 或統一資源定位器 (URL)。</span><span class="sxs-lookup"><span data-stu-id="b6290-131">The Uniform Resource Name (URN) or Uniform Resource Locator (URL) to a help file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-132">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-132">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-133"><xref:System.Exception.HelpLink%2A?displayProperty=nameWithType>屬性會取得或設定與這個例外狀況相關聯的說明檔的連結。</span><span class="sxs-lookup"><span data-stu-id="b6290-133">The <xref:System.Exception.HelpLink%2A?displayProperty=nameWithType> property gets or sets a link to the help file associated with this exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.HelpLink" />
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerException : Exception" Usage="System.Runtime.InteropServices._Exception.InnerException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-134">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.InnerException" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-134">Provides COM objects with version-independent access to the <see cref="P:System.Exception.InnerException" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-135"><see cref="T:System.Exception" /> 的執行個體，描述造成目前例外狀況的錯誤。</span><span class="sxs-lookup"><span data-stu-id="b6290-135">An instance of <see cref="T:System.Exception" /> that describes the error that caused the current exception.</span></span> <span data-ttu-id="b6290-136"><see cref="P:System.Exception.InnerException" /> 屬性會傳回與傳遞到建構函式相同的值，但如果沒有提供內部例外狀況值給建構函式，則會傳回 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="b6290-136">The <see cref="P:System.Exception.InnerException" /> property returns the same value that was passed to the constructor, or a null reference (<see langword="Nothing" /> in Visual Basic) if the inner exception value was not supplied to the constructor.</span></span> <span data-ttu-id="b6290-137">這是唯讀的屬性。</span><span class="sxs-lookup"><span data-stu-id="b6290-137">This property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-138">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-139"><xref:System.Exception.InnerException%2A?displayProperty=nameWithType>屬性會取得<xref:System.Exception>造成目前例外狀況的執行個體。</span><span class="sxs-lookup"><span data-stu-id="b6290-139">The <xref:System.Exception.InnerException%2A?displayProperty=nameWithType> property gets the <xref:System.Exception> instance that caused the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Runtime.InteropServices._Exception.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-140">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.Message" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-140">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Message" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-141">解釋例外狀況原因的錯誤訊息，或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="b6290-141">The error message that explains the reason for the exception, or an empty string("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-142">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-142">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-143"><xref:System.Exception.Message%2A?displayProperty=nameWithType>屬性會取得描述目前例外狀況的訊息。</span><span class="sxs-lookup"><span data-stu-id="b6290-143">The <xref:System.Exception.Message%2A?displayProperty=nameWithType> property gets a message that describes the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Message" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Runtime.InteropServices._Exception.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-144">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.Source" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-144">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Source" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-145">造成錯誤的應用程式或物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="b6290-145">The name of the application or the object that causes the error.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-146">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-147"><xref:System.Exception.Source%2A?displayProperty=nameWithType>屬性會取得或設定應用程式或導致錯誤的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="b6290-147">The <xref:System.Exception.Source%2A?displayProperty=nameWithType> property gets or sets the name of the application or the object that causes the error.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Source" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StackTrace : string" Usage="System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-148">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.StackTrace" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-148">Provides COM objects with version-independent access to the <see cref="P:System.Exception.StackTrace" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-149">描述呼叫堆疊內容的字串，最先出現最近的方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="b6290-149">A string that describes the contents of the call stack, with the most recent method call appearing first.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-150">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-150">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-151"><xref:System.Exception.StackTrace%2A?displayProperty=nameWithType>屬性取得呼叫堆疊上框架的字串表示，在擲回目前例外狀況的時間。</span><span class="sxs-lookup"><span data-stu-id="b6290-151">The <xref:System.Exception.StackTrace%2A?displayProperty=nameWithType> property gets a string representation of the frames on the call stack at the time the current exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetSite : System.Reflection.MethodBase" Usage="System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6290-152">為 COM 物件提供與版本無關的 <see cref="P:System.Exception.TargetSite" /> 屬性之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-152">Provides COM objects with version-independent access to the <see cref="P:System.Exception.TargetSite" /> property.</span></span></summary>
        <value><span data-ttu-id="b6290-153">擲回目前例外狀況的 <see cref="T:System.Reflection.MethodBase" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="b6290-153">The <see cref="T:System.Reflection.MethodBase" /> object that threw the current exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-154">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-154">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-155"><xref:System.Exception.TargetSite%2A?displayProperty=nameWithType>屬性會取得所擲回目前例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="b6290-155">The <xref:System.Exception.TargetSite%2A?displayProperty=nameWithType> property gets the method that throws the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.TargetSite" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Exception.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6290-156">為 COM 物件提供與版本無關的 <see cref="M:System.Exception.ToString" /> 方法之存取權。</span><span class="sxs-lookup"><span data-stu-id="b6290-156">Provides COM objects with version-independent access to the <see cref="M:System.Exception.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="b6290-157">字串，表示目前 <see cref="T:System.Exception" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="b6290-157">A string that represents the current <see cref="T:System.Exception" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6290-158">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="b6290-158">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="b6290-159"><xref:System.Exception.ToString%2A?displayProperty=nameWithType>方法會建立並傳回目前的例外狀況的字串表示法。</span><span class="sxs-lookup"><span data-stu-id="b6290-159">The <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method creates and returns a string representation of the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
