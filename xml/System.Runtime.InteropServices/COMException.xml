<Type Name="COMException" FullName="System.Runtime.InteropServices.COMException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="367184149af0c06cfd4c5c13db58b262c2af8d9e" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52382036" /></Metadata><TypeSignature Language="C#" Value="public class COMException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit COMException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.COMException" />
  <TypeSignature Language="VB.NET" Value="Public Class COMException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class COMException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type COMException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37511-101">當 COM 方法呼叫傳回無法辨識的 HRESULT 時，所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-101">The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-102">Common language runtime 會將讓有意義的錯誤資訊傳回給受管理的用戶端的 COM 物件以.NET Framework 例外狀況，已知的 HRESULTs 轉換。</span><span class="sxs-lookup"><span data-stu-id="37511-102">The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients.</span></span> <span data-ttu-id="37511-103">例外狀況對應到 HRESULT 也另一個方向運作，藉由將特定的 Hresult 傳回給未受管理的用戶端。</span><span class="sxs-lookup"><span data-stu-id="37511-103">The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients.</span></span> <span data-ttu-id="37511-104">對應的詳細資訊，請參閱 <<c0> [ 如何： 對應 Hresult 和例外狀況](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)。</span><span class="sxs-lookup"><span data-stu-id="37511-104">For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="37511-105">當執行階段遇到不熟悉的 HRESULT (沒有特定的對應例外狀況的 HRESULT) 時，就會擲回的執行個體<xref:System.Runtime.InteropServices.COMException>類別。</span><span class="sxs-lookup"><span data-stu-id="37511-105">When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class.</span></span> <span data-ttu-id="37511-106">此全方位的例外狀況會公開任何例外狀況中，相同的成員，並繼承公用<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>被呼叫端所傳回的屬性，其中包含 HRESULT。</span><span class="sxs-lookup"><span data-stu-id="37511-106">This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee.</span></span> <span data-ttu-id="37511-107">如果錯誤訊息可供執行階段 (取自[IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx)介面或`Err`在 Visual Basic 中，或在某些情況下，從作業系統的物件)，則會傳回訊息給呼叫者。</span><span class="sxs-lookup"><span data-stu-id="37511-107">If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller.</span></span> <span data-ttu-id="37511-108">但是，如果 COM 組件開發人員無法納入錯誤訊息，執行階段則會傳回八位元的 HRESULT 取代訊息字串。</span><span class="sxs-lookup"><span data-stu-id="37511-108">However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string.</span></span> <span data-ttu-id="37511-109">取得 HRESULT 可讓呼叫端判斷泛型例外狀況的原因。</span><span class="sxs-lookup"><span data-stu-id="37511-109">Having an HRESULT allows the caller to determine the cause of the generic exception.</span></span>  
  
## <a name="handling-a-comexception-exception"></a><span data-ttu-id="37511-110">處理 COMException 例外狀況</span><span class="sxs-lookup"><span data-stu-id="37511-110">Handling a COMException exception</span></span>  
 <span data-ttu-id="37511-111">以下是疑難排解的一些考量<xref:System.Runtime.InteropServices.COMException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-111">The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.</span></span>  
  
 <span data-ttu-id="37511-112">檢查<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>屬性</span><span class="sxs-lookup"><span data-stu-id="37511-112">Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property</span></span>  
 <span data-ttu-id="37511-113">當執行階段遇到不熟悉的 HRESULT，而且會擲回<xref:System.Runtime.InteropServices.COMException>例外狀況，<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A>屬性包含錯誤訊息，或如果無法使用，一則錯誤訊息的八位元 HRESULT 值。</span><span class="sxs-lookup"><span data-stu-id="37511-113">When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.</span></span>  <span data-ttu-id="37511-114">錯誤訊息或 HRESULT 值可協助您判斷例外狀況的原因。</span><span class="sxs-lookup"><span data-stu-id="37511-114">The error message or the HRESULT value can help you determine the cause of the exception.</span></span>  
  
 <span data-ttu-id="37511-115">如需 HRESULT 值的清單，請參閱 <<c0> [ 常見的 HRESULT 值](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx)。</span><span class="sxs-lookup"><span data-stu-id="37511-115">For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx).</span></span>  
  
 <span data-ttu-id="37511-116">晚期繫結引數和 Microsoft Office 物件</span><span class="sxs-lookup"><span data-stu-id="37511-116">Late-bound arguments and Microsoft Office objects</span></span>  
 <span data-ttu-id="37511-117">將晚期繫結引數傳遞至方法的 Microsoft Office 物件時<xref:System.Runtime.InteropServices.COMException>物件是 COM 物件時，可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-117">When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects.</span></span> <span data-ttu-id="37511-118">晚期繫結器 (Binder) 會假設這個方法呼叫包含 `ByRef` 參數，並假設您傳遞的屬性具 有 `set` 存取子。</span><span class="sxs-lookup"><span data-stu-id="37511-118">The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor.</span></span> <span data-ttu-id="37511-119">如果屬性不存在，就會產生.NET Framework<xref:System.MissingMethodException>例外狀況 (與`CORE_E_MISSINGMETHOD`HRESULT)。</span><span class="sxs-lookup"><span data-stu-id="37511-119">If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ).</span></span> <span data-ttu-id="37511-120">若要解決這個行為，請使用早期繫結的物件，或傳遞變數而不要傳遞物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="37511-120">To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.</span></span>  
  
 <span data-ttu-id="37511-121">Visual Studio 和裝載處理序</span><span class="sxs-lookup"><span data-stu-id="37511-121">Visual Studio and the hosting process</span></span>  
 <span data-ttu-id="37511-122">COM 用於 Visual Studio 之間的通訊並[裝載處理序](https://msdn.microsoft.com/library/ms185331.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37511-122">COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx).</span></span> <span data-ttu-id="37511-123">因為正在使用它之前的程式碼執行時，呼叫[CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx)造成擲回這個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-123">Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) causes this exception to be thrown.</span></span>  
  
 <span data-ttu-id="37511-124">在某些情況下，系統管理員身分執行 Visual Studio 可解決此問題。</span><span class="sxs-lookup"><span data-stu-id="37511-124">In some cases, running Visual Studio as Administrator may resolve the issue.</span></span> <span data-ttu-id="37511-125">您也可以[停用裝載處理序](https://msdn.microsoft.com/library/ms185330.aspx)。</span><span class="sxs-lookup"><span data-stu-id="37511-125">You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).</span></span>  
  
## <a name="throwing-a-comexception-exception"></a><span data-ttu-id="37511-126">擲回 COMException 例外狀況</span><span class="sxs-lookup"><span data-stu-id="37511-126">Throwing a COMException exception</span></span>  
 <span data-ttu-id="37511-127">雖然您可以使用<xref:System.Runtime.InteropServices.COMException>類別，以傳回特定的 Hresult 來擲回特定的.NET Framework 例外狀況的 unmanaged 用戶端會比使用一般的例外狀況更好。</span><span class="sxs-lookup"><span data-stu-id="37511-127">Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception.</span></span> <span data-ttu-id="37511-128">請考慮受管理用戶端，以及未受管理的用戶端可以使用您的.NET Framework 物件，並擲回 managed 呼叫端的 HRESULT 是較不易於瞭解比擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-128">Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="37511-129">處理和擲回例外狀況</span><span class="sxs-lookup"><span data-stu-id="37511-129">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37511-130">初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-130">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37511-131">使用預設值，初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-131">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-132"><xref:System.Runtime.InteropServices.COMException> 繼承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="37511-132"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="37511-133">下表顯示這個建構函式如何設定的屬性<xref:System.Exception>物件。</span><span class="sxs-lookup"><span data-stu-id="37511-133">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="37511-134">屬性</span><span class="sxs-lookup"><span data-stu-id="37511-134">Property</span></span>|<span data-ttu-id="37511-135">值</span><span class="sxs-lookup"><span data-stu-id="37511-135">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="37511-136">`null`.</span><span class="sxs-lookup"><span data-stu-id="37511-136">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="37511-137">當地語系化的錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="37511-137">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="37511-138">訊息，表示例外狀況的原因。</span><span class="sxs-lookup"><span data-stu-id="37511-138">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="37511-139">使用指定的訊息，初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-139">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-140"><xref:System.Runtime.InteropServices.COMException> 繼承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="37511-140"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="37511-141">下表顯示這個建構函式如何設定的屬性<xref:System.Exception>物件。</span><span class="sxs-lookup"><span data-stu-id="37511-141">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="37511-142">屬性</span><span class="sxs-lookup"><span data-stu-id="37511-142">Property</span></span>|<span data-ttu-id="37511-143">值</span><span class="sxs-lookup"><span data-stu-id="37511-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; COMException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="37511-144">存放序列物件資料的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37511-144">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="37511-145">提供關於來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="37511-145">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that supplies the contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="37511-146">從序列化 (Serialization) 資料，初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-146">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-147">進行還原序列化 (Deserialization) 期間會呼叫這個建構函式，以便重新構成經由資料流傳送的例外狀況物件。</span><span class="sxs-lookup"><span data-stu-id="37511-147">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="37511-148">如需詳細資訊，請參閱 < [XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="37511-148">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="37511-149"><xref:System.Runtime.InteropServices.COMException> 繼承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="37511-149"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="37511-150"><paramref name="info" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37511-150"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.ExternalException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * Exception -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="37511-151">解釋例外狀況原因的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="37511-151">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="37511-152">做為目前例外狀況發生原因的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="37511-152">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="37511-153">如果 <paramref name="inner" /> 參數不是 <see langword="null" />，則目前的例外狀況會在處理內部例外的 <see langword="catch" /> 區塊中引發。</span><span class="sxs-lookup"><span data-stu-id="37511-153">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="37511-154">使用指定的錯誤訊息以及造成此例外狀況的內部例外狀況的參考，初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-154">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-155">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="37511-155">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="37511-156"><xref:System.Exception.InnerException%2A> 屬性會傳回與傳入建構函式中相同的值；如果 `null` 屬性沒有提供內部例外值給建構函式，則傳回 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="37511-156">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="37511-157">下表顯示這個建構函式如何設定的屬性<xref:System.Exception>物件。</span><span class="sxs-lookup"><span data-stu-id="37511-157">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="37511-158">屬性</span><span class="sxs-lookup"><span data-stu-id="37511-158">Property</span></span>|<span data-ttu-id="37511-159">值</span><span class="sxs-lookup"><span data-stu-id="37511-159">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="37511-160">內部例外狀況參考。</span><span class="sxs-lookup"><span data-stu-id="37511-160">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="37511-161">錯誤訊息字串。</span><span class="sxs-lookup"><span data-stu-id="37511-161">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="37511-162">在 .NET 中處理和擲回例外狀況</span><span class="sxs-lookup"><span data-stu-id="37511-162">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * int -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="37511-163">訊息，指出例外狀況發生的原因。</span><span class="sxs-lookup"><span data-stu-id="37511-163">The message that indicates the reason the exception occurred.</span></span></param>
        <param name="errorCode"><span data-ttu-id="37511-164">與這個例外狀況相關聯的錯誤碼 (HRESULT) 值。</span><span class="sxs-lookup"><span data-stu-id="37511-164">The error code (HRESULT) value associated with this exception.</span></span></param>
        <summary><span data-ttu-id="37511-165">使用指定的訊息和錯誤碼，初始化 <see cref="T:System.Runtime.InteropServices.COMException" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37511-165">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message and error code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37511-166">這<xref:System.Runtime.InteropServices.COMException>建構函式設定的基底的訊息，並告知錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="37511-166">This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.</span></span>  
  
 <span data-ttu-id="37511-167"><xref:System.Runtime.InteropServices.COMException> 繼承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="37511-167"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="37511-168">下表顯示這個建構函式如何設定的屬性<xref:System.Exception>物件。</span><span class="sxs-lookup"><span data-stu-id="37511-168">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="37511-169">屬性</span><span class="sxs-lookup"><span data-stu-id="37511-169">Property</span></span>|<span data-ttu-id="37511-170">值</span><span class="sxs-lookup"><span data-stu-id="37511-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cOMException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37511-171">將例外狀況的內容轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="37511-171">Converts the contents of the exception to a string.</span></span></summary>
        <returns><span data-ttu-id="37511-172">字串，包含例外狀況的 <see cref="P:System.Exception.HResult" />、<see cref="P:System.Exception.Message" />、<see cref="P:System.Exception.InnerException" /> 和 <see cref="P:System.Exception.StackTrace" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="37511-172">A string containing the <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" />, and <see cref="P:System.Exception.StackTrace" /> properties of the exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.HResult" />
        <altmember cref="P:System.Exception.Message" />
        <altmember cref="P:System.Exception.InnerException" />
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
  </Members>
</Type>