<Type Name="MemoryMarshal" FullName="System.Runtime.InteropServices.MemoryMarshal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5398ddb4b38cb3fd818bd722227bd74e02336ea3" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53332939" /></Metadata><TypeSignature Language="C#" Value="public static class MemoryMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemoryMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.MemoryMarshal" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMarshal abstract sealed" />
  <TypeSignature Language="F#" Value="type MemoryMarshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6d87a-101">提供方法來與 <see cref="T:System.Memory`1" />、<see cref="T:System.ReadOnlyMemory`1" />、<see cref="T:System.Span`1" /> 和 <see cref="T:System.ReadOnlySpan`1" /> 交互操作。</span><span class="sxs-lookup"><span data-stu-id="6d87a-101">Provides methods to interoperate with <see cref="T:System.Memory`1" />, <see cref="T:System.ReadOnlyMemory`1" />,  <see cref="T:System.Span`1" />, and  <see cref="T:System.ReadOnlySpan`1" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;byte&gt; AsBytes&lt;T&gt; (ReadOnlySpan&lt;T&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsBytes``1(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsBytes(Of T As Structure) (span As ReadOnlySpan(Of T)) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static ReadOnlySpan&lt;System::Byte&gt; AsBytes(ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsBytes : ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; ReadOnlySpan&lt;byte&gt; (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsBytes span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-102">在唯讀模式的範圍中的項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-102">The type of items in the read-only span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-103">要轉換的來源配量。</span><span class="sxs-lookup"><span data-stu-id="6d87a-103">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="6d87a-104">將一個簡單型別 <paramref name="T" /> 的 <see cref="T:System.ReadOnlySpan`1" /> 轉換成 <see langword="ReadOnlySpan&lt;Byte&gt;" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-104">Casts a <see cref="T:System.ReadOnlySpan`1" /> of one primitive type, <paramref name="T" />, to a <see langword="ReadOnlySpan&lt;Byte&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="6d87a-105">型別 <see cref="T:System.Byte" /> 的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-105">A read-only span of type <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-106">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-106">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-107">`T` 會在執行階段檢查為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-107">`T` is checked at runtime in order to preserve type safety.</span></span>  

      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-108"><paramref name="T" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-108"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="6d87a-109">新的 <see cref="T:System.ReadOnlySpan`1" /> 的 <see cref="P:System.ReadOnlySpan`1.Length" /> 屬性會超出 <see cref="F:System.Int32.MaxValue" /></span><span class="sxs-lookup"><span data-stu-id="6d87a-109">The <see cref="P:System.ReadOnlySpan`1.Length" /> property of the new <see cref="T:System.ReadOnlySpan`1" /> would exceed <see cref="F:System.Int32.MaxValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;byte&gt; AsBytes&lt;T&gt; (Span&lt;T&gt; span) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsBytes``1(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsBytes(Of T As Structure) (span As Span(Of T)) As Span(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static Span&lt;System::Byte&gt; AsBytes(Span&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member AsBytes : Span&lt;'T (requires 'T : struct)&gt; -&gt; Span&lt;byte&gt; (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.AsBytes span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-110">範圍中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-110">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-111">要轉換的來源配量。</span><span class="sxs-lookup"><span data-stu-id="6d87a-111">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="6d87a-112">將一個簡單型別 <paramref name="T" /> 的 <see cref="T:System.Span`1" /> 轉換成 <see langword="Span&lt;Byte&gt;" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-112">Casts a <see cref="T:System.Span`1" /> of one primitive type, <paramref name="T" />, to a <see langword="Span&lt;Byte&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="6d87a-113">型別 <see cref="T:System.Byte" /> 的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-113">A span of type <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-114">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-114">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-115">`T` 會在執行階段檢查為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-115">`T` is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-116"><paramref name="T" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-116"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="6d87a-117">新的 <see cref="T:System.Span`1" /> 的 <see cref="P:System.Span`1.Length" /> 屬性會超出 <see cref="F:System.Int32.MaxValue" /></span><span class="sxs-lookup"><span data-stu-id="6d87a-117">The <see cref="P:System.Span`1.Length" /> property of the new <see cref="T:System.Span`1" /> would exceed <see cref="F:System.Int32.MaxValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsMemory&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Memory&lt;T&gt; AsMemory&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Memory`1&lt;!!T&gt; AsMemory&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.AsMemory``1(System.ReadOnlyMemory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsMemory(Of T) (memory As ReadOnlyMemory(Of T)) As Memory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Memory&lt;T&gt; AsMemory(ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="F#" Value="static member AsMemory : ReadOnlyMemory&lt;'T&gt; -&gt; Memory&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.AsMemory memory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-118">唯讀記憶體緩衝區中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-118">The type of items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="6d87a-119">唯讀記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="6d87a-119">The read-only memory buffer.</span></span></param>
        <summary><span data-ttu-id="6d87a-120">從 <see cref="T:System.ReadOnlyMemory`1" /> 建立 <see cref="T:System.Memory`1" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="6d87a-120">Creates a <see cref="T:System.Memory`1" /> instance from a <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <returns><span data-ttu-id="6d87a-121">記憶體區塊，代表與 <see cref="T:System.ReadOnlyMemory`1" /> 相同的記憶體。</span><span class="sxs-lookup"><span data-stu-id="6d87a-121">A memory block that represetns the same memory as the <see cref="T:System.ReadOnlyMemory`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-122">必須小心使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="6d87a-122">This method must be used with extreme caution.</span></span> <span data-ttu-id="6d87a-123"><xref:System.ReadOnlyMemory%601> 用來代表不可變的資料和其他不是要寫入的記憶體。</span><span class="sxs-lookup"><span data-stu-id="6d87a-123"><xref:System.ReadOnlyMemory%601> is used to represent immutable data and other memory that is not meant to be written to.</span></span> <span data-ttu-id="6d87a-124"><xref:System.Memory%601> 這個方法所建立的執行個體應該不會寫入。</span><span class="sxs-lookup"><span data-stu-id="6d87a-124"><xref:System.Memory%601> instances created by this method should not be written to.</span></span> <span data-ttu-id="6d87a-125">這個方法的目的是允許的型別為的變數<xref:System.Memory%601>但只能用於讀取，來儲存<xref:System.ReadOnlyMemory%601>。</span><span class="sxs-lookup"><span data-stu-id="6d87a-125">The purpose of this method is to allow variables typed as <xref:System.Memory%601> but only used for reading to store a <xref:System.ReadOnlyMemory%601>.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;TTo&gt; Cast&lt;TFrom,TTo&gt; (ReadOnlySpan&lt;TFrom&gt; span) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!!TTo&gt; Cast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype System.ReadOnlySpan`1&lt;!!TFrom&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cast(Of TFrom As Structure, TTo As Structure) (span As ReadOnlySpan(Of TFrom)) As ReadOnlySpan(Of TTo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class static ReadOnlySpan&lt;TTo&gt; Cast(ReadOnlySpan&lt;TFrom&gt; span);" />
      <MemberSignature Language="F#" Value="static member Cast : ReadOnlySpan&lt;'From (requires 'From : struct)&gt; -&gt; ReadOnlySpan&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Cast span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;TFrom&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="6d87a-126">來源範圍的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-126">The type of the source span.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="6d87a-127">目標範圍的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-127">The type of the target span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-128">要轉換的來源配量。</span><span class="sxs-lookup"><span data-stu-id="6d87a-128">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="6d87a-129">將一個簡單型別的唯讀範圍轉換為另一個簡單型別的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-129">Casts a read-only span of one primitive type to a read-only span of another primitive type.</span></span></summary>
        <returns><span data-ttu-id="6d87a-130">已轉換的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-130">The converted read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-131">既不`TFrom`也不`TTo`可以包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-131">Neither `TFrom` nor `TTo` can contain pointers or references.</span></span> <span data-ttu-id="6d87a-132">`TFrom` 和`TTo`會在執行階段檢查，才能保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-132">`TFrom` and `TTo` are checked at runtime in order to preserve type safety.</span></span>  

<span data-ttu-id="6d87a-133">只有在支援不當記憶體存取的平台上支援這個方法，或當記憶體區塊會透過其他方式對齊。</span><span class="sxs-lookup"><span data-stu-id="6d87a-133">This method is supported only on platforms that support misaligned memory access or when the memory block is aligned by other means.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-134"><paramref name="TFrom" /> 或 <paramref name="TTo" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-134"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;TTo&gt; Cast&lt;TFrom,TTo&gt; (Span&lt;TFrom&gt; span) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!!TTo&gt; Cast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype System.Span`1&lt;!!TFrom&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Cast``2(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cast(Of TFrom As Structure, TTo As Structure) (span As Span(Of TFrom)) As Span(Of TTo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class static Span&lt;TTo&gt; Cast(Span&lt;TFrom&gt; span);" />
      <MemberSignature Language="F#" Value="static member Cast : Span&lt;'From (requires 'From : struct)&gt; -&gt; Span&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Cast span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;TFrom&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom"><span data-ttu-id="6d87a-135">來源範圍的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-135">The type of the source span.</span></span></typeparam>
        <typeparam name="TTo"><span data-ttu-id="6d87a-136">目標範圍的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-136">The type of the target span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-137">要轉換的來源配量。</span><span class="sxs-lookup"><span data-stu-id="6d87a-137">The source slice to convert.</span></span></param>
        <summary><span data-ttu-id="6d87a-138">將一個簡單型別的範圍轉換為另一個簡單型別的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-138">Casts a span of one primitive type to a span of another primitive type.</span></span></summary>
        <returns><span data-ttu-id="6d87a-139">已轉換的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-139">The converted span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-140">既不`TFrom`也不`TTo`可以包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-140">Neither `TFrom` nor `TTo` can contain pointers or references.</span></span> <span data-ttu-id="6d87a-141">`TFrom` 和`TTo`會在執行階段檢查，才能保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-141">`TFrom` and `TTo` are checked at runtime in order to preserve type safety.</span></span>  

<span data-ttu-id="6d87a-142">在 unchecked 內容中，就會發生轉換。</span><span class="sxs-lookup"><span data-stu-id="6d87a-142">The cast occurs in an unchecked context.</span></span> <span data-ttu-id="6d87a-143">如果範圍`TTo`小於範圍`TFrom`，可能會發生資料遺失。</span><span class="sxs-lookup"><span data-stu-id="6d87a-143">If the range of `TTo` is less than the range of `TFrom`, data loss can occur.</span></span> <span data-ttu-id="6d87a-144">比方說，如果`TFrom`是<xref:System.Int64>，下列其中一個的`ReadOnlySpan<Int32>`的值是 0x100001111110F0F，和`TTo`是<xref:System.Int32>，產生的值是 11110F0F。</span><span class="sxs-lookup"><span data-stu-id="6d87a-144">For example, if `TFrom` is <xref:System.Int64>, one of the `ReadOnlySpan<Int32>` values is 0x100001111110F0F, and `TTo` is <xref:System.Int32>, the resulting value is 11110F0F.</span></span>

<span data-ttu-id="6d87a-145">只有在支援不當記憶體存取的平台上支援這個方法，或當記憶體區塊會透過其他方式對齊。</span><span class="sxs-lookup"><span data-stu-id="6d87a-145">This method is supported only on platforms that support misaligned memory access or when the memory block is aligned by other means.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-146"><paramref name="TFrom" /> 或 <paramref name="TTo" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-146"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromPinnedArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Memory&lt;T&gt; CreateFromPinnedArray&lt;T&gt; (T[] array, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Memory`1&lt;!!T&gt; CreateFromPinnedArray&lt;T&gt;(!!T[] array, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateFromPinnedArray``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPinnedArray(Of T) (array As T(), start As Integer, length As Integer) As Memory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Memory&lt;T&gt; CreateFromPinnedArray(cli::array &lt;T&gt; ^ array, int start, int length);" />
      <MemberSignature Language="F#" Value="static member CreateFromPinnedArray : 'T[] * int * int -&gt; Memory&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateFromPinnedArray (array, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-147">陣列的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-147">The type of the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="6d87a-148">預先固定的來源陣列。</span><span class="sxs-lookup"><span data-stu-id="6d87a-148">The pre-pinned source array.</span></span></param>
        <param name="start"><span data-ttu-id="6d87a-149">要開始記憶體區塊的 <paramref name="array" /> 索引。</span><span class="sxs-lookup"><span data-stu-id="6d87a-149">The index of <paramref name="array" /> at which to begin the memory block.</span></span></param>
        <param name="length"><span data-ttu-id="6d87a-150">要包含在記憶體區塊中的項目數量。</span><span class="sxs-lookup"><span data-stu-id="6d87a-150">The number of items to include in the memory block.</span></span></param>
        <summary><span data-ttu-id="6d87a-151">在預先定義的目標陣列上建立新的記憶體緩衝區，從 <paramref name="start" /> 索引開始，並包含 <paramref name="length" /> 個項目。</span><span class="sxs-lookup"><span data-stu-id="6d87a-151">Creates a new memory buffer over the portion of the pre-pinned target array beginning at the <paramref name="start" /> index and consisting of <paramref name="length" /> items.</span></span></summary>
        <returns><span data-ttu-id="6d87a-152">在 <paramref name="array" /> 指定之元素上的記憶體區塊。</span><span class="sxs-lookup"><span data-stu-id="6d87a-152">A block of memory over the specified elements of <paramref name="array" />.</span></span> <span data-ttu-id="6d87a-153">如果 <paramref name="array" /> 為 <see langword="null" />，或如果 <paramref name="start" /> 和 <paramref name="length" /> 為 0，方法會傳回 <see cref="System.Memory`1.Length" /> 為零的 <see cref="T:System.Memory`1" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="6d87a-153">If <paramref name="array" /> is <see langword="null" />, or if <paramref name="start" /> and <paramref name="length" /> are 0, the method returns a <see cref="T:System.Memory`1" /> instance of <see cref="System.Memory`1.Length" /> zero.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-154">陣列必須已經釘選之前呼叫這個方法時，該陣列不能同時已取消釘選<xref:System.Memory%601>它所傳回的緩衝區是仍在使用中。</span><span class="sxs-lookup"><span data-stu-id="6d87a-154">The array must already be pinned before this method is called, and that array must not be unpinned while the <xref:System.Memory%601> buffer that it returns is still in use.</span></span> <span data-ttu-id="6d87a-155">已取消釘選在陣列上呼叫這個方法可能會導致記憶體損毀。</span><span class="sxs-lookup"><span data-stu-id="6d87a-155">Calling this method on an unpinned array could result in memory corruption.</span></span>

       ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="6d87a-156"><paramref name="array" /> 是 Covariant，且 <paramref name="array" /> 的型別不完全是 <paramref name="T[]" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-156"><paramref name="array" /> is covariant, and the type of <paramref name="array" /> is not exactly <paramref name="T[]" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d87a-157"><paramref name="start" /> 或結尾索引不在 0 到 <see cref="P:System.Array.Length" /> 的範圍內。</span><span class="sxs-lookup"><span data-stu-id="6d87a-157">The <paramref name="start" /> or the end index is not in the range of 0 to <see cref="P:System.Array.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReadOnlySpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;T&gt; CreateReadOnlySpan&lt;T&gt; (ref T reference, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;!!T&gt; CreateReadOnlySpan&lt;T&gt;(!!T&amp; reference, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpan``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateReadOnlySpan(Of T) (ByRef reference As T, length As Integer) As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static ReadOnlySpan&lt;T&gt; CreateReadOnlySpan(T % reference, int length);" />
      <MemberSignature Language="F#" Value="static member CreateReadOnlySpan :  * int -&gt; ReadOnlySpan&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateReadOnlySpan (reference, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reference" Type="T" RefType="ref" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-158">資料項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-158">The type of the data items.</span></span></typeparam>
        <param name="reference"><span data-ttu-id="6d87a-159">資料的參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-159">A reference to data.</span></span></param>
        <param name="length"><span data-ttu-id="6d87a-160"><paramref name="reference" /> 包含的 <paramref name="T" /> 元素數目。</span><span class="sxs-lookup"><span data-stu-id="6d87a-160">The number of <paramref name="T" /> elements that <paramref name="reference" /> contains.</span></span></param>
        <summary><span data-ttu-id="6d87a-161">在一般受控物件上建立新的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-161">Creates a new read-only span over a portion of a regular managed object.</span></span></summary>
        <returns><span data-ttu-id="6d87a-162">唯讀的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-162">A read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-163">此方法很有用，如果受管理的物件部分代表固定的陣列。</span><span class="sxs-lookup"><span data-stu-id="6d87a-163">This method can be useful if part of a managed object represents a fixed array.</span></span> 

> [!WARNING]
> <span data-ttu-id="6d87a-164">這個方法應該謹慎使用。</span><span class="sxs-lookup"><span data-stu-id="6d87a-164">This method should be used with caution.</span></span> <span data-ttu-id="6d87a-165">它會有危險性因為`length`就不會檢查引數。</span><span class="sxs-lookup"><span data-stu-id="6d87a-165">It is dangerous because the `length` argument is not checked.</span></span> <span data-ttu-id="6d87a-166">此外，傳回範圍的存留期不會驗證安全性範圍感知的語言。</span><span class="sxs-lookup"><span data-stu-id="6d87a-166">In addition, the lifetime of the returned span is not validated for safety by span-aware languages.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Span&lt;T&gt; CreateSpan&lt;T&gt; (ref T reference, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Span`1&lt;!!T&gt; CreateSpan&lt;T&gt;(!!T&amp; reference, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.CreateSpan``1(``0@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpan(Of T) (ByRef reference As T, length As Integer) As Span(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static Span&lt;T&gt; CreateSpan(T % reference, int length);" />
      <MemberSignature Language="F#" Value="static member CreateSpan :  * int -&gt; Span&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.CreateSpan (reference, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reference" Type="T" RefType="ref" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-167">資料項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-167">The type of the data items.</span></span></typeparam>
        <param name="reference"><span data-ttu-id="6d87a-168">資料的參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-168">A reference to data.</span></span></param>
        <param name="length"><span data-ttu-id="6d87a-169"><paramref name="reference" /> 包含的 <paramref name="T" /> 元素數目。</span><span class="sxs-lookup"><span data-stu-id="6d87a-169">The number of <paramref name="T" /> elements that <paramref name="reference" /> contains.</span></span></param>
        <summary><span data-ttu-id="6d87a-170">在一般受控物件上建立新的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-170">Creates a new span over a portion of a regular managed object.</span></span></summary>
        <returns><span data-ttu-id="6d87a-171">範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-171">A span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-172">此方法很有用，如果受管理的物件部分代表固定的陣列。</span><span class="sxs-lookup"><span data-stu-id="6d87a-172">This method can be useful if part of a managed object represents a fixed array.</span></span> 

> [!WARNING]
> <span data-ttu-id="6d87a-173">這個方法應該謹慎使用。</span><span class="sxs-lookup"><span data-stu-id="6d87a-173">This method should be used with caution.</span></span> <span data-ttu-id="6d87a-174">它會有危險性因為`length`就不會檢查引數。</span><span class="sxs-lookup"><span data-stu-id="6d87a-174">It is dangerous because the `length` argument is not checked.</span></span> <span data-ttu-id="6d87a-175">此外，傳回範圍的存留期不會驗證安全性範圍感知的語言。</span><span class="sxs-lookup"><span data-stu-id="6d87a-175">In addition, the lifetime of the returned span is not validated for safety by span-aware languages.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetReference&lt;T&gt; (ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetReference&lt;T&gt;(valuetype System.ReadOnlySpan`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.GetReference``1(System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReference(Of T) (span As ReadOnlySpan(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % GetReference(ReadOnlySpan&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member GetReference : ReadOnlySpan&lt;'T&gt; -&gt; " Usage="System.Runtime.InteropServices.MemoryMarshal.GetReference span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-176">範圍中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-176">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-177">擷取參考的來源唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-177">The read-only span from which the reference is retrieved.</span></span></param>
        <summary><span data-ttu-id="6d87a-178">傳回唯讀範圍索引位置為 0 的元素參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-178">Returns a reference to the element of the read-only span at index 0.</span></span></summary>
        <returns><span data-ttu-id="6d87a-179">索引位置為 0 的元素參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-179">A reference to the element at index 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-180">如果唯讀範圍是空的這個方法會傳回位於索引 0 處的項目會有已儲存的位置的參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-180">If the read-only span is empty, this method returns a reference to the location where the element at index 0 would have been stored.</span></span> <span data-ttu-id="6d87a-181">這類的參考可能會或可能不是`null`。</span><span class="sxs-lookup"><span data-stu-id="6d87a-181">Such a reference may or may not be `null`.</span></span> <span data-ttu-id="6d87a-182">傳回的參考可以用於釘選，但它必須永遠不會取值。</span><span class="sxs-lookup"><span data-stu-id="6d87a-182">The returned reference can be used for pinning, but it must never be dereferenced.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReference&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetReference&lt;T&gt; (Span&lt;T&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetReference&lt;T&gt;(valuetype System.Span`1&lt;!!T&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.GetReference``1(System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReference(Of T) (span As Span(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T % GetReference(Span&lt;T&gt; span);" />
      <MemberSignature Language="F#" Value="static member GetReference : Span&lt;'T&gt; -&gt; " Usage="System.Runtime.InteropServices.MemoryMarshal.GetReference span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-183">範圍中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-183">The type of items in the span.</span></span></typeparam>
        <param name="span"><span data-ttu-id="6d87a-184">擷取參考的來源範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-184">The span from which the reference is retrieved.</span></span></param>
        <summary><span data-ttu-id="6d87a-185">傳回範圍索引位置為 0 的元素參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-185">Returns a reference to the element of the span at index 0.</span></span></summary>
        <returns><span data-ttu-id="6d87a-186">索引位置為 0 的元素參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-186">A reference to the element at index 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-187">如果範圍是空的則這個方法會傳回位於索引 0 處的項目會有已儲存的位置的參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-187">If the span is empty, this method returns a reference to the location where the element at index 0 would have been stored.</span></span> <span data-ttu-id="6d87a-188">這類的參考可能會或可能不是`null`。</span><span class="sxs-lookup"><span data-stu-id="6d87a-188">Such a reference may or may not be `null`.</span></span> <span data-ttu-id="6d87a-189">傳回的參考可以用於釘選，但它必須永遠不會取值。</span><span class="sxs-lookup"><span data-stu-id="6d87a-189">The returned reference can be used for pinning, but it must never be dereferenced.</span></span>

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (ReadOnlySpan&lt;byte&gt; source) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Read``1(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read(Of T As Structure) (source As ReadOnlySpan(Of Byte)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static T Read(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="static member Read : ReadOnlySpan&lt;byte&gt; -&gt; 'T (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Read source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-190">要擷取的唯寫的範圍的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-190">The type of the item to retrieve from the read-only span.</span></span></typeparam>
        <param name="source"><span data-ttu-id="6d87a-191">唯讀的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-191">A read-only span.</span></span></param>
        <summary><span data-ttu-id="6d87a-192">讀取型別結構</span><span class="sxs-lookup"><span data-stu-id="6d87a-192">Reads a structure of type</span></span> <param name="T" /> <span data-ttu-id="6d87a-193">超出位元組的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-193">out of a read-only span of bytes.</span></span></summary>
        <returns><span data-ttu-id="6d87a-194">從唯讀範圍擷取的結構。</span><span class="sxs-lookup"><span data-stu-id="6d87a-194">The structure retrieved from the read-only span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-195">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-195">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-196">' 已在執行階段為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-196">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-197"><paramref name="T" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-197"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d87a-198"><paramref name="source" /> 小於 <paramref name="T" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-198"><paramref name="source" /> is smaller than <paramref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToEnumerable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; ToEnumerable&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; ToEnumerable&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.ToEnumerable``1(System.ReadOnlyMemory{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToEnumerable(Of T) (memory As ReadOnlyMemory(Of T)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ ToEnumerable(ReadOnlyMemory&lt;T&gt; memory);" />
      <MemberSignature Language="F#" Value="static member ToEnumerable : ReadOnlyMemory&lt;'T&gt; -&gt; seq&lt;'T&gt;" Usage="System.Runtime.InteropServices.MemoryMarshal.ToEnumerable memory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-199">唯讀記憶體緩衝區中的項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-199">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="6d87a-200">唯讀記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="6d87a-200">A read-only memory buffer.</span></span></param>
        <summary><span data-ttu-id="6d87a-201">建立指定唯讀記憶體緩衝區的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 檢視。</span><span class="sxs-lookup"><span data-stu-id="6d87a-201">Creates an <see cref="T:System.Collections.Generic.IEnumerable`1" /> view of the given read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="6d87a-202"><paramref name="memory" /> 的列舉檢視。</span><span class="sxs-lookup"><span data-stu-id="6d87a-202">An enumerable view of <paramref name="memory" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-203">這個方法可讓使用中要求的型別參數的現有 Api 的唯讀記憶體緩衝區<xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="6d87a-203">This method allows a read-only memory buffer to be used in existing APIs that require a parameter of type <xref:System.Collections.Generic.IEnumerable%601>.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetArray&lt;T&gt; (ReadOnlyMemory&lt;T&gt; memory, out ArraySegment&lt;T&gt; segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetArray&lt;T&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] valuetype System.ArraySegment`1&lt;!!T&gt;&amp; segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetArray``1(System.ReadOnlyMemory{``0},System.ArraySegment{``0}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetArray(Of T) (memory As ReadOnlyMemory(Of T), ByRef segment As ArraySegment(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TryGetArray(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] ArraySegment&lt;T&gt; % segment);" />
      <MemberSignature Language="F#" Value="static member TryGetArray : ReadOnlyMemory&lt;'T&gt; *  -&gt; bool" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetArray (memory, segment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
        <Parameter Name="segment" Type="System.ArraySegment&lt;T&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-204">唯讀記憶體緩衝區中的項目類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-204">The type of items in the read-only memory buffer.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="6d87a-205">唯讀記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="6d87a-205">A read-only memory buffer.</span></span></param>
        <param name="segment"><span data-ttu-id="6d87a-206">當方法傳回時，會包含擷取自基礎唯讀記憶體緩衝區的陣列區段。</span><span class="sxs-lookup"><span data-stu-id="6d87a-206">When this method returns, contains the array segment retrieved from the underlying read-only memory buffer.</span></span> <span data-ttu-id="6d87a-207">如果方法失敗，方法會傳回預設的陣列區段。</span><span class="sxs-lookup"><span data-stu-id="6d87a-207">If the method fails, the method returns a default array segment.</span></span></param>
        <summary><span data-ttu-id="6d87a-208">嘗試從基礎記憶體緩衝區取得陣列區段。</span><span class="sxs-lookup"><span data-stu-id="6d87a-208">Tries to get an array segment from the underlying memory buffer.</span></span> <span data-ttu-id="6d87a-209">傳回值指出作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="6d87a-209">The return value indicates the success of the operation.</span></span></summary>
        <returns><span data-ttu-id="6d87a-210">如果方法呼叫成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-210"><see langword="true" /> if the method call succeeds; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMemoryManager&lt;T,TManager&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetMemoryManager&lt;T,TManager&gt; (ReadOnlyMemory&lt;T&gt; memory, out TManager manager) where TManager : System.Buffers.MemoryManager&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemoryManager&lt;T, (class System.Buffers.MemoryManager`1&lt;!!T&gt;) TManager&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] !!TManager&amp; manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager``2(System.ReadOnlyMemory{``0},``1@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetMemoryManager(Of T, TManager) (memory As ReadOnlyMemory(Of T), ByRef manager As TManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TManager&gt;&#xA; where TManager : System::Buffers::MemoryManager&lt;T&gt; static bool TryGetMemoryManager(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] TManager % manager);" />
      <MemberSignature Language="F#" Value="static member TryGetMemoryManager : ReadOnlyMemory&lt;'T&gt; *  -&gt; bool (requires 'Manager :&gt; System.Buffers.MemoryManager&lt;'T&gt;)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager (memory, manager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TManager">
          <Constraints>
            <BaseTypeName>System.Buffers.MemoryManager&lt;T&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
        <Parameter Name="manager" Type="TManager" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-211">唯讀記憶體緩衝區中的項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-211">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <typeparam name="TManager"><span data-ttu-id="6d87a-212">型別<see cref="T:System.Buffers.MemoryManager`1" />擷取。</span><span class="sxs-lookup"><span data-stu-id="6d87a-212">The type of the <see cref="T:System.Buffers.MemoryManager`1" /> to retrieve.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="6d87a-213">要取得記憶體管理員的唯讀記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="6d87a-213">The read-only memory buffer for which to get the memory manager.</span></span></param>
        <param name="manager"><span data-ttu-id="6d87a-214">當方法傳回時，為 <paramref name="memory" /> 的管理員。</span><span class="sxs-lookup"><span data-stu-id="6d87a-214">When the method returns, the manager of <paramref name="memory" />.</span></span></param>
        <summary><span data-ttu-id="6d87a-215">嘗試從基礎唯讀記憶體緩衝區擷取 <see cref="T:System.Buffers.MemoryManager`1" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-215">Tries to retrieve a <see cref="T:System.Buffers.MemoryManager`1" /> from the underlying read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="6d87a-216">如果方法已擷取記憶體管理員，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-216"><see langword="true" /> if the method retrieved the memory manager; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetMemoryManager&lt;T,TManager&gt;">
      <MemberSignature Language="C#" Value="public static bool TryGetMemoryManager&lt;T,TManager&gt; (ReadOnlyMemory&lt;T&gt; memory, out TManager manager, out int start, out int length) where TManager : System.Buffers.MemoryManager&lt;T&gt;;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetMemoryManager&lt;T, (class System.Buffers.MemoryManager`1&lt;!!T&gt;) TManager&gt;(valuetype System.ReadOnlyMemory`1&lt;!!T&gt; memory, [out] !!TManager&amp; manager, [out] int32&amp; start, [out] int32&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager``2(System.ReadOnlyMemory{``0},``1@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetMemoryManager(Of T, TManager) (memory As ReadOnlyMemory(Of T), ByRef manager As TManager, ByRef start As Integer, ByRef length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TManager&gt;&#xA; where TManager : System::Buffers::MemoryManager&lt;T&gt; static bool TryGetMemoryManager(ReadOnlyMemory&lt;T&gt; memory, [Runtime::InteropServices::Out] TManager % manager, [Runtime::InteropServices::Out] int % start, [Runtime::InteropServices::Out] int % length);" />
      <MemberSignature Language="F#" Value="static member TryGetMemoryManager : ReadOnlyMemory&lt;'T&gt; *  *  *  -&gt; bool (requires 'Manager :&gt; System.Buffers.MemoryManager&lt;'T&gt;)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetMemoryManager (memory, manager, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TManager">
          <Constraints>
            <BaseTypeName>System.Buffers.MemoryManager&lt;T&gt;</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;T&gt;" />
        <Parameter Name="manager" Type="TManager" RefType="out" />
        <Parameter Name="start" Type="System.Int32" RefType="out" />
        <Parameter Name="length" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-217">唯讀記憶體緩衝區中的項目型別。</span><span class="sxs-lookup"><span data-stu-id="6d87a-217">The type of the items in the read-only memory buffer.</span></span></typeparam>
        <typeparam name="TManager"><span data-ttu-id="6d87a-218">型別<see cref="T:System.Buffers.MemoryManager`1" />擷取。</span><span class="sxs-lookup"><span data-stu-id="6d87a-218">The type of the <see cref="T:System.Buffers.MemoryManager`1" /> to retrieve.</span></span></typeparam>
        <param name="memory"><span data-ttu-id="6d87a-219">要取得記憶體管理員的唯讀記憶體緩衝區。</span><span class="sxs-lookup"><span data-stu-id="6d87a-219">The read-only memory buffer for which to get the memory manager.</span></span></param>
        <param name="manager"><span data-ttu-id="6d87a-220">當方法傳回時，為 <paramref name="memory" /> 的管理員。</span><span class="sxs-lookup"><span data-stu-id="6d87a-220">When the method returns, the manager of <paramref name="memory" />.</span></span></param>
        <param name="start"><span data-ttu-id="6d87a-221">當方法傳回時，為 <paramref name="memory" /> 所代表從 <paramref name="manager" /> 開始的位移。</span><span class="sxs-lookup"><span data-stu-id="6d87a-221">When the method returns, the offset from the start of the <paramref name="manager" /> that the <paramref name="memory" /> represents.</span></span></param>
        <param name="length"><span data-ttu-id="6d87a-222">當方法傳回時，為 <paramref name="memory" /> 所代表 <paramref name="manager" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="6d87a-222">When the method returns, the length of the <paramref name="manager" /> that the <paramref name="memory" /> represents.</span></span></param>
        <summary><span data-ttu-id="6d87a-223">嘗試從基礎唯讀記憶體緩衝區擷取 <see cref="T:System.Buffers.MemoryManager`1" />、開始索引和長度。</span><span class="sxs-lookup"><span data-stu-id="6d87a-223">Tries to retrieve a <see cref="T:System.Buffers.MemoryManager`1" />, start index, and length from the underlying read-only memory buffer.</span></span></summary>
        <returns><span data-ttu-id="6d87a-224">如果方法成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-224"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetString">
      <MemberSignature Language="C#" Value="public static bool TryGetString (ReadOnlyMemory&lt;char&gt; memory, out string text, out int start, out int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetString(valuetype System.ReadOnlyMemory`1&lt;char&gt; memory, [out] string&amp; text, [out] int32&amp; start, [out] int32&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryGetString(System.ReadOnlyMemory{System.Char},System.String@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetString (memory As ReadOnlyMemory(Of Char), ByRef text As String, ByRef start As Integer, ByRef length As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetString(ReadOnlyMemory&lt;char&gt; memory, [Runtime::InteropServices::Out] System::String ^ % text, [Runtime::InteropServices::Out] int % start, [Runtime::InteropServices::Out] int % length);" />
      <MemberSignature Language="F#" Value="static member TryGetString : ReadOnlyMemory&lt;char&gt; *  *  *  -&gt; bool" Usage="System.Runtime.InteropServices.MemoryMarshal.TryGetString (memory, text, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memory" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="text" Type="System.String" RefType="out" />
        <Parameter Name="start" Type="System.Int32" RefType="out" />
        <Parameter Name="length" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="memory"><span data-ttu-id="6d87a-225">唯讀記憶體包含字元區塊。</span><span class="sxs-lookup"><span data-stu-id="6d87a-225">Read-only memory containing a block of characters.</span></span></param>
        <param name="text"><span data-ttu-id="6d87a-226">當方法傳回時，記憶體緩衝區中包含的字串。</span><span class="sxs-lookup"><span data-stu-id="6d87a-226">When the method returns, the string contained in the memory buffer.</span></span></param>
        <param name="start"><span data-ttu-id="6d87a-227"><paramref name="text" /> 中的開始位置。</span><span class="sxs-lookup"><span data-stu-id="6d87a-227">The starting location in <paramref name="text" />.</span></span></param>
        <param name="length"><span data-ttu-id="6d87a-228"><paramref name="text" /> 中的字元數目。</span><span class="sxs-lookup"><span data-stu-id="6d87a-228">The number of characters in <paramref name="text" />.</span></span></param>
        <summary><span data-ttu-id="6d87a-229">嘗試從 <see langword="System.ReadOnlyMemory&lt;Char&gt;" /> 取得基礎字串。</span><span class="sxs-lookup"><span data-stu-id="6d87a-229">Tries to get the underlying string from a <see langword="System.ReadOnlyMemory&lt;Char&gt;" />.</span></span></summary>
        <returns><span data-ttu-id="6d87a-230">如果方法成功擷取基礎字串，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-230"><see langword="true" /> if the method successfully retrieves the underlying string; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryRead&lt;T&gt; (ReadOnlySpan&lt;byte&gt; source, out T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryRead&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryRead``1(System.ReadOnlySpan{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryRead(Of T As Structure) (source As ReadOnlySpan(Of Byte), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool TryRead(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] T % value);" />
      <MemberSignature Language="F#" Value="static member TryRead : ReadOnlySpan&lt;byte&gt; *  -&gt; bool (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryRead (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-231">要擷取的結構類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-231">The type of the structure to retrieve.</span></span></typeparam>
        <param name="source"><span data-ttu-id="6d87a-232">位元組的唯讀範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-232">A read-only span of bytes.</span></span></param>
        <param name="value"><span data-ttu-id="6d87a-233">當方法傳回時，為 <paramref name="T" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="6d87a-233">When the method returns, an instance of <paramref name="T" />.</span></span></param>
        <summary><span data-ttu-id="6d87a-234">嘗試從位元組唯讀範圍中讀取類型 <paramref name="T" /> 的結構。</span><span class="sxs-lookup"><span data-stu-id="6d87a-234">Tries to read a structure of type <paramref name="T" /> from a read-only span of bytes.</span></span></summary>
        <returns><span data-ttu-id="6d87a-235">如果方法成功擷取結構的執行個體則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-235"><see langword="true" /> if the method succeeds in retrieving an instance of the structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-236">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-236">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-237">' 已在執行階段為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-237">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-238"><paramref name="T" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-238"><paramref name="T" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryWrite&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TryWrite&lt;T&gt; (Span&lt;byte&gt; destination, ref T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWrite&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;unsigned int8&gt; destination, !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.TryWrite``1(System.Span{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWrite(Of T As Structure) (destination As Span(Of Byte), ByRef value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static bool TryWrite(Span&lt;System::Byte&gt; destination, T % value);" />
      <MemberSignature Language="F#" Value="static member TryWrite : Span&lt;byte&gt; *  -&gt; bool (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.TryWrite (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-239">結構的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-239">The type of the structure.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="6d87a-240">要包含結構的位元組範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-240">The span of bytes to contain the structure.</span></span></param>
        <param name="value"><span data-ttu-id="6d87a-241">要寫入至範圍的結構。</span><span class="sxs-lookup"><span data-stu-id="6d87a-241">The structure to be written to the span.</span></span></param>
        <summary><span data-ttu-id="6d87a-242">嘗試將類型 <paramref name="T" /> 的結構寫入位元組範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-242">Tries to writes a structure of type <paramref name="T" /> into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="6d87a-243">如果作業執行成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-243"><see langword="true" /> if the write operation succeeded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6d87a-244">如果範圍太小而無法包含 <paramref name="T" />，方法會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-244">The method returns <see langword="false" /> if the span is too small to contain <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-245">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-245">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-246">' 已在執行階段為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-246">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-247"><paramref name="TFrom" /> 或 <paramref name="TTo" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-247"><paramref name="TFrom" /> or <paramref name="TTo" /> contains references or pointers.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (Span&lt;byte&gt; destination, ref T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;struct .ctor (class System.ValueType) T&gt;(valuetype System.Span`1&lt;unsigned int8&gt; destination, !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.MemoryMarshal.Write``1(System.Span{System.Byte},``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write(Of T As Structure) (destination As Span(Of Byte), ByRef value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class static void Write(Span&lt;System::Byte&gt; destination, T % value);" />
      <MemberSignature Language="F#" Value="static member Write : Span&lt;byte&gt; *  -&gt; unit (requires 'T : struct)" Usage="System.Runtime.InteropServices.MemoryMarshal.Write (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="6d87a-248">結構的類型。</span><span class="sxs-lookup"><span data-stu-id="6d87a-248">The type of the structure.</span></span></typeparam>
        <param name="destination"><span data-ttu-id="6d87a-249">要包含結構的位元組範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-249">The span of bytes to contain the structure.</span></span></param>
        <param name="value"><span data-ttu-id="6d87a-250">要寫入至範圍的結構。</span><span class="sxs-lookup"><span data-stu-id="6d87a-250">The structure to be written to the span.</span></span></param>
        <summary><span data-ttu-id="6d87a-251">將類型 <paramref name="T" /> 的結構寫入位元組範圍。</span><span class="sxs-lookup"><span data-stu-id="6d87a-251">Writes a structure of type <paramref name="T" /> into a span of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="6d87a-252">`T` 不能包含指標或參考。</span><span class="sxs-lookup"><span data-stu-id="6d87a-252">`T` cannot contain pointers or references.</span></span> <span data-ttu-id="6d87a-253">' 已在執行階段為了保留型別安全。</span><span class="sxs-lookup"><span data-stu-id="6d87a-253">\`It is checked at runtime in order to preserve type safety.</span></span>  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d87a-254"><paramref name="T" /> 包含參考或指標。</span><span class="sxs-lookup"><span data-stu-id="6d87a-254"><paramref name="T" /> contains references or pointers.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6d87a-255"><paramref name="destination" /> 太小而無法包含<paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="6d87a-255"><paramref name="destination" /> is too small to contain <paramref name="value" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>