<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeIdentifierAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e3595c96371b89df9d1c67c77fd50fdaaf4ba7f7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3595c96371b89df9d1c67c77fd50fdaaf4ba7f7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>Provides support for type equivalence.</source>
          <target state="translated">提供類型等價的支援。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph> attribute is primarily emitted by compilers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph>屬性主要由編譯器所發出。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>It serves two purposes:</source>
          <target state="translated">它有兩種用途：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>For all imported types, it indicates that the type is intended to be used for type equivalence.</source>
          <target state="translated">對於所有匯入的類型，它會指出類型要用於進行類型等價。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>For types that don’t have GUIDs in their type library, it has a constructor that takes two strings (<ph id="ph1">`scope`</ph> and <ph id="ph2">`identifier`</ph>).</source>
          <target state="translated">對於在其型別程式庫中不具有 Guid 的類型，其會採用兩個字串的建構函式 (<ph id="ph1">`scope`</ph>和<ph id="ph2">`identifier`</ph>)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>These are combined into a GUID and become the key that is used for type equivalence.</source>
          <target state="translated">這些會結合為一個 GUID，且會變成用類型等價的金鑰。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>Type equivalence is discussed in the <ph id="ph1">&lt;xref:System.Type.IsEquivalentTo%2A?displayProperty=nameWithType&gt;</ph> topic.</source>
          <target state="translated">類型等價述<ph id="ph1">&lt;xref:System.Type.IsEquivalentTo%2A?displayProperty=nameWithType&gt;</ph>主題。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.TypeIdentifierAttribute">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> class.</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> class.</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
          <source>This constructor overload does not accept parameters.</source>
          <target state="translated">這個建構函式多載不接受參數。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor">
          <source>Therefore, interfaces that have this attribute use the type's GUID and simple name to establish type equivalence.</source>
          <target state="translated">因此，此屬性的介面會使用類型的 GUID 和簡單名稱來建立類型等價。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>The first type equivalence string.</source>
          <target state="translated">第一個型別對等字串。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>The second type equivalence string.</source>
          <target state="translated">第二個型別對等字串。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> class with the specified scope and identifier.</source>
          <target state="translated">使用指定的範圍和識別項，建立 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`scope`</ph> and <ph id="ph2">`identifier`</ph> parameters are used to establish type equivalence.</source>
          <target state="translated"><ph id="ph1">`scope`</ph>和<ph id="ph2">`identifier`</ph>參數用來建立類型等價。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>They are combined into a GUID and become the key that is used for type equivalence.</source>
          <target state="translated">它們會結合為一個 GUID，且會變成用類型等價的金鑰。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>This constructor is particularly useful for types that do not have GUIDs in their type library.</source>
          <target state="translated">這個建構函式是特別適用於其型別程式庫中沒有 Guid 的類型。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph> class internally maintains the <ph id="ph2">`scope`</ph> and <ph id="ph3">`identifier`</ph> parameters as private members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph>類別在內部維護<ph id="ph2">`scope`</ph>和<ph id="ph3">`identifier`</ph>參數做為私用成員。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
          <source>Gets the value of the <ph id="ph1">&lt;paramref name="identifier" /&gt;</ph> parameter that was passed to the <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /&gt;</ph> constructor.</source>
          <target state="translated">取得傳遞給 <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /&gt;</ph> 建構函式的 <ph id="ph1">&lt;paramref name="identifier" /&gt;</ph> 的參數值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier">
          <source>The value of the constructor's <ph id="ph1">&lt;paramref name="identifier" /&gt;</ph> parameter.</source>
          <target state="translated">建構函式的 <ph id="ph1">&lt;paramref name="identifier" /&gt;</ph> 參數值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
          <source>Gets the value of the <ph id="ph1">&lt;paramref name="scope" /&gt;</ph> parameter that was passed to the <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /&gt;</ph> constructor.</source>
          <target state="translated">取得傳遞給 <ph id="ph2">&lt;see cref="M:System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)" /&gt;</ph> 建構函式的 <ph id="ph1">&lt;paramref name="scope" /&gt;</ph> 的參數值。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.TypeIdentifierAttribute.Scope">
          <source>The value of the constructor's <ph id="ph1">&lt;paramref name="scope" /&gt;</ph> parameter.</source>
          <target state="translated">建構函式的 <ph id="ph1">&lt;paramref name="scope" /&gt;</ph> 參數值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>