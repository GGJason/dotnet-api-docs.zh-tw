<Type Name="_PropertyInfo" FullName="System.Runtime.InteropServices._PropertyInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5771a358d9035773443f80b2af1ab64497235271" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39966783" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyInfo" />
  <TypeSignature Language="F#" Value="type _PropertyInfo = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="66fa1-101">公開 <see cref="T:System.Reflection.PropertyInfo" /> 類別的公用成員至 Unmanaged 程式碼。</span>
      <span class="sxs-lookup">
        <span data-stu-id="66fa1-101">Exposes the public members of the <see cref="T:System.Reflection.PropertyInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-102">此介面是以 managed 類別從 unmanaged 程式碼存取，而且不應該從 managed 程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="66fa1-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-103">此介面保留的 vtable 順序<xref:System.Reflection.PropertyInfo?displayProperty=nameWithType>類別可由 unmanaged 的 COM 物件存取的成員。</span><span class="sxs-lookup"><span data-stu-id="66fa1-103">This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-104">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.Attributes" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-105">這個屬性 (Property) 的屬性 (Attribute)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-105">The attributes of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-106">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-107"><xref:System.Reflection.PropertyInfo.Attributes%2A>屬性會取得這個屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="66fa1-107">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-108">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.CanRead" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanRead" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-109">如果可讀取這個屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-109">
              <see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-110">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-111"><xref:System.Reflection.PropertyInfo.CanRead%2A>屬性會取得值，指出是否可以讀取屬性。</span><span class="sxs-lookup"><span data-stu-id="66fa1-111">The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-112">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-113">如果可寫入屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-113">
              <see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-114">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-115"><xref:System.Reflection.PropertyInfo.CanWrite%2A>屬性會取得值，指出是否可以寫入至屬性。</span><span class="sxs-lookup"><span data-stu-id="66fa1-115">The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-116">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-116">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-117">宣告這個成員之類別的 <see langword="Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-117">The <see langword="Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-118">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-118">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-119"><xref:System.Reflection.MemberInfo.DeclaringType%2A>屬性取得宣告這個成員的類別。</span><span class="sxs-lookup"><span data-stu-id="66fa1-119">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_PropertyInfo.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="66fa1-120">與目前的 <see cref="T:System.Object" /> 相比較的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-121">為 COM 物件提供與版本無關的 <see cref="M:System.Object.Equals(System.Object)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-121">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-122">如果指定的 <see cref="T:System.Object" /> 和目前的 <see cref="T:System.Object" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-122">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-123">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-124"><xref:System.Object.Equals%2A>方法會判斷是否指定<xref:System.Object>是否等於目前<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="66fa1-124">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-125">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-126">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-127"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法傳回的陣列`get`和`set`上這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-127">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> methods return an array of the `get` and `set` accessors on this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-128">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-128">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-129">
            <see cref="T:System.Reflection.MethodInfo" /> 物件的陣列，這些物件會反映公用的 <see langword="get" />、<see langword="set" /> 和目前執行個體所反映之屬性的其他存取子 (如果找到存取子的話)，否則，這個方法會傳回元素為零 (0) 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-129">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-130">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-131"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法會傳回的陣列，其項目會反映公用`get`， `set`，和目前的執行個體所反映的屬性其他存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-131">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="_PropertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="66fa1-132">
            <see langword="true" /> 表示要在傳回的 <see langword="MethodInfo" /> 陣列中包括非公用方法，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-132">
              <see langword="true" /> to include non-public methods in the returned <see langword="MethodInfo" /> array; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-133">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-133">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-134">
            <see cref="T:System.Reflection.MethodInfo" /> 物件的陣列，其項目會反映 <see langword="get" />、<see langword="set" /> 和目前執行個體所反映之屬性的其他存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-134">An array of <see cref="T:System.Reflection.MethodInfo" /> objects whose elements reflect the <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance.</span>
          </span>
          <span data-ttu-id="66fa1-135">如果 <paramref name="nonPublic" /> 為 <see langword="true" />，則這個陣列會包含公用和非公用的 <see langword="get" />、<see langword="set" /> 和其他存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-135">If the <paramref name="nonPublic" /> parameter is <see langword="true" />, this array contains public and non-public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="66fa1-136">如果 <paramref name="nonPublic" /> 為 <see langword="false" />，則這個陣列只包含公用的 <see langword="get" />、<see langword="set" /> 和其他存取子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-136">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" />, <see langword="set" />, and other accessors.</span>
          </span>
          <span data-ttu-id="66fa1-137">如果沒有找到具有指定可視性的存取子，則這個方法會傳回項目為零 (0) 的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-137">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-138">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-139"><xref:System.Reflection.PropertyInfo.GetAccessors%2A>方法會傳回的陣列，其項目會反映公用的如果指定，非公用`get`， `set`，和目前的執行個體所反映的屬性其他存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-139">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-140">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-140">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-141">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-141">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-142"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回套用至這個成員的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="66fa1-142">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="66fa1-143">true 表示要搜尋這個成員的繼承鏈結以尋找屬性，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-143">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-144">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-144">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-145">包含所有自訂屬性的陣列，如果沒有定義屬性，則為包含零元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-145">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-146">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-147"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回陣列，包含所有自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="66fa1-147">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_PropertyInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="66fa1-148">要搜尋的屬性類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-148">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="66fa1-149">只會傳回可指派給這種類型的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-149">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="66fa1-150">true 表示要搜尋這個成員的繼承鏈結以尋找屬性，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-150">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-151">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-151">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-152">套用至這個成員的自訂屬性陣列，如果沒有套用屬性，則為包含零 (0) 元素的陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-152">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-153">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-153">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-154"><xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>方法會傳回所識別的自訂屬性陣列<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="66fa1-154">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-155">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-155">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-156">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-157"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法會傳回<xref:System.Reflection.MethodInfo>物件，表示`get`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-157">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-158">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-159">
            <see cref="T:System.Reflection.MethodInfo" /> 物件，代表這個屬性的公用 <see langword="get" /> 存取子，如果 <see langword="null" /> 存取子為非公用或不存在則為 <see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-159">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-160">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-161"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法會傳回公用`get`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-161">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="66fa1-162">
            <see langword="true" /> 表示要傳回非公用 <see langword="get" /> 存取子，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-162">
              <see langword="true" /> to return a non-public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-163">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-163">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-164">
            <see cref="T:System.Reflection.MethodInfo" /> 物件，表示這個屬性的 <see langword="get" /> 存取子 (如果 <paramref name="nonPublic" /> 參數為 <see langword="true" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-164">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if the <paramref name="nonPublic" /> parameter is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="66fa1-165">如果 <paramref name="nonPublic" /> 為 <see langword="null" /> 且 <see langword="false" /> 存取子為非公用，或如果 <paramref name="nonPublic" /> 為 <see langword="get" /> 但沒有 <see langword="true" /> 存取子存在，則為 <see langword="get" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-165">Or <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-166">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-167"><xref:System.Reflection.PropertyInfo.GetGetMethod%2A>方法會傳回公用或非公用`get`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-167">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_PropertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-168">為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetHashCode" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-168">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-169">目前執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-169">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-170">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-171"><xref:System.Object.GetHashCode%2A>方法做為特定類型的雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="66fa1-171">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="66fa1-172"><xref:System.Object.GetHashCode%2A> 適合用於雜湊演算法和資料結構，例如雜湊表。</span><span class="sxs-lookup"><span data-stu-id="66fa1-172"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberSignature Language="F#" Value="abstract member GetIDsOfNames :  * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="66fa1-173">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-173">Reserved for future use.</span>
          </span>
          <span data-ttu-id="66fa1-174">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-174">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="66fa1-175">要對應的名稱陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-175">An array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="66fa1-176">要對應之名稱的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-176">The count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="66fa1-177">用於解譯名稱的地區設定內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-177">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="66fa1-178">由呼叫端配置的陣列，接收對應於名稱的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-178">An array allocated by the caller that receives the identifiers corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-179">將一組名稱對應至一組對應的分派識別項 (Dispatch Identifier)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-179">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-180">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="66fa1-181">如需詳細資訊`IDispatch::GetIDsOfNames`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="66fa1-181">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="_PropertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-182">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-183">
            <see cref="T:System.Reflection.ParameterInfo" /> 類型的陣列，包含索引的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-183">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters for the indexes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-184">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-185"><xref:System.Reflection.PropertyInfo.GetIndexParameters%2A>方法會傳回屬性的所有索引參數陣列</span><span class="sxs-lookup"><span data-stu-id="66fa1-185">The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-186">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-187">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-187">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-188"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法會傳回<xref:System.Reflection.MethodInfo>物件，表示`set`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-188">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-189">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-190">
            <see cref="T:System.Reflection.MethodInfo" /> 物件，代表這個屬性的 <see langword="Set" /> 方法 (如果 <see langword="set" /> 存取子是公用的)，或 <see langword="null" /> (如果 <see langword="set" /> 存取子不是公用的)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-190">The <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-191">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-191">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-192"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法會傳回公用`set`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-192">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="_PropertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="66fa1-193">
            <see langword="true" /> 表示要傳回非公用的存取子，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-193">
              <see langword="true" /> to return a non-public accessor; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-194">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-195">下表的其中一個值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-195">One of the values in the following table.</span>
          </span>
          <span data-ttu-id="66fa1-196">
            <list type="table">
              <listheader>
                <term> 值  </term>
                <description> 意義  </description>
              </listheader>
              <item>
                <term>
                  <see cref="T:System.Reflection.MethodInfo" /> 物件，代表此屬性的 <see langword="Set" /> 方法。</term>
                <description>
                  <see langword="set" /> 存取子為公用。  -或-  <paramref name="nonPublic" /> 參數為 <see langword="true" /> 且 <see langword="set" /> 存取子為非公用。</description>
              </item>
              <item>
                <term>
                  <see langword="null" />
                </term>
                <description>
                  <paramref name="nonPublic" /> 參數是 <see langword="true" />，但屬性是唯讀的。  -或-  <paramref name="nonPublic" /> 參數是 <see langword="false" /> 且 <see langword="set" /> 存取子是非公用的。  -或-  沒有 <see langword="set" /> 存取子。</description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-196">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property.  </term>
                  <description> The <see langword="set" /> accessor is public.  -or-  The <paramref name="nonPublic" /> parameter is <see langword="true" /> and the <see langword="set" /> accessor is non-public.  </description>
                </item>
                <item>
                  <term>
                    <see langword="null" />
                  </term>
                  <description> The <paramref name="nonPublic" /> parameter is <see langword="true" />, but the property is read-only.  -or-  The <paramref name="nonPublic" /> parameter is <see langword="false" /> and the <see langword="set" /> accessor is non-public.  -or-  There is no <see langword="set" /> accessor.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-197">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-197">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-198"><xref:System.Reflection.PropertyInfo.GetSetMethod%2A>方法會傳回`set`這個屬性存取子。</span><span class="sxs-lookup"><span data-stu-id="66fa1-198">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_PropertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-199">為 COM 物件提供與版本無關的 <see cref="M:System.Object.GetType" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-199">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-200">
            <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-200">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-201">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-201">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-202"><xref:System.Object.GetType%2A>方法會取得目前的執行個體的類型。</span><span class="sxs-lookup"><span data-stu-id="66fa1-202">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="_PropertyInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="66fa1-203">要傳回的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-203">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="66fa1-204">類型資訊的地區設定識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-204">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="66fa1-205">所要求類型資訊物件的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-205">A pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-206">擷取物件的類型資訊，可以用來取得介面的類型資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-206">Retrieves the type information for an object, which can be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-207">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-207">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="66fa1-208">如需詳細資訊`IDispatch::GetTypeInfo`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="66fa1-208">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeInfoCount :  -&gt; unit" Usage="_PropertyInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="66fa1-209">當這個方法傳回時，包含接收物件提供的類型資訊介面數目的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-209">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
          <span data-ttu-id="66fa1-210">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-210">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-211">擷取物件提供的類型資訊介面數目 (0 或 1)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-211">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-212">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-212">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="66fa1-213">如需詳細資訊`IDispatch::GetTypeInfoCount`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="66fa1-213">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-214">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-214">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-215">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-215">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-216"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法會傳回屬性的值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-216">The <xref:System.Reflection.PropertyInfo.GetValue%2A> methods return the value of the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj" Usage="_PropertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66fa1-217">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-217">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66fa1-218">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-218">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="66fa1-219">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-219">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-220">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-221">
            <paramref name="obj" /> 參數的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-221">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-222">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-222">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-223"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法會傳回與屬性相關聯的編譯器常值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-223">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="_PropertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66fa1-224">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-224">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="66fa1-225">引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-225">The invocation attribute.</span>
          </span>
          <span data-ttu-id="66fa1-226">這必須是 <see langword="BindingFlags" /> 中的位元旗標：<see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" /> 或 <see langword="SetProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-226">This must be a bit flag from <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="66fa1-227">您必須指定適當的引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-227">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="66fa1-228">如果將要叫用靜態成員，則必須設定 <see langword="Static" /> 的 <see langword="BindingFlags" /> 旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-228">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="66fa1-229">使用反映來啟用繫結、強制引數的類型、成員的引動過程，和擷取 <see langword="MemberInfo" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-229">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="66fa1-230">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-230">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66fa1-231">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-231">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="66fa1-232">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-232">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="66fa1-233">
            <see langword="CultureInfo" /> 物件，表示資源要當地語系化的文化特性 (Culture)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-233">The <see langword="CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="66fa1-234">請注意，如果並未為這個文化特性將資源當地語系化，則將在搜尋相符項目時持續呼叫 <see langword="CultureInfo.Parent" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-234">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="66fa1-235">如果這個值為 <see langword="null" />，則 <see langword="CultureInfo" /> 是取自 <see langword="CultureInfo.CurrentUICulture" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-235">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-236">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-236">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-237">
            <paramref name="obj" /> 參數的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-237">The property value for the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-238">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-238">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-239"><xref:System.Reflection.PropertyInfo.GetValue%2A>方法會傳回具有指定繫結，索引的屬性值和<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="66fa1-239">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : uint32 *  * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="_PropertyInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="66fa1-240">成員的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-240">An identifier of a member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="66fa1-241">保留供未來使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-241">Reserved for future use.</span>
          </span>
          <span data-ttu-id="66fa1-242">必須是 IID_NULL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-242">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="66fa1-243">地區設定內容，用於解譯引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-243">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="66fa1-244">描述呼叫之內容的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-244">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="66fa1-245">結構的指標，此結構包含引數陣列、具名引數之 DISPID 引數的陣列，以及陣列中元素數目的計數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-245">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="66fa1-246">儲存結果的位置指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-246">A pointer to the location where the result will be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="66fa1-247">包含例外狀況資訊之結構的指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-247">A pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="66fa1-248">第一個有錯誤的引數索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-248">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-249">提供物件所公開的屬性和方法的存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-249">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-250">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-250">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="66fa1-251">如需詳細資訊`IDispatch::Invoke`，請參閱 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="66fa1-251">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_PropertyInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="66fa1-252">套用自訂屬性的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-252">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="66fa1-253">true 表示要搜尋這個成員的繼承鏈結以尋找屬性，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-253">true to search this member's inheritance chain to find the attributes; otherwise false.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-254">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-254">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-255">如果一或多個 <paramref name="attributeType" /> 參數的執行個體套用至這個成員，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-255">
              <see langword="true" /> if one or more instances of the <paramref name="attributeType" /> parameter are applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-256">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-256">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-257"><xref:System.Reflection.MemberInfo.IsDefined%2A>方法會指出是否有一或多個執行個體`attributeType`參數套用至這個成員。</span><span class="sxs-lookup"><span data-stu-id="66fa1-257">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-258">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-258">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-259">如果這個屬性為特殊名稱，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-259">
              <see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-260">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-260">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-261"><xref:System.Reflection.PropertyInfo.IsSpecialName%2A>屬性設定值，這個值指出屬性是否為特殊名稱。</span><span class="sxs-lookup"><span data-stu-id="66fa1-261">The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-262">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.MemberType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-262">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-263">其中一個 <see cref="T:System.Reflection.MemberTypes" /> 值，表示這個成員為屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-263">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating that this member is a property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-264">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-264">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-265"><xref:System.Reflection.PropertyInfo.MemberType%2A>屬性會取得<xref:System.Reflection.MemberTypes>指出這個成員為屬性的值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-265">The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-266">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.Name" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-266">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-267">
            <see cref="T:System.String" /> 物件，其中包含這個成員的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-267">A <see cref="T:System.String" /> object containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-268">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-268">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-269"><xref:System.Reflection.MemberInfo.Name%2A>屬性會取得目前成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="66fa1-269">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-270">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-270">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-271">此屬性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-271">The type of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-272">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-272">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-273"><xref:System.Reflection.PropertyInfo.PropertyType%2A>屬性會取得此屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="66fa1-273">The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-274">為 COM 物件提供與版本無關的 <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> 屬性之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-274">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66fa1-275">
            <see cref="T:System.Type" /> 物件，用來取得這個 <see cref="T:System.Reflection.MemberInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-275">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-276">這個屬性從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-276">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-277"><xref:System.Reflection.MemberInfo.ReflectedType%2A>屬性會取得用來取得這個類別物件<xref:System.Reflection.MemberInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="66fa1-277">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-278">為 COM 物件提供與版本無關的 <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-279">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-279">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-280"><xref:System.Reflection.PropertyInfo.SetValue%2A>方法會將指定物件的屬性值設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-280">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66fa1-281">將設定其屬性值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-281">The object whose property value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66fa1-282">這個屬性的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-282">The new value for this property.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66fa1-283">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-283">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="66fa1-284">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-284">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-285">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-285">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-286">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-286">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-287"><xref:System.Reflection.PropertyInfo.SetValue%2A>方法設定屬性的值，索引屬性的選擇性索引值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-287">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="_PropertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66fa1-288">其屬性值將被傳回的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-288">The object whose property value will be returned.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="66fa1-289">這個屬性的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-289">The new value for this property.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="66fa1-290">引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-290">The invocation attribute.</span>
          </span>
          <span data-ttu-id="66fa1-291">這必須是 <see cref="T:System.Reflection.BindingFlags" /> 中的位元旗標：<see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" /> 或 <see langword="SetProperty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-291">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span>
          </span>
          <span data-ttu-id="66fa1-292">您必須指定適當的引動過程屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-292">A suitable invocation attribute must be specified.</span>
          </span>
          <span data-ttu-id="66fa1-293">如果將要叫用靜態成員，則必須設定 <see langword="Static" /> 的 <see langword="BindingFlags" /> 旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-293">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="66fa1-294">使用反映來啟用繫結、強制引數的類型、成員的引動過程，和擷取 <see cref="T:System.Reflection.MemberInfo" /> 物件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-294">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span>
          </span>
          <span data-ttu-id="66fa1-295">如果 <c>Binder</c> 為 <see langword="null" />，則會使用預設 Binder。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-295">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="66fa1-296">索引屬性的選擇性索引值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-296">Optional index values for indexed properties.</span>
          </span>
          <span data-ttu-id="66fa1-297">非索引屬性的這個值應為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-297">This value should be <see langword="null" /> for non-indexed properties.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="66fa1-298">
            <see cref="T:System.Globalization.CultureInfo" /> 物件，表示資源要當地語系化的文化特性 (Culture)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-298">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource will be localized.</span>
          </span>
          <span data-ttu-id="66fa1-299">請注意，如果並未為這個文化特性將資源當地語系化，則將在搜尋相符項目時持續呼叫 <see langword="CultureInfo.Parent" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-299">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span>
          </span>
          <span data-ttu-id="66fa1-300">如果這個值為 <see langword="null" />，則 <see langword="CultureInfo" /> 是取自 <see langword="CultureInfo.CurrentUICulture" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-300">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66fa1-301">為 COM 物件提供與版本無關的 <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-301">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-302">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-302">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="66fa1-303"><xref:System.Reflection.FieldInfo.SetValue%2A>方法會將指定物件的屬性值設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="66fa1-303">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_PropertyInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66fa1-304">為 COM 物件提供與版本無關的 <see cref="M:System.Object.ToString" /> 方法之存取權。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-304">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66fa1-305">字串，代表目前的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="66fa1-305">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66fa1-306">這個方法會從 unmanaged 程式碼會存取 managed 類別，並不會呼叫從 managed 程式碼。</span><span class="sxs-lookup"><span data-stu-id="66fa1-306">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>