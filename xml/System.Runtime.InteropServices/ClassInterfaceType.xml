<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClassInterfaceType.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5dd6849853fb663f418c52154f9eadb78d4eadd68.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd6849853fb663f418c52154f9eadb78d4eadd68</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ClassInterfaceType">
          <source>Identifies the type of class interface that is generated for a class.</source>
          <target state="translated">識別為類別所產生的類別介面類型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ClassInterfaceType">
          <source>This enumeration is used in conjunction with the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph> attribute.</source>
          <target state="translated">這個列舉型別用於搭配<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ClassInterfaceType">
          <source>This example shows how to apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph> to a type, setting the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ClassInterfaceType&gt;</ph>.</source>
          <target state="translated">這個範例示範如何套用<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph>型別，設定<ph id="ph2">&lt;xref:System.Runtime.InteropServices.ClassInterfaceType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ClassInterfaceType">
          <source>Classes defined this way can be used from unmanaged COM.</source>
          <target state="translated">這種方式定義的類別可從 unmanaged com。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
          <source>Indicates that the class only supports late binding for COM clients.</source>
          <target state="translated">指示類別對 COM 用戶端只支援晚期繫結 (Late Binding)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
          <source>A <ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> for the class is automatically exposed to COM clients on request.</source>
          <target state="translated">類別的 <ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> 應要求會自動地公開至 COM 用戶端。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
          <source>The type library produced by <bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> does not contain type information for the <ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> in order to prevent clients from caching the DISPIDs of the interface.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbexp.exe (型別程式庫匯出工具)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> 產生的型別程式庫不包含 <ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> 類型資訊，以免用戶端快取介面的 DISPID。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
          <source>The <ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> does not exhibit the versioning problems described in <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph> because clients can only late-bind to the interface.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="dispinterface" /&gt;</ph> 不會出現 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph> 中所描述的版本控制問題，因為用戶端只能晚期繫結到介面。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch">
          <source>This is the default setting for <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph>.</source>
          <target state="translated">這是預設設定<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ClassInterfaceAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
          <source>Indicates that a dual class interface is automatically generated for the class and exposed to COM.</source>
          <target state="translated">指示雙重類別介面自動地產生給類別並公開至 COM。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
          <source>Type information is produced for the class interface and published in the type library.</source>
          <target state="translated">型別資訊產生給類別介面並發行至型別程式庫。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.AutoDual">
          <source>Using <ph id="ph1">&lt;see langword="AutoDual" /&gt;</ph> is strongly discouraged because of the versioning limitations described in <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph>.</source>
          <target state="translated">由於 <ph id="ph2">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph> 所描述的版本控制限制，我們非常不鼓勵使用 <ph id="ph1">&lt;see langword="AutoDual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>Indicates that no class interface is generated for the class.</source>
          <target state="translated">指示沒有類別介面產生給類別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>If no interfaces are implemented explicitly, the class can only provide late-bound access through the <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> interface.</source>
          <target state="translated">如果沒有明確實作介面，類別只能透過 <ph id="ph1">&lt;see langword="IDispatch" /&gt;</ph> 介面提供晚期繫結存取。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>This is the recommended setting for <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph>.</source>
          <target state="translated">這是 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute" /&gt;</ph> 的建議預設值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>Using <ph id="ph1">&lt;see langword="ClassInterfaceType.None" /&gt;</ph> is the only way to expose functionality through interfaces implemented explicitly by the class.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see langword="ClassInterfaceType.None" /&gt;</ph> 是唯一透過類別明確實作的介面公開功能的方法。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source><bpt id="p1">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass.</source>
          <target state="translated"><bpt id="p1">[</bpt>Tlbexp.exe （類型程式庫匯出工具）<ept id="p1">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept>會公開為 coclass 的預設介面類別所實作的第一個公用、 COM 可見介面。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&gt;</ph> attribute.</source>
          <target state="translated">從.NET Framework 2.0 版開始，您可以指定使用預設的介面公開至 COM<ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComDefaultInterfaceAttribute&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward).</source>
          <target state="translated">如果類別沒有實作介面，基底類別所實作的第一個公用、 COM 可見介面會變成 （開頭為最近衍生的基底類別和回溯） 的預設介面。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.InteropServices.ClassInterfaceType.None">
          <source>Tlbexp.exe exposes <ph id="ph1">`_Object`</ph> as the default interface if neither the class nor its base classes implement interfaces.</source>
          <target state="translated">Tlbexp.exe 會公開<ph id="ph1">`_Object`</ph>如果類別或其基底類別都不會實作介面的預設介面。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>