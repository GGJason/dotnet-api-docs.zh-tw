<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a4aa58acbbdf5072aae1b3b19890732bc6678529" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36633394" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="06231-101">表示資料應從呼叫端封送處理至被呼叫端，但不會封送處理回呼叫端。</span>
      <span class="sxs-lookup">
        <span data-stu-id="06231-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06231-102">您可以將此屬性套用至參數。</span><span class="sxs-lookup"><span data-stu-id="06231-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="06231-103"><xref:System.Runtime.InteropServices.InAttribute>是選擇性的。</span><span class="sxs-lookup"><span data-stu-id="06231-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="06231-104">COM interop 支援的屬性，並只平台叫用。</span><span class="sxs-lookup"><span data-stu-id="06231-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="06231-105">如果沒有明確設定，interop 封送處理器會假設規則根據參數類型、 依參考或值，是否傳遞的參數和型別是否 blittable 或非 blittable。</span><span class="sxs-lookup"><span data-stu-id="06231-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="06231-106">例如，<xref:System.Text.StringBuilder>類別一律假定為 In/Out 和假設的傳值方式傳遞的字串陣列中。</span><span class="sxs-lookup"><span data-stu-id="06231-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="06231-107">您不能套用<xref:System.Runtime.InteropServices.InAttribute>至以 C# 修改參數-樣式`out`關鍵字。</span><span class="sxs-lookup"><span data-stu-id="06231-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="06231-108">若要避免混淆`In`與 Visual Basic 中的關鍵字<xref:System.Runtime.InteropServices.InAttribute>，減去屬性，使用`<[In]>`表單和括號括住的屬性。</span><span class="sxs-lookup"><span data-stu-id="06231-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="06231-109">結合<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>是特別有用時套用至陣列和格式化，非 blittable 類型。</span><span class="sxs-lookup"><span data-stu-id="06231-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="06231-110">呼叫端會看到只在您套用這兩個屬性時，這些類型對被呼叫端的變更。</span><span class="sxs-lookup"><span data-stu-id="06231-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="06231-111">由於這些類型需要複製封送處理期間，您可以使用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>以減少不必要的複本。</span><span class="sxs-lookup"><span data-stu-id="06231-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="06231-112">如需有關的效果<xref:System.Runtime.InteropServices.InAttribute>上封送處理行為，請參閱[方向屬性](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2)。</span><span class="sxs-lookup"><span data-stu-id="06231-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06231-113">下列範例示範如何套用<xref:System.Runtime.InteropServices.InAttribute>和<xref:System.Runtime.InteropServices.OutAttribute>平台叫用傳遞為參數陣列的原型。</span><span class="sxs-lookup"><span data-stu-id="06231-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="06231-114">方向屬性的組合可讓呼叫端看到被呼叫端所做的變更。</span><span class="sxs-lookup"><span data-stu-id="06231-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="06231-115">初始化 <see cref="T:System.Runtime.InteropServices.InAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="06231-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>