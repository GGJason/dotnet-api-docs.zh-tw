<Type Name="HandleRef" FullName="System.Runtime.InteropServices.HandleRef">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1afa4016392d6d7bd0a60173d10e8a531fa8ba3" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58736345" /></Metadata><TypeSignature Language="C#" Value="public struct HandleRef" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HandleRef extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.HandleRef" />
  <TypeSignature Language="VB.NET" Value="Public Structure HandleRef" />
  <TypeSignature Language="C++ CLI" Value="public value class HandleRef" />
  <TypeSignature Language="F#" Value="type HandleRef = struct" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c6509-101">將保有控制代碼的 Managed 物件包裝至要使用平台叫用傳遞至 Unmanaged 程式碼的資源。</span><span class="sxs-lookup"><span data-stu-id="c6509-101">Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c6509-102">從.NET Framework 2.0 的功能<xref:System.Runtime.InteropServices.HandleRef>類別已被取代<xref:System.Runtime.InteropServices.SafeHandle>類別和其衍生的類別，以及藉由為<xref:System.Runtime.InteropServices.CriticalHandle>類別。</span><span class="sxs-lookup"><span data-stu-id="c6509-102">Starting with the .NET Framework 2.0, the functionality of the <xref:System.Runtime.InteropServices.HandleRef> class has been replaced by the <xref:System.Runtime.InteropServices.SafeHandle> class and its derived classes, as well as by the <xref:System.Runtime.InteropServices.CriticalHandle> class.</span></span>  
  
 <span data-ttu-id="c6509-103">如果您使用平台叫用呼叫的 managed 的物件，與平台叫用呼叫之後未在其他地方參考的物件，就可以完成的 managed 的物件的記憶體回收行程。</span><span class="sxs-lookup"><span data-stu-id="c6509-103">If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</span></span> <span data-ttu-id="c6509-104">此動作會釋放資源，並且會導致無效的控制代碼，造成平台叫用呼叫失敗。</span><span class="sxs-lookup"><span data-stu-id="c6509-104">This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</span></span> <span data-ttu-id="c6509-105">包裝的控制代碼與<xref:System.Runtime.InteropServices.HandleRef>保證受管理的物件不是平台叫用呼叫之前回收完成。</span><span class="sxs-lookup"><span data-stu-id="c6509-105">Wrapping a handle with <xref:System.Runtime.InteropServices.HandleRef> guarantees that the managed object is not garbage collected until the platform invoke call completes.</span></span> <span data-ttu-id="c6509-106">如需說明平台叫用服務，請參閱 <<c0> [ 使用 Unmanaged DLL 函式](~/docs/framework/interop/consuming-unmanaged-dll-functions.md)。</span><span class="sxs-lookup"><span data-stu-id="c6509-106">For a description of platform invoke services, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 <span data-ttu-id="c6509-107"><xref:System.Runtime.InteropServices.HandleRef>值類型，例如<xref:System.Runtime.InteropServices.GCHandle>，是一種特殊類型，interop 封送處理器所辨識。</span><span class="sxs-lookup"><span data-stu-id="c6509-107">The <xref:System.Runtime.InteropServices.HandleRef> value type, like <xref:System.Runtime.InteropServices.GCHandle>, is a special type recognized by the interop marshaler.</span></span> <span data-ttu-id="c6509-108">是標準的 nonpinned<xref:System.Runtime.InteropServices.GCHandle>也可避免延誤廢棄項目集合中，尚未<xref:System.Runtime.InteropServices.HandleRef>提供較佳的效能。</span><span class="sxs-lookup"><span data-stu-id="c6509-108">A normal, nonpinned <xref:System.Runtime.InteropServices.GCHandle> also prevents untimely garbage collection, yet <xref:System.Runtime.InteropServices.HandleRef> provides better performance.</span></span> <span data-ttu-id="c6509-109">雖然使用<xref:System.Runtime.InteropServices.HandleRef>讓物件保持運作的持續時間的平台叫用呼叫，最好使用，您也可以使用<xref:System.GC.KeepAlive%2A?displayProperty=nameWithType>達成相同目的的方法。</span><span class="sxs-lookup"><span data-stu-id="c6509-109">Although using <xref:System.Runtime.InteropServices.HandleRef> to keep an object alive for the duration of a platform invoke call is preferred, you can also use the <xref:System.GC.KeepAlive%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 <span data-ttu-id="c6509-110"><xref:System.Runtime.InteropServices.HandleRef>建構函式接受兩個參數：<xref:System.Object>代表包裝函式，和<xref:System.IntPtr>代表未受管理的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-110">The <xref:System.Runtime.InteropServices.HandleRef> constructor takes two parameters: an <xref:System.Object> representing the wrapper, and an <xref:System.IntPtr> representing the unmanaged handle.</span></span> <span data-ttu-id="c6509-111">Interop 封送處理器會將控制代碼傳遞給 unmanaged 程式碼，並保證包裝函式 (做為第一個參數傳遞給建構函式`HandleRef`) 在呼叫期間保持運作。</span><span class="sxs-lookup"><span data-stu-id="c6509-111">The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the `HandleRef`) remains alive for the duration of the call.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleRef (object wrapper, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object wrapper, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrapper As Object, handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleRef(System::Object ^ wrapper, IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.HandleRef : obj * nativeint -&gt; System.Runtime.InteropServices.HandleRef" Usage="new System.Runtime.InteropServices.HandleRef (wrapper, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrapper" Type="System.Object" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="wrapper"><span data-ttu-id="c6509-112">Managed 物件，不應該在平台叫用呼叫傳回前最終處理它。</span><span class="sxs-lookup"><span data-stu-id="c6509-112">A managed object that should not be finalized until the platform invoke call returns.</span></span></param>
        <param name="handle"><span data-ttu-id="c6509-113">指示資源控制代碼的 <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="c6509-113">An <see cref="T:System.IntPtr" /> that indicates a handle to a resource.</span></span></param>
        <summary><span data-ttu-id="c6509-114">使用要包裝的物件和 Unmanaged 程式碼所使用的資源控制代碼，初始化 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c6509-114">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleRef" /> class with the object to wrap and a handle to the resource used by unmanaged code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Runtime.InteropServices.HandleRef.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6509-115">取得資源控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-115">Gets the handle to a resource.</span></span></summary>
        <value><span data-ttu-id="c6509-116">資源控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-116">The handle to a resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.HandleRef -&gt; nativeint" Usage="System.Runtime.InteropServices.HandleRef.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6509-117">需要控制代碼的物件。</span><span class="sxs-lookup"><span data-stu-id="c6509-117">The object that needs a handle.</span></span></param>
        <summary><span data-ttu-id="c6509-118">傳回指定 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 物件的資源控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-118">Returns the handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></summary>
        <returns><span data-ttu-id="c6509-119">指定 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 物件的資源控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-119">The handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="c6509-120">這個運算子的對等方法是 <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c6509-120">The equivalent method for this operator is <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ToIntPtr(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIntPtr (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ToIntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberSignature Language="F#" Value="static member ToIntPtr : System.Runtime.InteropServices.HandleRef -&gt; nativeint" Usage="System.Runtime.InteropServices.HandleRef.ToIntPtr value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c6509-121"><see cref="T:System.Runtime.InteropServices.HandleRef" /> 物件，要從此物件擷取內部整數表示。</span><span class="sxs-lookup"><span data-stu-id="c6509-121">A <see cref="T:System.Runtime.InteropServices.HandleRef" /> object to retrieve an internal integer representation from.</span></span></param>
        <summary><span data-ttu-id="c6509-122">傳回 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 物件的內部整數表示。</span><span class="sxs-lookup"><span data-stu-id="c6509-122">Returns the internal integer representation of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></summary>
        <returns><span data-ttu-id="c6509-123"><see cref="T:System.IntPtr" /> 物件，表示 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="c6509-123">An <see cref="T:System.IntPtr" /> object that represents a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapper">
      <MemberSignature Language="C#" Value="public object Wrapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Wrapper" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Wrapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wrapper As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Wrapper { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wrapper : obj" Usage="System.Runtime.InteropServices.HandleRef.Wrapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c6509-124">取得存有資源控制代碼的物件。</span><span class="sxs-lookup"><span data-stu-id="c6509-124">Gets the object holding the handle to a resource.</span></span></summary>
        <value><span data-ttu-id="c6509-125">物件，存有資源控制代碼。</span><span class="sxs-lookup"><span data-stu-id="c6509-125">The object holding the handle to a resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>