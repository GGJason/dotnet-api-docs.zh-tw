<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f816c95180aa0f29827756bb076be206ee47309" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53524405" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b1fa8-101">自 Visual Basic 2005 起，這個類別已被取代。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-102">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1fa8-103">初始化 <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-104">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-105">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-105">Required.</span></span> <span data-ttu-id="b1fa8-106">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-107">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-107">Required.</span></span> <span data-ttu-id="b1fa8-108">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-109">執行加法 (+) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-110"><paramref name="o1" /> 和 <paramref name="o2" /> 的總和。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-111">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="b1fa8-112">+ 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b1fa8-113">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-113">Required.</span></span> <span data-ttu-id="b1fa8-114">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b1fa8-115">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-115">Required.</span></span> <span data-ttu-id="b1fa8-116">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-117">執行位元 <see langword="And" /> 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-118">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 都評估為 1，則為 1，否則為 0。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-119">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="b1fa8-120">And 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b1fa8-121">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-121">Required.</span></span> <span data-ttu-id="b1fa8-122">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b1fa8-123">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-123">Required.</span></span> <span data-ttu-id="b1fa8-124">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-125">執行位元 <see langword="Or" /> 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-126">如果 <paramref name="obj1" /> 和 <paramref name="obj2" /> 都評估為 0，則為 0；否則為 1。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-127">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="b1fa8-128">Or 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b1fa8-129">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-129">Required.</span></span> <span data-ttu-id="b1fa8-130">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b1fa8-131">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-131">Required.</span></span> <span data-ttu-id="b1fa8-132">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-133">執行 <see langword="Xor" /> 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-134">數值，表示兩個數值位元模式的位元互斥 (獨佔位元分離)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b1fa8-135">如需詳細資訊，請參閱 <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 運算子</see>。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-136">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="b1fa8-137">Xor 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-138">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-138">Required.</span></span> <span data-ttu-id="b1fa8-139">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-140">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-140">Required.</span></span> <span data-ttu-id="b1fa8-141">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-142">執行除法 (/) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-143"><paramref name="o1" /> 除以 <paramref name="o2" /> 的完整商數，包括任何餘數。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-144">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="b1fa8-145">/ 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="b1fa8-146">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-146">Required.</span></span> <span data-ttu-id="b1fa8-147">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-148">傳回 Boxed 基本值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="b1fa8-149">這個方法用來防止多次複製結構。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-150"><paramref name="o" /> (型別為物件) 的基本值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-151">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-152">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-152">Required.</span></span> <span data-ttu-id="b1fa8-153">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-154">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-154">Required.</span></span> <span data-ttu-id="b1fa8-155">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-156">執行整數除法 (\\) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-157"><paramref name="o1" /> 除以 <paramref name="o2" /> 的整數商數，這會捨棄任何餘數而只保留整數部分。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-158">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="b1fa8-159">\ 運算子</span><span class="sxs-lookup"><span data-stu-id="b1fa8-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b1fa8-160">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-160">Required.</span></span> <span data-ttu-id="b1fa8-161">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b1fa8-162">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-162">Required.</span></span> <span data-ttu-id="b1fa8-163">符合＜Like 運算子＞中所描述模式比對慣例的任何 String 運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="b1fa8-164">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-164">Required.</span></span> <span data-ttu-id="b1fa8-165"><see cref="T:Microsoft.VisualBasic.CompareMethod" /> 值，其指定作業使用文字或二進位比較。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="b1fa8-166">執行 <see langword="Like" /> 比較。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-167">如果 <paramref name="vLeft" /> 中值的字串表示符合 <paramref name="vRight" /> 中所含的模式，則為 <see langword="True" />，否則為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="b1fa8-168">如果 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 都為 <see langword="True" />，則為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-169">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="b1fa8-170">Like 運算子</span><span class="sxs-lookup"><span data-stu-id="b1fa8-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-171">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-171">Required.</span></span> <span data-ttu-id="b1fa8-172">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-173">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-173">Required.</span></span> <span data-ttu-id="b1fa8-174">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-175">執行模數 (<see langword="Mod" />) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-176"><paramref name="o1" /> 除以 <paramref name="o2" /> 後所留的餘數。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-177">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="b1fa8-178">Mod 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-179">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-179">Required.</span></span> <span data-ttu-id="b1fa8-180">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-181">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-181">Required.</span></span> <span data-ttu-id="b1fa8-182">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-183">執行乘法 (\*) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-184"><paramref name="o1" /> 與 <paramref name="o2" /> 的乘積。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-185">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="b1fa8-186">\* 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b1fa8-187">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-187">Required.</span></span> <span data-ttu-id="b1fa8-188">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-189">執行一元減號 (-) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-190"><paramref name="obj" /> 的負值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-191">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="b1fa8-192">- 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b1fa8-193">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-193">Required.</span></span> <span data-ttu-id="b1fa8-194">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-195">執行 <see langword="Not" /> 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-196">對於 <see langword="Boolean" /> 運算，如果 <paramref name="obj" /> 為 <see langword="False" />，則為 <see langword="True" />，否則為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="b1fa8-197">對於位元運算，如果 <paramref name="obj" /> 為 0，則為 1，否則為 0。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-198">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="b1fa8-199">Not 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-200">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-200">Required.</span></span> <span data-ttu-id="b1fa8-201">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-202">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-202">Required.</span></span> <span data-ttu-id="b1fa8-203">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="b1fa8-204">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-204">Required.</span></span> <span data-ttu-id="b1fa8-205"><see langword="True" /> 表示要執行不區分大小寫的字串比較，否則為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="b1fa8-206">指定兩個物件時，執行二進位碼或文字字串比較。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="b1fa8-207">值</span><span class="sxs-lookup"><span data-stu-id="b1fa8-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="b1fa8-208">條件</span><span class="sxs-lookup"><span data-stu-id="b1fa8-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="b1fa8-209">-1</span><span class="sxs-lookup"><span data-stu-id="b1fa8-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="b1fa8-210">
                <paramref name="o1" /> 小於 <paramref name="o2" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b1fa8-211">0</span><span class="sxs-lookup"><span data-stu-id="b1fa8-211">0</span></span> 
 </term>
              <description><span data-ttu-id="b1fa8-212">
                <paramref name="o1" /> 等於 <paramref name="o2" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="b1fa8-213">1</span><span class="sxs-lookup"><span data-stu-id="b1fa8-213">1</span></span> 
 </term>
              <description><span data-ttu-id="b1fa8-214">
                <paramref name="o1" /> 大於 <paramref name="o2" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-215">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="b1fa8-216">比較運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="b1fa8-217">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-217">Required.</span></span> <span data-ttu-id="b1fa8-218">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-219">執行一元加號 (+) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-220"><paramref name="obj" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="b1fa8-221">(<paramref name="obj" /> 的正負號不會變更)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-222">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="b1fa8-223">+ 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b1fa8-224">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-224">Required.</span></span> <span data-ttu-id="b1fa8-225">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b1fa8-226">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-226">Required.</span></span> <span data-ttu-id="b1fa8-227">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-228">執行指數 (^) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-229"><paramref name="obj1" /> 自乘至 <paramref name="obj2" /> 之乘冪的結果。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-230">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="b1fa8-231">^ 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-232">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-232">Required.</span></span> <span data-ttu-id="b1fa8-233">整數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-233">Integral numeric expression.</span></span> <span data-ttu-id="b1fa8-234">要移位的位元模式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="b1fa8-235">資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b1fa8-236">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-236">Required.</span></span> <span data-ttu-id="b1fa8-237">數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-237">Numeric expression.</span></span> <span data-ttu-id="b1fa8-238">位元模式移位的位元數。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b1fa8-239">資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b1fa8-240">執行算術左移位 (&lt;&lt;) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-241">整數值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-241">An integral numeric value.</span></span> <span data-ttu-id="b1fa8-242">位元模式移位的結果。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b1fa8-243">資料型別與 <paramref name="o1" /> 的型別相同。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-244">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="b1fa8-245">&lt;&lt; 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-246">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-246">Required.</span></span> <span data-ttu-id="b1fa8-247">整數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-247">Integral numeric expression.</span></span> <span data-ttu-id="b1fa8-248">要移位的位元模式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="b1fa8-249">資料型別必須是整數類資料型別 (Integral Type) (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" /> 或 <see langword="ULong" />)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="b1fa8-250">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-250">Required.</span></span> <span data-ttu-id="b1fa8-251">數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-251">Numeric expression.</span></span> <span data-ttu-id="b1fa8-252">位元模式移位的位元數。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="b1fa8-253">資料型別必須是 <see langword="Integer" /> 或擴展至 <see langword="Integer" />。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="b1fa8-254">執行算術右移位 (&gt;&gt;) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-255">整數值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-255">An integral numeric value.</span></span> <span data-ttu-id="b1fa8-256">位元模式移位的結果。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="b1fa8-257">資料型別與 <paramref name="o1" /> 的型別相同。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-258">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="b1fa8-259">&gt;&gt; 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="b1fa8-260">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-260">Required.</span></span> <span data-ttu-id="b1fa8-261">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="b1fa8-262">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-262">Required.</span></span> <span data-ttu-id="b1fa8-263">任何運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-264">執行字串串連 (&amp;) 作業。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-265">表示 <paramref name="vLeft" /> 和 <paramref name="vRight" /> 串連的字串。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-266">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="b1fa8-267">&amp; 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="b1fa8-268">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-268">Required.</span></span> <span data-ttu-id="b1fa8-269">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="b1fa8-270">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-270">Required.</span></span> <span data-ttu-id="b1fa8-271">任何數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-272">執行減法 (-) 運算。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-273"><paramref name="o1" /> 與 <paramref name="o2" /> 之間的差數。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-274">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="b1fa8-275">- 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="b1fa8-276">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-276">Required.</span></span> <span data-ttu-id="b1fa8-277">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="b1fa8-278">必要項。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-278">Required.</span></span> <span data-ttu-id="b1fa8-279">任何 <see langword="Boolean" /> 或數值運算式。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="b1fa8-280">執行 <see langword="Xor" /> 比較。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="b1fa8-281"><see langword="Boolean" /> 或數值。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="b1fa8-282">如果是 <see langword="Boolean" /> 比較，傳回值為兩個 <see langword="Boolean" /> 值的邏輯互斥 (獨佔邏輯分離)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="b1fa8-283">如果是位元 (數值) 運算，傳回值為數值，表示兩個數值位元模式的位元互斥 (獨佔位元分離)。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="b1fa8-284">如需詳細資訊，請參閱 <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 運算子</see>。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1fa8-285">這個類別支援 Visual Basic 編譯器，並不是直接從您的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="b1fa8-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="b1fa8-286">Xor 運算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="b1fa8-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>