<Type Name="WSDualHttpBindingElement" FullName="System.ServiceModel.Configuration.WSDualHttpBindingElement">
  <TypeSignature Language="C#" Value="public class WSDualHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBindingElement extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBindingElement&#xA;Inherits StandardBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBindingElement : System::ServiceModel::Configuration::StandardBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2b28f-101">表示安全且互通之繫結的組態項目，且這個繫結適用於雙工服務合約或透過 SOAP 媒介的通訊。</span><span class="sxs-lookup"><span data-stu-id="2b28f-101">Represents the configuration element for a secure and interoperable binding that is suitable for duplex service contracts or communication through SOAP intermediaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-102">wsDualHttpBinding 是安全、可靠且互通的繫結，適用於雙工服務合約。</span><span class="sxs-lookup"><span data-stu-id="2b28f-102">The wsDualHttpBinding is a secure, reliable, interoperable binding suitable for duplex service contracts.</span></span> <span data-ttu-id="2b28f-103">根據預設，它在產生執行階段堆疊時會搭配 WS-ReliableMessaging (可靠性)、WS-Security (安全性和驗證)、HTTP (訊息傳遞) 以及 Text/XML (訊息編碼)。</span><span class="sxs-lookup"><span data-stu-id="2b28f-103">By default, it generates a run-time stack with WS-ReliableMessaging for reliability, WS-Security for message security and authentication, HTTP for message delivery, and a Text/XML message encoding.</span></span>  
  
 <span data-ttu-id="2b28f-104">此繫結需要用戶端具備公用 URI。</span><span class="sxs-lookup"><span data-stu-id="2b28f-104">This binding requires that the client has a public URI.</span></span> <span data-ttu-id="2b28f-105">透過一個或多個 SOAP 媒介，它就可以用來進行可靠的通訊。</span><span class="sxs-lookup"><span data-stu-id="2b28f-105">It can be used to communicate reliably through one or more SOAP intermediaries.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.WSDualHttpBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b28f-106">初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2b28f-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b28f-107">初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2b28f-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBindingElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBindingElement(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b28f-108">繫結的組態名稱。</span><span class="sxs-lookup"><span data-stu-id="2b28f-108">The configuration name of the binding.</span></span> <span data-ttu-id="2b28f-109">這個值應該是唯一的，因為它會當做繫結的識別使用。</span><span class="sxs-lookup"><span data-stu-id="2b28f-109">This value should be unique because it is used as identification for the binding.</span></span></param>
        <summary><span data-ttu-id="2b28f-110">使用指定的名稱，初始化 <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2b28f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.WSDualHttpBindingElement" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="protected override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-111">取得這個繫結項目的型別。</span><span class="sxs-lookup"><span data-stu-id="2b28f-111">Gets the type of this binding element.</span></span></summary>
        <value><span data-ttu-id="2b28f-112">這個繫結項目的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-112">The <see cref="T:System.Type" /> of this binding element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("bypassProxyOnLocal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-113">取得或設定布林值，這個值會指定近端網址是否略過 Proxy 伺服器。</span><span class="sxs-lookup"><span data-stu-id="2b28f-113">Gets or sets a boolean value that specifies whether to bypass the proxy server for local addresses.</span></span></summary>
        <value>
          <span data-ttu-id="2b28f-114">如果近端網址略過 Proxy 伺服器，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-114"><see langword="true" /> if the proxy server is bypassed for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b28f-115">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-115">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("clientBaseAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-116">取得或設定 URI，這個 URI 會指定用戶端在上面接聽以接收來自服務之回應訊息的基底位址 (Base Address)。</span><span class="sxs-lookup"><span data-stu-id="2b28f-116">Gets or sets a URI that specifies the base address the client listens to for response messages from the service.</span></span></summary>
        <value><span data-ttu-id="2b28f-117">URI，指定用戶端在上面接聽以接收來自服務之回應訊息的基底位址。</span><span class="sxs-lookup"><span data-stu-id="2b28f-117">A URI that specifies the base address that the client listens to for response messages from the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-118">如果這個屬性具有值，便會使用這個位址 (再加上每個通道的 GUID) 來接聽。</span><span class="sxs-lookup"><span data-stu-id="2b28f-118">If this property has a value, this address (plus a GUID for each channel) is used for listening.</span></span> <span data-ttu-id="2b28f-119">否則，便會以傳輸特定的方式來產生用戶端基底位址。</span><span class="sxs-lookup"><span data-stu-id="2b28f-119">Otherwise, the client base address is generated in a transport-specific manner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hostNameComparisonMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-120">取得或設定用於剖析 URI 的 HTTP 主機名稱比較模式。</span><span class="sxs-lookup"><span data-stu-id="2b28f-120">Gets or sets the HTTP hostname comparison mode used to parse URIs.</span></span></summary>
        <value><span data-ttu-id="2b28f-121">有效的 <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 值，指定在比較 URI 時是否會使用主機名稱來存取服務。</span><span class="sxs-lookup"><span data-stu-id="2b28f-121">A valid <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that specifies whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="2b28f-122">預設值為 <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />，表示比對時忽略主機名稱。</span><span class="sxs-lookup"><span data-stu-id="2b28f-122">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="2b28f-123">繫結項目的集合。</span><span class="sxs-lookup"><span data-stu-id="2b28f-123">A collection of binding elements.</span></span></param>
        <summary><span data-ttu-id="2b28f-124">使用指定之繫結集合的內容，初始化此繫結組態區段。</span><span class="sxs-lookup"><span data-stu-id="2b28f-124">Initializes this binding configuration section with the content of the specified binding collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferPoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-125">取得或設定可配置給訊息緩衝區管理員的最大記憶體量 (以位元組為單位)，這個訊息緩衝區管理員會接收以此繫結所設定端點上的訊息。</span><span class="sxs-lookup"><span data-stu-id="2b28f-125">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the message buffer manager, which receives messages at the endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-126">使用此繫結設定之端點所使用緩衝區集區的大小上限，單位為位元組。</span><span class="sxs-lookup"><span data-stu-id="2b28f-126">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="2b28f-127">預設值為 524288 位元組。</span><span class="sxs-lookup"><span data-stu-id="2b28f-127">The default value is 524288 bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-128">取得或設定可在使用此繫結所設定之通道上接收的訊息大小上限 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="2b28f-128">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-129">由此繫結處理之訊息的大小上限，單位為位元組。</span><span class="sxs-lookup"><span data-stu-id="2b28f-129">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="2b28f-130">預設值為 65,536 位元組。</span><span class="sxs-lookup"><span data-stu-id="2b28f-130">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-131">可讓服務使用 <xref:System.ServiceModel.WSDualHttpBinding> 類別從網路傳輸所接收訊息的大小，會受限於配置給各訊息的記憶體量。</span><span class="sxs-lookup"><span data-stu-id="2b28f-131">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> class is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="2b28f-132">這項關於訊息大小的限制是為了防止受到 DoS 攻擊。</span><span class="sxs-lookup"><span data-stu-id="2b28f-132">This bound on message size is intended to limit exposure to DoS-style attacks.</span></span>  
  
 <span data-ttu-id="2b28f-133">請注意，<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> 和 <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize%2A> 的設定是本機行為設定。</span><span class="sxs-lookup"><span data-stu-id="2b28f-133">Note that the settings for <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize%2A>, are local behavioral settings.</span></span> <span data-ttu-id="2b28f-134">表示這些設定不會以中繼資料的方式傳送到其他端點。</span><span class="sxs-lookup"><span data-stu-id="2b28f-134">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="2b28f-135">當您從中繼資料產生服務的 Proxy 時，如果訊息大小上限為 2GB，則此 Proxy 的預設值仍為 64K，</span><span class="sxs-lookup"><span data-stu-id="2b28f-135">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="2b28f-136">讓訊息和訊息緩衝區大小適當限制的控制落在本機系統管理員的管轄範圍內。</span><span class="sxs-lookup"><span data-stu-id="2b28f-136">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("messageEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-137">取得或設定用來對訊息進行編碼的編碼器。</span><span class="sxs-lookup"><span data-stu-id="2b28f-137">Gets or sets the encoder used to encode the message.</span></span></summary>
        <value><span data-ttu-id="2b28f-138"><see cref="T:System.ServiceModel.WSMessageEncoding" /> 值，指定用來對訊息進行編碼的編碼器。</span><span class="sxs-lookup"><span data-stu-id="2b28f-138">A <see cref="T:System.ServiceModel.WSMessageEncoding" /> value that specifies the encoder used to encode the message.</span></span> <span data-ttu-id="2b28f-139">預設值是 <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-139">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApplyConfiguration(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="2b28f-140">要套用的繫結。</span><span class="sxs-lookup"><span data-stu-id="2b28f-140">The binding to be applied.</span></span></param>
        <summary><span data-ttu-id="2b28f-141">在指定之繫結集合的內容套用至這個繫結組態項目時呼叫。</span><span class="sxs-lookup"><span data-stu-id="2b28f-141">Called when the content of a specified binding collection is applied to this binding configuration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-142">取得 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件的集合或這個組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="2b28f-142">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="2b28f-143"><see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件或這個組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="2b28f-143">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("proxyAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-144">取得或設定指定 HTTP Proxy 位址的 URI。</span><span class="sxs-lookup"><span data-stu-id="2b28f-144">Gets or set a URI that specifies the address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="2b28f-145">指定 HTTP Proxy 位址的 URI。</span><span class="sxs-lookup"><span data-stu-id="2b28f-145">A URI that specifies the address of the HTTP proxy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-146">如果 <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> 屬性設為 `true`，這個參數的值將被略過。</span><span class="sxs-lookup"><span data-stu-id="2b28f-146">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> property is set to `true`, the value of this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ ReaderQuotas { System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("readerQuotas")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-147">取得或設定 SOAP 訊息複雜性的條件約束，而這些條件約束可由以此繫結所設定的端點處理。</span><span class="sxs-lookup"><span data-stu-id="2b28f-147">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-148">指定複雜性條件約束的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-148">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-149">複雜度條件約束的包含項目，包括最大項目深度，或是訊息內的最大字串內容長度。</span><span class="sxs-lookup"><span data-stu-id="2b28f-149">The complexity constraints include items such as a maximum element depth, or a maximum length for string content within the message.</span></span> <span data-ttu-id="2b28f-150">條件約束可以防止嘗試使用訊息複雜度困住端點處理資源的阻絕服務 (DOS) 攻擊類型。</span><span class="sxs-lookup"><span data-stu-id="2b28f-150">The constraints protect against a type of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReliableSession As StandardBindingReliableSessionElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::StandardBindingReliableSessionElement ^ ReliableSession { System::ServiceModel::Configuration::StandardBindingReliableSessionElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("reliableSession")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.StandardBindingReliableSessionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-151">取得組態項目，這個組態項目會指定是否已為使用此繫結設定的端點啟用可靠的工作階段。</span><span class="sxs-lookup"><span data-stu-id="2b28f-151">Gets a configuration element that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-152"><see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" />，指定是否已為使用此繫結設定的端點啟用可靠的工作階段。</span><span class="sxs-lookup"><span data-stu-id="2b28f-152">An <see cref="T:System.ServiceModel.Configuration.ReliableSessionElement" /> that specifies whether reliable sessions are enabled for the endpoint configured with this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-153">使用 wsDualHttpBinding 繫結設定的服務需要可靠的工作階段。</span><span class="sxs-lookup"><span data-stu-id="2b28f-153">A reliable session is required for services configured with wsDualHttpBinding binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.WSDualHttpSecurityElement Security { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.WSDualHttpSecurityElement Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As WSDualHttpSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::WSDualHttpSecurityElement ^ Security { System::ServiceModel::Configuration::WSDualHttpSecurityElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("security")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.WSDualHttpSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-154">取得要搭配此繫結使用的安全性類型。</span><span class="sxs-lookup"><span data-stu-id="2b28f-154">Gets the type of security to be used with this binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-155"><see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" />，指定要搭配此繫結使用的安全性設定。</span><span class="sxs-lookup"><span data-stu-id="2b28f-155">The <see cref="T:System.ServiceModel.Configuration.WSDualHttpSecurityElement" /> that specifies the security settings used with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("textEncoding", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-156">取得或設定要在繫結上發出訊息時使用的字元集編碼方式。</span><span class="sxs-lookup"><span data-stu-id="2b28f-156">Gets or sets the character set encoding to be used for emitting messages on the binding.</span></span></summary>
        <value><span data-ttu-id="2b28f-157">有效的 <see cref="T:System.Text.Encoding" /> 值，指定要在繫結上發出訊息時使用的字元集編碼方式。</span><span class="sxs-lookup"><span data-stu-id="2b28f-157">A valid <see cref="T:System.Text.Encoding" /> value that specifies the character set encoding to be used for emitting messages on the binding.</span></span> <span data-ttu-id="2b28f-158">預設值為 <see cref="T:System.Text.UTF8Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-158">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transactionFlow", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-159">取得或設定布林值，這個值會指定繫結程序是否支援流動 WS-Transactions。</span><span class="sxs-lookup"><span data-stu-id="2b28f-159">Gets or sets a boolean value that specifies whether the binding supports flowing WS-Transactions.</span></span></summary>
        <value>
          <span data-ttu-id="2b28f-160">如果繫結支援流動的 WS-Transactions，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-160"><see langword="true" /> if the binding supports flowing WS-Transactions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b28f-161">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b28f-162">預設值指定用戶端不會流動異動，且服務拒絕具有流動異動訊息標頭的訊息。</span><span class="sxs-lookup"><span data-stu-id="2b28f-162">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useDefaultWebProxy", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b28f-163">取得或設定指定是否使用系統自動設定之 HTTP Proxy 的布林值。</span><span class="sxs-lookup"><span data-stu-id="2b28f-163">Gets or sets a boolean value that specifies whether the system’s auto-configured HTTP proxy is used.</span></span></summary>
        <value>
          <span data-ttu-id="2b28f-164">如果使用系統自動設定的 HTTP Proxy，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-164"><see langword="true" /> if the system’s auto-configured HTTP proxy is used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2b28f-165">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="2b28f-165">The default is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>