<Type Name="MsmqBindingElementBase" FullName="System.ServiceModel.Configuration.MsmqBindingElementBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ebaf0f46ff0a86c6d7eeb63127581c1c35f9a39" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MsmqBindingElementBase : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingElementBase extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqBindingElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqBindingElementBase&#xA;Inherits StandardBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqBindingElementBase abstract : System::ServiceModel::Configuration::StandardBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="147a0-101">提供成員通用於 <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> 和 <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> 類別的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="147a0-101">Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-102">這個類別包含設定以訊息佇列 (亦稱為 MSMQ) 為基礎的繫結所需要的設定。</span><span class="sxs-lookup"><span data-stu-id="147a0-102">This class contains settings required to configure a binding based on Message Queuing (also known as MSMQ).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-103">初始化 <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqBindingElementBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="147a0-104">初始化 <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingElementBase (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqBindingElementBase(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="147a0-105">繫結的組態名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-105">The configuration name of the binding.</span>
          </span>
          <span data-ttu-id="147a0-106">這個值應該是唯一的，因為它會用於識別這個特定繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-106">This value should be unique because it is used to identify this specific binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="147a0-107">使用指定的名稱來初始化 <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> class using the specified name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-108">取得或設定 <see cref="T:System.Uri" />，這個項目會識別自訂的寄不出信件佇列，其中將會傳送無法傳遞的逾期訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-108">Gets or sets a <see cref="T:System.Uri" /> that identifies a custom dead-letter queue where expired messages or messages that failed to be delivered are sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-109">
            <see cref="T:System.Uri" /> 執行個體，其中包含自訂的寄不出信件佇列的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-109">A <see cref="T:System.Uri" /> instance that contains the URI of the custom dead-letter-queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-110">A*寄不出的信件佇列*是由傳送應用程式佇列管理員會儲存無法傳遞或已過期的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-110">A *dead-letter queue* is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</span></span> <span data-ttu-id="147a0-111">`CustomDeadLetterQueue` 屬性可讓您指定自訂的寄不出信件佇列，而非使用整個系統的預設寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-111">The `CustomDeadLetterQueue` property allows you to specify a custom dead-letter queue rather than using the default system-wide, dead-letter queue.</span></span>  
  
 <span data-ttu-id="147a0-112">由 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 指定的 URI 必須使用 net.msmq 配置。</span><span class="sxs-lookup"><span data-stu-id="147a0-112">The URI that is specified by <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must use the net.msmq scheme.</span></span>  
  
 <span data-ttu-id="147a0-113">如果 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> 設定為 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，則 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 必須設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="147a0-113">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="147a0-114">如果 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 不是 `null`，則 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> 必須設定為 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="147a0-114">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-115">取得或設定這個繫結的 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-115">Gets or sets the <see cref="T:System.ServiceModel.DeadLetterQueue" /> setting for this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-116">指定要使用何種寄不出信件佇列類型的 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 值 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-116">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> value that specifies which type of dead-letter queue to use, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-117">*寄不出的信件佇列*是由傳送應用程式佇列管理員會儲存無法傳遞或已過期的訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-117">The *dead-letter queue* is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</span></span> <span data-ttu-id="147a0-118">訊息可能會因為下列任何一個原因而無法到達接收應用程式：</span><span class="sxs-lookup"><span data-stu-id="147a0-118">The reasons a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="147a0-119">交易式訊息已傳送至非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-119">A transactional message is sent to a non-transactional queue.</span></span>  
  
-   <span data-ttu-id="147a0-120">非交易式訊息已傳送至交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-120">A non-transactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="147a0-121">未經驗證的訊息已傳送至僅接受經過驗證之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-121">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="147a0-122">未經加密的訊息已傳送至僅接受經過加密之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-122">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="147a0-123">訊息在傳送給接收者之前就已逾期。</span><span class="sxs-lookup"><span data-stu-id="147a0-123">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="147a0-124">已超出目標電腦的訊息儲存配額或是目的佇列的儲存配額，或者是當訊息送達時，目標電腦上沒有可用的儲存空間。</span><span class="sxs-lookup"><span data-stu-id="147a0-124">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="147a0-125">寄件者沒有[存取權限](http://go.microsoft.com/fwlink/?LinkID=96167)才能將訊息放在目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-125">The sender does not have the [access rights](http://go.microsoft.com/fwlink/?LinkID=96167) required to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="147a0-126">附加到訊息的數位簽章無效。</span><span class="sxs-lookup"><span data-stu-id="147a0-126">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="147a0-127">加密的訊息無法由目的佇列管理員進行解密。</span><span class="sxs-lookup"><span data-stu-id="147a0-127">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="147a0-128">擷取訊息前，會清除或刪除目的佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-128">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-129">取得或設定值，這個值會指定使用這個繫結傳送的訊息是否具有永久性或變動性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-129">Gets or sets a value that specifies whether messages sent with this binding are durable or volatile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-130">如果這個繫結處理的訊息是永久性的，則為 <see langword="true" />，如果為變動性的則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-130">
              <see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span>
          </span>
          <span data-ttu-id="147a0-131">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-131">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-132">如果這個屬性設定為 `true`，訊息會是永久性的，否則會是變動性的。</span><span class="sxs-lookup"><span data-stu-id="147a0-132">If this property is set to `true`, messages are durable; otherwise, messages are volatile.</span></span> <span data-ttu-id="147a0-133">如果佇列管理員毀損，永久性訊息不會遺失。</span><span class="sxs-lookup"><span data-stu-id="147a0-133">Durable messages are not lost if the queue manager crashes.</span></span> <span data-ttu-id="147a0-134">這個屬性的預設值為 `true`。</span><span class="sxs-lookup"><span data-stu-id="147a0-134">The default value for this property is `true`.</span></span> <span data-ttu-id="147a0-135">如果需要剛好一次的保證 (<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 設定為 `true`)，這個屬性必須設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="147a0-135">When exactly-once assurances are required (<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> is set to `true`), this property must be set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-136">取得或設定值，這個值會指定使用這個繫結傳送的訊息是否具有剛好一次的保證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-136">Gets or sets a value that specifies whether messages sent with this binding have exactly-once assurances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-137">如果與此繫結一起傳送的訊息有「正好一次」的保證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-137">
              <see langword="true" /> if messages sent with this binding have exactly-once assurances; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-138"><xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A>當設定為`true`，表示訊息佇列 (也稱為 MSMQ) 確保傳送的訊息會傳遞至接收的訊息佇列僅一次。</span><span class="sxs-lookup"><span data-stu-id="147a0-138"><xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (also known as MSMQ) ensures that a sent message is delivered to the receiving message queue once and only once.</span></span> <span data-ttu-id="147a0-139">如果傳遞失敗，訊息會傳送到寄不出信件佇列，取決於`DeadLetterQueue`屬性設定。</span><span class="sxs-lookup"><span data-stu-id="147a0-139">If delivery fails, the message is sent to the dead-letter queue depending on the `DeadLetterQueue` property setting.</span></span> <span data-ttu-id="147a0-140">將 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 設定為 `true` 需要交易式的佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-140">Setting <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> to `true` requires the queue to be transactional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <span data-ttu-id="147a0-141">包含要用來初始化這個繫結之設定的繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-141">A binding that contains the settings that are used to initialize this binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="147a0-142">利用所指定之繫結的內容，初始化此繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-142">Initializes this binding with the content from the specified binding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-143">取得或設定值，指出允許的訊息大小上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-143">Gets or sets a value that indicates the maximum size, in bytes, allowed for a message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-144">使用這個繫結傳送或接收的訊息的允許大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-144">The maximum allowed size for a message that is sent or received with this binding.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-145">如果傳入訊息大於 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize%2A>，便會捨棄訊息。</span><span class="sxs-lookup"><span data-stu-id="147a0-145">If an incoming message is larger than <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize%2A>, the message is dropped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-146">取得或設定嘗試傳遞訊息至接收應用程式的重試循環次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-146">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-147">在傳送訊息至有害訊息佇列之前，要嘗試的重試循環次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-147">The maximum number of retry cycles to attempt prior to transferring a message to the poison-message queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-148">A*重試循環*是指訊息從重試佇列傳送至應用程式佇列以嘗試傳遞至應用程式時。</span><span class="sxs-lookup"><span data-stu-id="147a0-148">A *retry cycle* is when a message is transferred from the retry queue to the application queue to attempt delivery to the application.</span></span> <span data-ttu-id="147a0-149">在立即重試達到 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A> 的指定次數後，就會將訊息置於重試佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-149">Messages are placed in the retry queue after failing a number of immediate retries as specified by <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A>.</span></span> <span data-ttu-id="147a0-150"><xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> 會指定重試循環次數，且不會包含最初的傳送訊息嘗試。</span><span class="sxs-lookup"><span data-stu-id="147a0-150"><xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> specifies the number of retry cycles and does not include the initial attempt to send the message.</span></span> <span data-ttu-id="147a0-151">嘗試傳遞訊息的次數上限為 (1 + MaxRetryCycles) \* (ReceiveRetryCount + 1) 次。</span><span class="sxs-lookup"><span data-stu-id="147a0-151">An attempt to deliver a message is made a maximum of (1 + MaxRetryCycles) \* (ReceiveRetryCount + 1) times.</span></span> <span data-ttu-id="147a0-152">例如，如果 ReceiveRetryCount = 0 且 MaxRetryCycles 為 1，則嘗試傳遞訊息的次數上限為 2。</span><span class="sxs-lookup"><span data-stu-id="147a0-152">For example, if ReceiveRetryCount = 0 and MaxRetryCycles is 1, there is a maximum of two attempts to deliver the message.</span></span> <span data-ttu-id="147a0-153">這個屬性可從 [!INCLUDE[wv](~/includes/wv-md.md)] 作業系統開始使用。</span><span class="sxs-lookup"><span data-stu-id="147a0-153">This property is available starting with the [!INCLUDE[wv](~/includes/wv-md.md)] operating system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApplyConfiguration(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">
          <span data-ttu-id="147a0-154">包含所套用之設定的繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-154">A binding that contains the settings that are applied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="147a0-155">當這個繫結的內容套用至指定繫結時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-155">Called when the content of this binding is applied to the specified binding.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-156">取得 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件的集合或這個組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-156">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-157">
            <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件的集合或這個繫結組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-157">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-158">取得或設定值，指出是否啟用接收在佇列內處理訊息的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-158">Gets or sets a value that indicates whether receive context for processing messages in queues is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-159">如果啟用接收在佇列內處理訊息的內容，則為 <see langword="true" />，否則為 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-159">
              <see langword="true" /> if receive context for processing messages in queues is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-160">當啟用此選項時，服務可以列為 「 尖峰 」 以開始處理它，訊息佇列上的，如果出錯而擲回例外狀況，它會保留在佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-160">When this is enabled, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</span></span> <span data-ttu-id="147a0-161">服務也可 「 鎖定 」 訊息以便再重試時間在稍後處理。</span><span class="sxs-lookup"><span data-stu-id="147a0-161">Services can also "lock" messages in order to retry processing at a later point in time.</span></span> <span data-ttu-id="147a0-162">ReceiveContext 會提供 「 完成 」 訊息一次處理，因此它可以從佇列移除的機制。</span><span class="sxs-lookup"><span data-stu-id="147a0-162">ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</span></span> <span data-ttu-id="147a0-163">訊息將不再進行讀取，並會透過網路將它重新寫入至佇列，另外，個別訊息在處理時也不會再於不同的服務執行個體間跳躍。</span><span class="sxs-lookup"><span data-stu-id="147a0-163">Messages are no longer being read and re-written to queues over the network, and individual messages aren’t bouncing across different service instances during processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-164">取得或設定列舉值，這個值會指定如何處理有害和其他不可分派的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-164">Gets or sets an enumeration value that specifies how poison and messages that cannot be dispatched are handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-165">
            <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何處理有害和不可分派的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-165">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and messages that cannot be dispatched are handled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-166">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 時，接聽程式會發生錯誤，並且會追蹤和擲回 <xref:System.ServiceModel.ProtocolException> (內含一個 <xref:System.ServiceModel.MsmqPoisonMessageException>)。</span><span class="sxs-lookup"><span data-stu-id="147a0-166">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown.</span></span> <span data-ttu-id="147a0-167">訊息會留在佇列中，並且必須由手動方法來移除。</span><span class="sxs-lookup"><span data-stu-id="147a0-167">The message is left in the queue and must be removed in a manual way.</span></span> <span data-ttu-id="147a0-168"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，後者可用於從有害訊息佇列中識別並手動移除訊息。</span><span class="sxs-lookup"><span data-stu-id="147a0-168">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the message from the poison-message queue.</span></span>  
  
 <span data-ttu-id="147a0-169">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 時，只會捨棄有問題的訊息。</span><span class="sxs-lookup"><span data-stu-id="147a0-169">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the offending message is simply dropped.</span></span>  
  
 <span data-ttu-id="147a0-170">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 時，負認可會傳送至用戶端，並從有害訊息佇列中移除訊息。</span><span class="sxs-lookup"><span data-stu-id="147a0-170">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgement is sent to the client and the message is removed from the poison-message queue.</span></span> <span data-ttu-id="147a0-171">只有在訊息佇列 (MSMQ) 4.0 上才能使用這個選項。</span><span class="sxs-lookup"><span data-stu-id="147a0-171">This option is available only on Message Queuing (MSMQ) 4.0.</span></span>  
  
 <span data-ttu-id="147a0-172">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 時，訊息會移至最後的有害訊息子佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-172">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the message is moved to the final poison-message subqueue.</span></span> <span data-ttu-id="147a0-173">這個選項只能在訊息佇列 (亦稱為 MSMQ) 4.0 上使用。</span><span class="sxs-lookup"><span data-stu-id="147a0-173">This option is available only on Message Queuing (also known as MSMQ) 4.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-174">取得或設定重試次數上限，如果將訊息從應用程式佇列傳輸到應用程式失敗，佇列管理員應立即嘗試此重試次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-174">Gets or sets the maximum number of immediate retries that the queue manager should attempt if transmission of a message from the application queue to the application fails.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-175">佇列管理員在傳送訊息至重試佇列之前，應嘗試傳送的次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-175">The maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-176">如果達到傳遞嘗試的次數上限，且應用程式未存取訊息，訊息便會傳送到重試佇列，以便日後再次傳遞。</span><span class="sxs-lookup"><span data-stu-id="147a0-176">If the maximum number of delivery attempts is reached and the message is not accessed by the application, then the message is sent to a retry queue for redelivery at a later time.</span></span> <span data-ttu-id="147a0-177">在訊息傳回傳送佇列之前的時間長度是由 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> 控制。</span><span class="sxs-lookup"><span data-stu-id="147a0-177">The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="147a0-178">如果重試循環達到 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 值，則訊息便會傳送到有害訊息佇列，或是負認可會傳回至寄件者。</span><span class="sxs-lookup"><span data-stu-id="147a0-178">If retry cycles reach the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> value, then the message is either sent to the poison-message queue, or a negative acknowledgement is sent back to the sender.</span></span>  
  
 <span data-ttu-id="147a0-179">如需詳細資訊，請參閱 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 與 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="147a0-179">For more information, see <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-180">取得或設定值，這個值會指定當嘗試傳遞無法傳遞的訊息時，在嘗試另一次重試循環之前要等待的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-180">Gets or sets a value that specifies how long to wait before attempting another retry cycle when attempting to deliver a message that could not be delivered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-181">
            <see cref="T:System.TimeSpan" />，指定開始下一輪嘗試傳遞至接收應用程式的循環前，要等候的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-181">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span>
          </span>
          <span data-ttu-id="147a0-182">預設值為 30 (分鐘)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-182">The default value is 30 (minutes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-183">單一重試循環會重複嘗試將訊息傳遞至接收應用程式 (由 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> 屬性指定)。</span><span class="sxs-lookup"><span data-stu-id="147a0-183">A single retry cycle makes repeated attempts to deliver a message to the receiving application (specified by the <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> property).</span></span> <span data-ttu-id="147a0-184">如果所有嘗試都失敗，便會將訊息放回重試佇列中。</span><span class="sxs-lookup"><span data-stu-id="147a0-184">If all attempts fail, the message is placed back in the retry queue.</span></span> <span data-ttu-id="147a0-185">這個屬性會指定訊息在傳輸至應用程式佇列以進行另一次重試循環之前，要保留在重試佇列中的時間長度。</span><span class="sxs-lookup"><span data-stu-id="147a0-185">This property specifies how long the message remains in the retry queue before it is transferred to the application queue for another retry cycle.</span></span> <span data-ttu-id="147a0-186">這個屬性可從 [!INCLUDE[wv](~/includes/wv-md.md)] (含) 以後版本的作業系統開始使用。</span><span class="sxs-lookup"><span data-stu-id="147a0-186">This property is available starting with the [!INCLUDE[wv](~/includes/wv-md.md)] or later operating systems.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-187">取得或設定指定訊息有效時間長度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-187">Gets or sets a value that specifies how long messages are valid.</span>
          </span>
          <span data-ttu-id="147a0-188">經過這個時間之後，訊息就會放在寄不出的信件佇列中 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-188">When this time has elapsed, the message is placed in a dead-letter queue (if available).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-189">指定訊息有效時間長度的 <see cref="T:System.TimeSpan" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-189">A <see cref="T:System.TimeSpan" /> value that specifies how long messages are valid.</span>
          </span>
          <span data-ttu-id="147a0-190">預設值為 24 小時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-190">The default value is 24 hours.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-191">佇列的應用程式會根據設計而以離線方式運作，所以傳送和接收應用程式可能不會同時執行。</span><span class="sxs-lookup"><span data-stu-id="147a0-191">Queued applications, by design, work in a disconnected manner, so the sending and receiving applications might not be running at the same time.</span></span> <span data-ttu-id="147a0-192">因此，由傳送應用程式傳送的訊息可能不會由接收應用程式立即處理。</span><span class="sxs-lookup"><span data-stu-id="147a0-192">Therefore, a message sent by the sending application might not be processed immediately by the receiving application.</span></span> <span data-ttu-id="147a0-193">有些訊息包含的資訊只在特定期間內有效。</span><span class="sxs-lookup"><span data-stu-id="147a0-193">Some messages contain information that is valid only for a particular period of time.</span></span> <span data-ttu-id="147a0-194">如果這個訊息沒有在該期間內傳遞，就不再包含有用的資訊且應捨棄。</span><span class="sxs-lookup"><span data-stu-id="147a0-194">If this message is not delivered within that period of time, it no longer contains useful information and should be dropped.</span></span> <span data-ttu-id="147a0-195">這個屬性可讓您指定訊息在傳遞至應用程式佇列之前要保留的時限。</span><span class="sxs-lookup"><span data-stu-id="147a0-195">This property enables you to specify a time limit for how long a message is kept prior to delivery to the application queue.</span></span> <span data-ttu-id="147a0-196">如果在將訊息傳遞至應用程式佇列之前就超過這個時間限制，而且有寄不出的信件佇列可用，則會將訊息放在其中 (由 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> 屬性判斷)。如果沒有寄不出的信件佇列可用，則會捨棄訊息。</span><span class="sxs-lookup"><span data-stu-id="147a0-196">If this time limit elapses prior to the message being delivered to the application queue, the message is placed in the dead-letter queue if one is available (determined by the <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> property); otherwise, if no dead-letter queue is available, the message is dropped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-197">取得或設定值，指出是否使用訊息佇列 (也稱為 MSMQ) 內建訊息追蹤工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-197">Gets or sets a value that indicates whether the Message Queuing (also known as MSMQ) built-in message tracing facility is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-198">如果使用訊息佇列內建訊息追蹤工具，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-198">
              <see langword="true" /> if the Message Queuing built-in message tracing facility is used; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="147a0-199">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-199">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-200">當 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A> 設定為 `true` 時，佇列通道會使用訊息佇列內建訊息追蹤工具。</span><span class="sxs-lookup"><span data-stu-id="147a0-200">When <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A> is set to `true`, the queued channel uses the Message Queuing built-in message tracing facility.</span></span> <span data-ttu-id="147a0-201">透過這項工具，每次訊息進入及離開佇列管理員時，都會傳送報告訊息至指定的報告佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-201">Through this facility, a report message is sent to a specified report queue each time a message enters and leaves a queue manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-202">取得或設定值，此值會指出是否要將此繫結處理之訊息的複本儲存在來源日誌佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-202">Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-203">如果要將此繫結處理的訊息複製到來源日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-203">
              <see langword="true" /> if messages processed by this binding are copied to the source journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="147a0-204">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-204">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="147a0-205">要記錄已離開來源電腦輸出佇列之訊息的佇列應用程式可以將訊息複製到日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="147a0-205">Queued applications that keep a record of messages that have left the source computer's outgoing queue can have the messages copied to a journal queue.</span></span> <span data-ttu-id="147a0-206">訊息一離開輸出佇列之後，而且收到目的端電腦已收到訊息的認可，訊息的複本就會保留在傳送端電腦的系統日誌佇列中。</span><span class="sxs-lookup"><span data-stu-id="147a0-206">After a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="147a0-207">取得或設定值，這個值會指定用於佇列通道時的連線逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-207">Gets or sets a value that specifies a connection time-out when used with queued channels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="147a0-208">與佇列通道一起使用時的連接逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="147a0-208">A connection time-out when used with queued channels.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="147a0-209">如果訊息的 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> 過期，任何可用於處理訊息的交易都將中止，而且如果過期是在交易期間發生，工作流程執行個體也會一併中止。</span><span class="sxs-lookup"><span data-stu-id="147a0-209">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>