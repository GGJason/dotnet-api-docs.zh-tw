<Type Name="ComContractElement" FullName="System.ServiceModel.Configuration.ComContractElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c863ed589ead5dcc892f7d63bea806859356dfaf" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55322978" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComContractElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComContractElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.ComContractElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComContractElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComContractElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type ComContractElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="016c5-101">指定 COM+ 整合服務合約。</span><span class="sxs-lookup"><span data-stu-id="016c5-101">Specifies a COM+ integration service contract.</span></span> <span data-ttu-id="016c5-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="016c5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="016c5-103">COM + 整合服務合約是目前僅限於 「http://tempuri.org"命名空間和合約名稱衍生自支援的 COM 介面。</span><span class="sxs-lookup"><span data-stu-id="016c5-103">COM+ integration service contracts are currently restricted to the "http://tempuri.org" namespace, and the contract name is derived from the supporting COM interface.</span></span> <span data-ttu-id="016c5-104">然而，您可以使用組態檔中的 `comContracts` 區段來指定替代項目。</span><span class="sxs-lookup"><span data-stu-id="016c5-104">You can, however, specify alternatives by using the `comContracts` section in the configuration file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="016c5-105">您可以使用下列組態來指定要包含的命名空間、合約名稱和使用者定義型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-105">You can use the following configuration to specify the namespace, contract name, and user defined types to be included.</span></span> <span data-ttu-id="016c5-106">您也可以指定服務合約的其他設定</span><span class="sxs-lookup"><span data-stu-id="016c5-106">You can also specify other settings for a service contract</span></span>  
  
 [!code-xml[S_UEComContractElement#100](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app.config#100)]   
  
 <span data-ttu-id="016c5-107">當服務初始化時，指定的命名空間和合約名稱就會套用至所產生的服務描述。</span><span class="sxs-lookup"><span data-stu-id="016c5-107">When the service is initialized, the specified namespaces and contract names are applied to the generated service descriptions.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/42e74148-223d-4888-a8ed-1d928527eb09"><span data-ttu-id="016c5-108">ComContracts 組態中</span><span class="sxs-lookup"><span data-stu-id="016c5-108">ComContracts in Configuration</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="016c5-109">初始化 <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="016c5-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComContractElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ComContractElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComContractElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="016c5-110">初始化 <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="016c5-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComContractElement (string contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComContractElement(System::String ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Configuration.ComContractElement : string -&gt; System.ServiceModel.Configuration.ComContractElement" Usage="new System.ServiceModel.Configuration.ComContractElement contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="016c5-111">包含合約類型的字串。</span><span class="sxs-lookup"><span data-stu-id="016c5-111">A string that contains the type of contract.</span></span></param>
        <summary><span data-ttu-id="016c5-112">初始化 <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="016c5-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.ComContractElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public string Contract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Contract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Contract" />
      <MemberSignature Language="VB.NET" Value="Public Property Contract As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Contract { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Contract : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("contract", Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-113">取得或設定合約類型。</span><span class="sxs-lookup"><span data-stu-id="016c5-113">Gets or sets the contract type.</span></span></summary>
        <value><span data-ttu-id="016c5-114">合約類型。</span><span class="sxs-lookup"><span data-stu-id="016c5-114">The contract type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExposedMethods">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComMethodElementCollection ExposedMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComMethodElementCollection ExposedMethods" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExposedMethods As ComMethodElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComMethodElementCollection ^ ExposedMethods { System::ServiceModel::Configuration::ComMethodElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExposedMethods : System.ServiceModel.Configuration.ComMethodElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.ExposedMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exposedMethods", Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComMethodElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-115">取得 COM+ 方法的集合，這些方法會在 COM+ 元件上的介面公開為 Web 服務時公開。</span><span class="sxs-lookup"><span data-stu-id="016c5-115">Gets a collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</span></span></summary>
        <value><span data-ttu-id="016c5-116">COM+ 方法的集合，這些方法會在 COM+ 元件上的介面公開為 Web 服務時公開。</span><span class="sxs-lookup"><span data-stu-id="016c5-116">The collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="016c5-117">COM+ 整合設定工具 (ComSvcConfig.exe) 可用來從 COM 介面加入特定的方法，使這些方法可以出現在所產生的服務合約上。</span><span class="sxs-lookup"><span data-stu-id="016c5-117">The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.</span></span>  
  
 <span data-ttu-id="016c5-118">例如，您可以使用下列命令，從 `IFinances` 元件上的 `ItemOrders.Financial` COM 介面將三個具名方法新增至所產生的服務合約中。</span><span class="sxs-lookup"><span data-stu-id="016c5-118">For example, you can use the following command to add the three named methods from the `IFinances` COM interface on the `ItemOrders.Financial` component, to the generated service contract.</span></span>  
  
```  
ComSvcConfig.exe /i /application:OnlineStore /contract:ItemOrders.Financial,IFinances.{TransferFunds,AddFunds,RemoveFunds} /hosting:complus  
```  
  
 <span data-ttu-id="016c5-119">當您執行 ComSvcConfig.exe 工具時，它會產生下列將上述方法列為 `exposedMethod` 項目的服務合約。</span><span class="sxs-lookup"><span data-stu-id="016c5-119">When you run the ComSvcConfig.exe tool, it then generates the following service contract listing the previously mentioned methods as `exposedMethod` elements.</span></span>  
  
 [!code-xml[S_UEComContractElement#101](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app2.config#101)]   
  
 <span data-ttu-id="016c5-120">在服務初始化階段，執行階段會藉由反映並只加入包含在 `exposedMethod` 項目清單中的方法，嘗試產生服務合約。</span><span class="sxs-lookup"><span data-stu-id="016c5-120">At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of `exposedMethod` elements.</span></span> <span data-ttu-id="016c5-121">這時會針對每個未包含在服務合約中的介面方法加以追蹤。</span><span class="sxs-lookup"><span data-stu-id="016c5-121">A trace is produced for every interface method that is not included on the service contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("name", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-122">取得或設定合約名稱。</span><span class="sxs-lookup"><span data-stu-id="016c5-122">Gets or sets the contract name.</span></span></summary>
        <value><span data-ttu-id="016c5-123">合約名稱。</span><span class="sxs-lookup"><span data-stu-id="016c5-123">The contract name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("namespace", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.None)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.StringValidator(MinLength=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-124">取得或設定合約命名空間。</span><span class="sxs-lookup"><span data-stu-id="016c5-124">Gets or sets the contract namespace.</span></span></summary>
        <value><span data-ttu-id="016c5-125">合約命名空間。</span><span class="sxs-lookup"><span data-stu-id="016c5-125">The contract namespace.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableTypes">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComPersistableTypeElementCollection PersistableTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComPersistableTypeElementCollection PersistableTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistableTypes As ComPersistableTypeElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComPersistableTypeElementCollection ^ PersistableTypes { System::ServiceModel::Configuration::ComPersistableTypeElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistableTypes : System.ServiceModel.Configuration.ComPersistableTypeElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.PersistableTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("persistableTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComPersistableTypeElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-126">取得所有永久性類型。</span><span class="sxs-lookup"><span data-stu-id="016c5-126">Gets all the persistable types.</span></span></summary>
        <value><span data-ttu-id="016c5-127">永久性型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-127">The persistable types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.ComContractElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSession">
      <MemberSignature Language="C#" Value="public bool RequiresSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession" />
      <MemberSignature Language="VB.NET" Value="Public Property RequiresSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresSession { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSession : bool with get, set" Usage="System.ServiceModel.Configuration.ComContractElement.RequiresSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requiresSession", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-128">取得或設定指定合約是否只能用在工作階段繫結上的布林值 (Boolean)。</span><span class="sxs-lookup"><span data-stu-id="016c5-128">Gets or sets a Boolean value that specifies whether the contract can only be used on sessionful bindings.</span></span></summary>
        <value><span data-ttu-id="016c5-129">如果合約只能用在工作階段繫結上，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="016c5-129"><see langword="true" /> if the contract can only be used on sessionful bindings; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="016c5-130">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="016c5-130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="016c5-131">當服務初始化時，整合執行階段會確保這個設定與要使用的繫結型別是一致的。</span><span class="sxs-lookup"><span data-stu-id="016c5-131">When the service is initialized, the integration runtime ensures that this setting is consistent with the type of binding to be used.</span></span> <span data-ttu-id="016c5-132">如果合約的一或多個繫結有衝突，便會產生例外狀況 (Exception)。</span><span class="sxs-lookup"><span data-stu-id="016c5-132">An exception is generated if one or more of the bindings for the contract are in conflict.</span></span> <span data-ttu-id="016c5-133">如果這個屬性是 `false`，此時正在使用單向通道，以及有存在任何 [out] 參數，也會產生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="016c5-133">If this property is `false`, a one-way channel is in use and there are any [out] parameters, an exception is also generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserDefinedTypes">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.ComUdtElementCollection UserDefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.ComUdtElementCollection UserDefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserDefinedTypes As ComUdtElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::ComUdtElementCollection ^ UserDefinedTypes { System::ServiceModel::Configuration::ComUdtElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserDefinedTypes : System.ServiceModel.Configuration.ComUdtElementCollection" Usage="System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("userDefinedTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.ComUdtElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="016c5-134">取得要包含在服務合約中之使用者定義型別 (UDT) 的集合。</span><span class="sxs-lookup"><span data-stu-id="016c5-134">Gets a collection of User Defined Types (UDT) that is to be included in the service contract.</span></span> <span data-ttu-id="016c5-135">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="016c5-135">This class cannot be inherited.</span></span></summary>
        <value><span data-ttu-id="016c5-136">使用者定義型別 (UDT) 的集合。</span><span class="sxs-lookup"><span data-stu-id="016c5-136">The collection of User Defined Types (UDT).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="016c5-137">COM+ 整合執行階段會藉由檢查型別程式庫來建立服務。</span><span class="sxs-lookup"><span data-stu-id="016c5-137">The COM+ integration runtime creates services by inspecting the type library.</span></span> <span data-ttu-id="016c5-138">當 COM+ 元件包含傳遞 VARIANT 的方法時，系統便無法在執行階段之前判斷要傳遞的實際型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-138">When a COM+ component contains methods that pass a VARIANT, the system cannot determine the actual types to be passed prior to runtime.</span></span> <span data-ttu-id="016c5-139">因此，嘗試在 VARIANT 內傳遞使用者定義型別 (UDT) 會因為該型別不是序列化的已知型別而失敗。</span><span class="sxs-lookup"><span data-stu-id="016c5-139">Therefore, when you attempt to pass a User Defined Type (UDT) within a VARIANT, it fails because it is not a known type for serialization.</span></span>  
  
 <span data-ttu-id="016c5-140">如果要避免這個問題，您可以將這些 UDT 新增至組態檔中，以便包含它們做為適當服務合約中的已知型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-140">To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.</span></span> <span data-ttu-id="016c5-141">如果要這樣做，您必須唯一識別這些 UDT 和合約，也就是使用其原始的 COM 介面。</span><span class="sxs-lookup"><span data-stu-id="016c5-141">In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="016c5-142">下列範例將示範如何將兩個特定的 UDT 新增至組態檔的 <`userDefinedTypes`> 區段，以達成這個目的。</span><span class="sxs-lookup"><span data-stu-id="016c5-142">The following example demonstrates adding two specific UDTs to the <`userDefinedTypes`> section of the configuration file for this purpose.</span></span>  
  
 [!code-xml[S_UEComContractElement#102](~/samples/snippets/csharp/VS_Snippets_CFX/s_uecomcontractelement/common/app3.config#102)]   
  
 <span data-ttu-id="016c5-143">屬性 <`userDefinedType`> 項目定義，如下所示：</span><span class="sxs-lookup"><span data-stu-id="016c5-143">The attributes of the <`userDefinedType`> element are defined as follows:</span></span>  
  
-   <span data-ttu-id="016c5-144">`typeName`：選擇性屬性，提供易閱讀的型別名稱。</span><span class="sxs-lookup"><span data-stu-id="016c5-144">`typeName`: An optional attribute that provides the readable type name.</span></span> <span data-ttu-id="016c5-145">雖然這不是供執行階段使用，但是可幫助讀者分辨型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-145">This is not used by the runtime but helps a reader to distinguish the types.</span></span>  
  
-   <span data-ttu-id="016c5-146">`typeLibID`：GUID 字串，指定定義此型別的已註冊型別程式庫。</span><span class="sxs-lookup"><span data-stu-id="016c5-146">`typeLibID`: A GUID string that specifies the registered type library that defines the type.</span></span>  
  
-   <span data-ttu-id="016c5-147">`typeLibVersion`：字串，指定定義此型別的型別程式庫版本。</span><span class="sxs-lookup"><span data-stu-id="016c5-147">`typeLibVersion`: A string that specifies the type library version that defines the type.</span></span>  
  
-   <span data-ttu-id="016c5-148">`typeDefID`：GUID 字串，指定已註冊型別程式庫內的特定 UDT 型別。</span><span class="sxs-lookup"><span data-stu-id="016c5-148">`typeDefID`: A GUID string that specifies the specific UDT type within the registered type library.</span></span>  
  
 <span data-ttu-id="016c5-149">當初始化服務時，整合執行階段會查詢指定的型別，並將它們加入做為指定合約的已知型別集合。</span><span class="sxs-lookup"><span data-stu-id="016c5-149">When the service is initialized, the integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>