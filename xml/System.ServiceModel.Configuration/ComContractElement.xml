<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComContractElement.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51ccc0a3a59cc97bc42a1b56428a2ab7ce41b1030.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ccc0a3a59cc97bc42a1b56428a2ab7ce41b1030</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>Specifies a COM+ integration service contract.</source>
          <target state="translated">指定 COM+ 整合服務合約。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>COM+ integration service contracts are currently restricted to the "<ph id="ph1">http://tempuri.org</ph>" namespace, and the contract name is derived from the supporting COM interface.</source>
          <target state="translated">COM + 整合服務合約會目前限制為 「<ph id="ph1">http://tempuri.org</ph>"命名空間和合約名稱衍生自支援的 COM 介面。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can, however, specify alternatives by using the <ph id="ph1">`comContracts`</ph> section in the configuration file.</source>
          <target state="translated">然而，您可以使用組態檔中的 <ph id="ph1">`comContracts`</ph> 區段來指定替代項目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can use the following configuration to specify the namespace, contract name, and user defined types to be included.</source>
          <target state="translated">您可以使用下列組態來指定要包含的命名空間、合約名稱和使用者定義型別。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>You can also specify other settings for a service contract</source>
          <target state="translated">您也可以指定服務合約的其他設定</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>When the service is initialized, the specified namespaces and contract names are applied to the generated service descriptions.</source>
          <target state="translated">當服務初始化時，指定的命名空間和合約名稱就會套用至所產生的服務描述。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Configuration.ComContractElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
          <source>A string that contains the type of contract.</source>
          <target state="translated">包含合約類型的字串。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Configuration.ComContractElement.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Configuration.ComContractElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Contract">
          <source>Gets or sets the contract type.</source>
          <target state="translated">取得或設定合約類型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Contract">
          <source>The contract type.</source>
          <target state="translated">合約類型。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>Gets a collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</source>
          <target state="translated">取得 COM+ 方法的集合，這些方法會在 COM+ 元件上的介面公開為 Web 服務時公開。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>The collection of COM+ methods that are exposed when the interface on a COM+ component is exposed as a Web service.</source>
          <target state="translated">COM+ 方法的集合，這些方法會在 COM+ 元件上的介面公開為 Web 服務時公開。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>The COM+ integration configuration tool (ComSvcConfig.exe) can be used to add specific methods from a COM interface to appear on the generated service contract.</source>
          <target state="translated">COM+ 整合設定工具 (ComSvcConfig.exe) 可用來從 COM 介面加入特定的方法，使這些方法可以出現在所產生的服務合約上。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>For example, you can use the following command to add the three named methods from the <ph id="ph1">`IFinances`</ph> COM interface on the <ph id="ph2">`ItemOrders.Financial`</ph> component, to the generated service contract.</source>
          <target state="translated">例如，您可以使用下列命令，從 <ph id="ph1">`IFinances`</ph> 元件上的 <ph id="ph2">`ItemOrders.Financial`</ph> COM 介面將三個具名方法新增至所產生的服務合約中。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>When you run the ComSvcConfig.exe tool, it then generates the following service contract listing the previously mentioned methods as <ph id="ph1">`exposedMethod`</ph> elements.</source>
          <target state="translated">當您執行 ComSvcConfig.exe 工具時，它會產生下列將上述方法列為 <ph id="ph1">`exposedMethod`</ph> 項目的服務合約。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>At service initialization time, the runtime attempts to generate a service contract by reflecting over and adding only the methods included in the list of <ph id="ph1">`exposedMethod`</ph> elements.</source>
          <target state="translated">在服務初始化階段，執行階段會藉由反映並只加入包含在 <ph id="ph1">`exposedMethod`</ph> 項目清單中的方法，嘗試產生服務合約。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.ExposedMethods">
          <source>A trace is produced for every interface method that is not included on the service contract.</source>
          <target state="translated">這時會針對每個未包含在服務合約中的介面方法加以追蹤。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Name">
          <source>Gets or sets the contract name.</source>
          <target state="translated">取得或設定合約名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Name">
          <source>The contract name.</source>
          <target state="translated">合約名稱。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
          <source>Gets or sets the contract namespace.</source>
          <target state="translated">取得或設定合約命名空間。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.Namespace">
          <source>The contract namespace.</source>
          <target state="translated">合約命名空間。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
          <source>Gets all the persistable types.</source>
          <target state="translated">取得所有永久性類型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.PersistableTypes">
          <source>The persistable types.</source>
          <target state="translated">永久性型別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>Gets or sets a Boolean value that specifies whether the contract can only be used on sessionful bindings.</source>
          <target state="translated">取得或設定指定合約是否只能用在工作階段繫結上的布林值 (Boolean)。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the contract can only be used on sessionful bindings; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果合約只能用在工作階段繫結上，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>When the service is initialized, the integration runtime ensures that this setting is consistent with the type of binding to be used.</source>
          <target state="translated">當服務初始化時，整合執行階段會確保這個設定與要使用的繫結型別是一致的。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>An exception is generated if one or more of the bindings for the contract are in conflict.</source>
          <target state="translated">如果合約的一或多個繫結有衝突，便會產生例外狀況 (Exception)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.RequiresSession">
          <source>If this property is <ph id="ph1">`false`</ph>, a one-way channel is in use and there are any [out] parameters, an exception is also generated.</source>
          <target state="translated">如果這個屬性是 <ph id="ph1">`false`</ph>，此時正在使用單向通道，以及有存在任何 [out] 參數，也會產生例外狀況。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>Gets a collection of User Defined Types (UDT) that is to be included in the service contract.</source>
          <target state="translated">取得要包含在服務合約中之使用者定義型別 (UDT) 的集合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The collection of User Defined Types (UDT).</source>
          <target state="translated">使用者定義型別 (UDT) 的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The COM+ integration runtime creates services by inspecting the type library.</source>
          <target state="translated">COM+ 整合執行階段會藉由檢查型別程式庫來建立服務。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>When a COM+ component contains methods that pass a VARIANT, the system cannot determine the actual types to be passed prior to runtime.</source>
          <target state="translated">當 COM+ 元件包含傳遞 VARIANT 的方法時，系統便無法在執行階段之前判斷要傳遞的實際型別。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>Therefore, when you attempt to pass a User Defined Type (UDT) within a VARIANT, it fails because it is not a known type for serialization.</source>
          <target state="translated">因此，嘗試在 VARIANT 內傳遞使用者定義型別 (UDT) 會因為該型別不是序列化的已知型別而失敗。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>To circumvent this problem, you can add the UDTs to the configuration file so that they can be included as known types on the appropriate service contract.</source>
          <target state="translated">如果要避免這個問題，您可以將這些 UDT 新增至組態檔中，以便包含它們做為適當服務合約中的已知型別。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>In order to do so, you have to uniquely identify the UDT and the contract(s), that is, the original COM interface(s) that uses it.</source>
          <target state="translated">如果要這樣做，您必須唯一識別這些 UDT 和合約，也就是使用其原始的 COM 介面。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The following example demonstrates adding two specific UDTs to the &lt;<ph id="ph1">`userDefinedTypes`</ph>&gt; section of the configuration file for this purpose.</source>
          <target state="translated">下列範例將示範如何將兩個特定的 UDT 新增至組態檔的 &lt;<ph id="ph1">`userDefinedTypes`</ph>&gt; 區段，以達成這個目的。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>The attributes of the &lt;<ph id="ph1">`userDefinedType`</ph>&gt; element are defined as follows:</source>
          <target state="translated">屬性的 &lt;<ph id="ph1">`userDefinedType`</ph>&gt; 元素的定義方式如下：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeName`</ph>: An optional attribute that provides the readable type name.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph>：選擇性屬性，提供易閱讀的型別名稱。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>This is not used by the runtime but helps a reader to distinguish the types.</source>
          <target state="translated">雖然這不是供執行階段使用，但是可幫助讀者分辨型別。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeLibID`</ph>: A GUID string that specifies the registered type library that defines the type.</source>
          <target state="translated"><ph id="ph1">`typeLibID`</ph>：GUID 字串，指定定義此型別的已註冊型別程式庫。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeLibVersion`</ph>: A string that specifies the type library version that defines the type.</source>
          <target state="translated"><ph id="ph1">`typeLibVersion`</ph>：字串，指定定義此型別的型別程式庫版本。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source><ph id="ph1">`typeDefID`</ph>: A GUID string that specifies the specific UDT type within the registered type library.</source>
          <target state="translated"><ph id="ph1">`typeDefID`</ph>：GUID 字串，指定已註冊型別程式庫內的特定 UDT 型別。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Configuration.ComContractElement.UserDefinedTypes">
          <source>When the service is initialized, the integration runtime looks up the specified types and adds them to the known types collection for the specified contracts.</source>
          <target state="translated">當初始化服務時，整合執行階段會查詢指定的型別，並將它們加入做為指定合約的已知型別集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>