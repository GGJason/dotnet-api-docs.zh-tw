<Type Name="MsmqElementBase" FullName="System.ServiceModel.Configuration.MsmqElementBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5918620355af4b7860be9520e37dc86e4b4143f7" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55347964" /></Metadata><TypeSignature Language="C#" Value="public abstract class MsmqElementBase : System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqElementBase extends System.ServiceModel.Configuration.TransportElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqElementBase&#xA;Inherits TransportElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqElementBase abstract : System::ServiceModel::Configuration::TransportElement" />
  <TypeSignature Language="F#" Value="type MsmqElementBase = class&#xA;    inherit TransportElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.TransportElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0d1c1-101">提供成員通用於 <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> 和 <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" /> 的基底類別。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-101">Provides the base class with members common to the <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationElement" /> and <see cref="T:System.ServiceModel.Configuration.MsmqTransportElement" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MsmqElementBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d1c1-102">初始化 <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MsmqElementBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.ApplyConfiguration bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="0d1c1-103">包含要套用之設定的繫結項目。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-103">A binding element that contains the settings to be applied.</span></span></param>
        <summary><span data-ttu-id="0d1c1-104">將這個繫結項目的設定套用至指定的繫結項目。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-104">Applies the settings of this binding element to a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberSignature Language="F#" Value="override this.CopyFrom : System.ServiceModel.Configuration.ServiceModelExtensionElement -&gt; unit" Usage="msmqElementBase.CopyFrom from" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="0d1c1-105"><see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" />，其中包含要複製的值。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-105">The <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> that contains the values to be copied.</span></span></param>
        <summary><span data-ttu-id="0d1c1-106">將設定從指定的 <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> 複製到這個繫結項目。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-106">Copies settings from a specified <see cref="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" /> to this binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomDeadLetterQueue : Uri with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-107">取得或設定 URI，其中包含每個應用程式寄不出的信件佇列的位置，所有已過期、無法傳輸或傳遞的訊息都會放到該佇列中。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-107">Gets or sets a URI that contains the location of the per-application dead-letter queue, where messages that have expired or that have failed transfer or delivery are placed.</span></span></summary>
        <value><span data-ttu-id="0d1c1-108">包含每個應用程式寄不出的信件佇列的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-108">The <see cref="T:System.Uri" /> that contains the location of the per-application dead-letter queue.</span></span> <span data-ttu-id="0d1c1-109">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-109">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-110">寄不出的信件佇列是傳送應用程式佇列管理員上的佇列，用於無法傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-110">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span>  
  
 <span data-ttu-id="0d1c1-111">由 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 指定的 URI 必須使用 Net.msmq 配置。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-111">The URI that is specified by <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must use the Net.msmq scheme.</span></span>  
  
 <span data-ttu-id="0d1c1-112">如果 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 設定為 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，則 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 必須設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-112">If <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="0d1c1-113">如果 <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 不是 `null`，則 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 必須設定為 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-113">If <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberSignature Language="F#" Value="member this.DeadLetterQueue : System.ServiceModel.DeadLetterQueue with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-114">取得或設定列舉值，這個值會指出要使用之寄不出的信件佇列類型。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-114">Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</span></span></summary>
        <value><span data-ttu-id="0d1c1-115"><see cref="T:System.ServiceModel.DeadLetterQueue" /> 列舉值，指出要使用之寄不出的信件佇列類型。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-115">A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-116">寄不出的信件佇列是傳送應用程式佇列管理員上的佇列，用於無法傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-116">The dead-letter queue is a queue on the queue manager of the sending application for expired messages that have failed to be delivered.</span></span> <span data-ttu-id="0d1c1-117">寄不出的信件佇列列舉型別會指定要使用之寄不出的信件佇列類型。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-117">The dead-letter queue enumeration specifies the type of dead-letter queue to use.</span></span> <span data-ttu-id="0d1c1-118">這些值包括：</span><span class="sxs-lookup"><span data-stu-id="0d1c1-118">The values are:</span></span>  
  
-   <span data-ttu-id="0d1c1-119">None：此時不需要寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-119">None: If no dead-letter queue is required.</span></span> <span data-ttu-id="0d1c1-120">因此，如果訊息無法傳遞，則不會在寄不出的信件佇列中維護這個訊息的記錄。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-120">Thus, if a message were to fail delivery, no record of it would be maintained in the dead-letter queue.</span></span> <span data-ttu-id="0d1c1-121">當 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `false` 時，這就是預設值。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-121">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="0d1c1-122">System：範圍觸及整個系統的寄不出的信件佇列會用來記錄無法傳遞的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-122">System: The system-wide dead-letter queue would be used to record messages that fail delivery.</span></span> <span data-ttu-id="0d1c1-123">訊息佇列 (亦稱為 MSMQ) 具有一個系統寄不出的信件交易式佇列和一個系統寄不出的信件非交易式佇列，可分別記錄無法從交易式佇列與非交易式佇列傳遞的過期訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-123">Message Queuing (also known as MSMQ) has a transactional system dead-letter queue and a nontransactional system dead-letter queue to record messages that failed delivery from transactional and nontransactional queues, respectively.</span></span> <span data-ttu-id="0d1c1-124">當 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true` 時，這就是預設值。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-124">This is the default value when <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="0d1c1-125">Custom：<xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> 中所指定的佇列會用來記錄無法傳遞的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-125">Custom: The queue specified in the <xref:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue%2A> is used to record messages that fail delivery.</span></span>  
  
 <span data-ttu-id="0d1c1-126">訊息可能會因為下列任何一個原因而無法到達接收應用程式：</span><span class="sxs-lookup"><span data-stu-id="0d1c1-126">The reasons that a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="0d1c1-127">交易式訊息已傳送至非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-127">A transactional message is sent to a nontransactional queue.</span></span>  
  
-   <span data-ttu-id="0d1c1-128">非交易式訊息已傳送至交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-128">A nontransactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="0d1c1-129">未經驗證的訊息已傳送至僅接受經過驗證之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-129">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="0d1c1-130">未經加密的訊息已傳送至僅接受經過加密之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-130">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="0d1c1-131">訊息在傳送給接收者之前就已逾期。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-131">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="0d1c1-132">已超出目標電腦的訊息儲存配額或是目的佇列的儲存配額，或者是當訊息送達時，目標電腦上沒有可用的儲存空間。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-132">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="0d1c1-133">寄件人沒有將訊息放到目的佇列所需的存取權限 (本頁面可能為英文)。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-133">The sender does not have the access rights needed to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="0d1c1-134">附加到訊息的數位簽章無效。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-134">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="0d1c1-135">加密的訊息無法由目的佇列管理員進行解密。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-135">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="0d1c1-136">擷取訊息前，會清除或刪除目的佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-136">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Durable : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-137">取得或設定值，這個值會指出由這個繫結處理的訊息是否具有永久性或變動性。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-137">Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</span></span></summary>
        <value><span data-ttu-id="0d1c1-138">如果這個繫結處理的訊息是永久性的，則為 <see langword="true" />，如果為變動性的則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-138"><see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span></span> <span data-ttu-id="0d1c1-139">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-139">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-140">永久性的訊息不受佇列管理員毀損的影響，但變動性訊息會受到影響。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-140">A durable message survives a queue manager crash, while a volatile message does not.</span></span> <span data-ttu-id="0d1c1-141">如果應用程式可以容許訊息偶而遺失，變動性訊息就很有用。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-141">Volatile messages are useful when applications can tolerate occasional lost messages.</span></span>  
  
 <span data-ttu-id="0d1c1-142">如果 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true`，訊息必須是永久性的。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-142">If <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> is set to `true`, the messages must be durable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExactlyOnce : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-143">取得或設定布林值，這個值會指出是否只接收一次由此繫結處理的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-143">Gets or sets a Boolean value that indicates whether messages processed by this binding will be received exactly once.</span></span></summary>
        <value><span data-ttu-id="0d1c1-144">如果只接收一次由此繫結處理的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-144"><see langword="true" /> if messages processed by this binding will be received exactly once; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0d1c1-145">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-145">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-146">訊息可以在有保證或無保證的情況下傳送。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-146">A message can be sent with or without assurances.</span></span> <span data-ttu-id="0d1c1-147">如果有保證，應用程式便可確認傳送的訊息已到達接收訊息佇列，如果訊息沒有到達接收訊息佇列，應用程式可藉由讀取寄不出的信件佇列來判斷是否到達。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-147">An assurance enables an application to ensure that a sent message reached the receiving message queue, or if it did not, the application can determine this by reading the dead-letter queue.</span></span>  
  
 <span data-ttu-id="0d1c1-148"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `true` 的傳送訊息必須只能傳送到交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-148">Messages sent with <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> set to `true` must be sent only to a transactional queue.</span></span>  
  
 <span data-ttu-id="0d1c1-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>當設定為`true`，表示 Message Queuing (也稱為 MSMQ) 將確保傳送的訊息會傳遞到接收的訊息佇列一次只有一次，，和如果傳遞失敗，訊息會傳送到寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-149"><xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (also known as MSMQ) will ensure that a sent message is delivered to the receiving message queue once and only once, and if delivery fails, the message is sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="0d1c1-150">如果是需要將 <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> 設定為 `false` 的訊息，<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 屬性會預設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-150">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `false`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to `null`.</span></span>  
  
 <span data-ttu-id="0d1c1-151">對於需要訊息<xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A>要`true`，則<xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A>屬性會預設為交易式的全系統的寄不出信件佇列中訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-151">For messages that require <xref:System.ServiceModel.MsmqBindingBase.ExactlyOnce%2A> to be `true`, the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property defaults to a transactional system-wide dead-letter queue in Message Queuing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqElementBase.InitializeFrom(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberSignature Language="F#" Value="override this.InitializeFrom : System.ServiceModel.Channels.BindingElement -&gt; unit" Usage="msmqElementBase.InitializeFrom bindingElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="0d1c1-152">繫結項目，其中包含要用來初始化這個繫結項目的設定。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-152">A binding element that contains the settings to be used to initialize this binding element.</span></span></param>
        <summary><span data-ttu-id="0d1c1-153">使用指定之繫結項目的內容，初始化此繫結項目。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-153">Initializes this binding element with the content from the specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRetryCycles : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-154">取得或設定嘗試傳遞訊息至接收應用程式的重試循環次數上限。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-154">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span></span></summary>
        <value><span data-ttu-id="0d1c1-155">整數，指出嘗試傳遞訊息至應用程式的重試循環次數上限。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-155">An integer that indicates the maximum number of retry cycles to attempt delivery of messages to the application.</span></span> <span data-ttu-id="0d1c1-156">預設值為 2。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-156">The default value is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-157">單一重試循環會嘗試以指定的次數，傳遞訊息至應用程式。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-157">A single retry cycle attempts to deliver a message to an application a specified number of times.</span></span> <span data-ttu-id="0d1c1-158">嘗試的次數是由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 屬性設定。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-158">The number of attempts made is set by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="0d1c1-159">如果傳遞嘗試次數用完以後，應用程式無法使用訊息，訊息就會傳送至重試佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-159">If the application fails to consume the message after the attempts at delivery have been exhausted, the message is sent to a retry queue.</span></span> <span data-ttu-id="0d1c1-160">在 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 屬性指定的延遲之後，後續的重試循環會包含從重試佇列傳回應用程式佇列的訊息，以再次嘗試傳遞至應用程式。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-160">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="0d1c1-161"><xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> 屬性會指定應用程式用於嘗試傳遞訊息的重試循環次數。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-161">The <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property specifies the number of retry cycles that the application uses to attempt to deliver the message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MsmqTransportSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.MsmqTransportSecurityElement MsmqTransportSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MsmqTransportSecurity As MsmqTransportSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ MsmqTransportSecurity { System::ServiceModel::Configuration::MsmqTransportSecurityElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MsmqTransportSecurity : System.ServiceModel.Configuration.MsmqTransportSecurityElement" Usage="System.ServiceModel.Configuration.MsmqElementBase.MsmqTransportSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("msmqTransportSecurity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.MsmqTransportSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-162">取得 <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> 執行個體，這個執行個體會封裝繫結的傳輸安全性設定。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-162">Gets an <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></summary>
        <value><span data-ttu-id="0d1c1-163"><see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> 執行個體，可封裝繫結的傳輸安全性設定。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-163">An <see cref="T:System.ServiceModel.Configuration.MsmqTransportSecurityElement" /> instance that encapsulates the transport security settings for a binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.ServiceModel.Configuration.MsmqElementBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-164">取得 <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件的集合或這個組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-164">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="0d1c1-165"><see cref="T:System.Configuration.ConfigurationPropertyCollection" /> 執行個體，其中包含可能是屬性之 <see cref="T:System.Configuration.ConfigurationProperty" /> 物件的集合或這個繫結組態項目之 <see cref="T:System.Configuration.ConfigurationElement" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-165">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this binding configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveContextEnabled : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-166">取得或設定值，這個值會指定是否啟用接收在佇列內處理訊息的內容。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-166">Gets or sets a value that specifies if receive context for processing messages in queues is enabled.</span></span></summary>
        <value><span data-ttu-id="0d1c1-167">如果啟用接收在佇列內處理訊息的內容，則為 <see langword="true" />，否則為 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="0d1c1-167"><see langword="true" /> if receive context for processing messages in queues is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-168">這是當`true`，服務可以列為 「 尖峰 」 以開始處理它，在佇列訊息，如果出錯而擲回例外狀況，它會保持在佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-168">When this is `true`, a service can "peek" a message on the queue to begin processing it, and, if anything goes wrong and an exception is thrown, it remains on the queue.</span></span> <span data-ttu-id="0d1c1-169">服務也可 「 鎖定 」 訊息，以便在稍後的時間點的處理時間再試一次。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-169">Services can also "lock" messages in order to retry processing at a later point in time.</span></span> <span data-ttu-id="0d1c1-170">ReceiveContext 提供 「 完成 」 訊息一次處理，因此它可以從佇列中移除的機制。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-170">ReceiveContext provides a mechanism for "completing" the message once processed so it can be removed from the queue.</span></span> <span data-ttu-id="0d1c1-171">訊息不會再透過網路，在讀取和重新寫入至佇列，並個別訊息在處理期間時，跳躍跨不同的服務執行個體。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-171">Messages are no longer being read and re-written to queues over the network, and individual messages aren't bouncing across different service instances during processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveErrorHandling : System.ServiceModel.ReceiveErrorHandling with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-172">取得或設定列舉值，這個值會指定如何處理有害和不可分派的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-172">Gets or sets an enumeration value that specifies how poison and nondispatchable messages are handled.</span></span></summary>
        <value><span data-ttu-id="0d1c1-173"><see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何處理有害和不可分派的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-173">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and nondispatchable messages are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-174">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 時，通道接聽程式會發生錯誤，並且會追蹤和擲回 <xref:System.ServiceModel.ProtocolException> (內含一個 <xref:System.ServiceModel.MsmqPoisonMessageException>)。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-174">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the channel listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown.</span></span> <span data-ttu-id="0d1c1-175">有問題的訊息會留在佇列中，並且需要由某種手動方法來移除。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-175">The offending message is left in the queue and needs to be removed by some manual method.</span></span> <span data-ttu-id="0d1c1-176"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，後者可用於從有害訊息佇列中識別並手動移除有問題的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-176">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the offending message from the poison-message queue.</span></span>  
  
 <span data-ttu-id="0d1c1-177">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 時，只會捨棄有問題的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-177">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the offending message is simply dropped.</span></span>  
  
 <span data-ttu-id="0d1c1-178">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 時，負認可會傳送至用戶端，並從有害訊息佇列中移除問題訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-178">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgment is sent to the client and the offending message is removed from the poison-message queue.</span></span> <span data-ttu-id="0d1c1-179">這個選項只能在訊息佇列 (亦稱為 MSMQ) 4.0 上使用。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-179">This option is available only on Message Queuing (also known as MSMQ) 4.0.</span></span>  
  
 <span data-ttu-id="0d1c1-180">當設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 時，有問題的訊息會移到最後一個有害子佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-180">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the offending message is moved to the final poison subqueue.</span></span> <span data-ttu-id="0d1c1-181">只有在 Message Queuing 4.0 上才能使用這個選項。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-181">This option is available only on Message Queuing 4.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveRetryCount : int with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-182">取得或設定佇列管理員在傳送訊息至重試佇列之前，應嘗試傳送的次數上限。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-182">Gets or sets the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></summary>
        <value><span data-ttu-id="0d1c1-183">32 位元帶正負號的整數，指定佇列管理員在傳送訊息至重試佇列之前，應嘗試傳送的次數上限。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-183">A 32-bit signed integer that specifies the maximum number of times that the queue manager should attempt to send a message before transferring it to the retry queue.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-184">如果達到傳遞嘗試的次數上限，且應用程式未使用訊息，訊息便會傳送到重試佇列，以便日後再次傳遞。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-184">If the maximum number of delivery attempts is reached and the message is not consumed by the application, then the message is sent to a retry queue for redelivery at some later point in time.</span></span> <span data-ttu-id="0d1c1-185">在訊息傳回傳送佇列之前的時間長度是由 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> 控制。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-185">The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="0d1c1-186">如果重試循環達到 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 值，訊息便會傳送到有害訊息佇列，或者系統會將負認可傳回寄件者。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-186">If retry cycles reach the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> value, then either the message is sent to the poison-message queue, or a negative acknowledgment is sent back to the sender.</span></span>  
  
 <span data-ttu-id="0d1c1-187">如需詳細資訊，請參閱 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 與 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-187">For more information, see <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RetryCycleDelay : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-188">取得或設定值，這個值會指出嘗試傳遞無法立即傳遞之訊息時，重試循環之間的時間延遲。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-188">Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that could not be delivered immediately.</span></span></summary>
        <value><span data-ttu-id="0d1c1-189"><see cref="T:System.TimeSpan" />，指定開始下一輪嘗試傳遞至接收應用程式的循環前，要等候的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-189">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span></span> <span data-ttu-id="0d1c1-190">預設值是"00: 10:00"。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-190">The default value is "00:10:00".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-191">單一重試循環會嘗試以指定的次數，傳遞訊息至接收應用程式。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-191">A single retry cycle attempts to deliver a message to a receiving application a specified number of times.</span></span> <span data-ttu-id="0d1c1-192">嘗試的次數是由 <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> 屬性指定。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-192">The number of attempts made is specified by the <xref:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount%2A> property.</span></span> <span data-ttu-id="0d1c1-193">在立即重試達指定次數後，如果應用程式無法使用訊息，訊息就會傳送至重試佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-193">If the application fails to consume the message after the specified number of immediate retries, the message is sent to a retry queue.</span></span> <span data-ttu-id="0d1c1-194">在 <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> 屬性指定的延遲之後，後續的重試循環會包含從重試佇列傳回應用程式佇列的訊息，以再次嘗試傳遞至應用程式。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-194">Subsequent retry cycles consist of the message being returned from the retry queue to the application queue to attempt delivery to the application again, after a delay specified by the <xref:System.ServiceModel.MsmqBindingBase.RetryCycleDelay%2A> property.</span></span> <span data-ttu-id="0d1c1-195">所指定的重試循環數目<xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-195">The number of retry cycles is specified by the <xref:System.ServiceModel.MsmqBindingBase.MaxRetryCycles%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimeToLive : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-196">取得或設定時間間隔，這個間隔會指出由此繫結所處理之訊息在到期前可保留在佇列中的時間長度。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-196">Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</span></span></summary>
        <value><span data-ttu-id="0d1c1-197"><see cref="T:System.TimeSpan" />，指出訊息在到期前可保留在佇列中的時間長度。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-197">The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire.</span></span> <span data-ttu-id="0d1c1-198">預設值為一天 (01:00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-198">The default value is one day (01:00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-199">設定 <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> 屬性可確保有時效的訊息在接收應用程式處理之前不會變成過時。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-199">The <xref:System.ServiceModel.MsmqBindingBase.TimeToLive%2A> property is set to ensure that time-sensitive messages do not become stale before they are processed by the receiving applications.</span></span> <span data-ttu-id="0d1c1-200">佇列中未由接收應用程式於指定的時間間隔內使用的訊息，即稱為過期訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-200">A message in a queue that is not consumed by the receiving application within the time interval specified is said to be expired.</span></span> <span data-ttu-id="0d1c1-201">過期訊息會傳送至稱為「寄不出的信件佇列」的特殊佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-201">Expired messages are sent to a special queue called the dead-letter queue.</span></span> <span data-ttu-id="0d1c1-202">寄不出的信件佇列的位置是使用 <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> 屬性設定，或根據保證設定為適當的預設值。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-202">The location of the dead-letter queue is set with the <xref:System.ServiceModel.MsmqBindingBase.DeadLetterQueue%2A> property or to the appropriate default, based on assurances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMsmqTracing : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-203">取得或設定布林值，這個值會指出是否應追蹤由此繫結處理的訊息。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-203">Gets or sets a Boolean value that indicates whether messages processed by this binding should be traced.</span></span></summary>
        <value><span data-ttu-id="0d1c1-204">如果應追蹤由此繫結處理的訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-204"><see langword="true" /> if messages processed by this binding should be traced; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0d1c1-205">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-206">如果啟用追蹤，每當訊息離開或到達執行訊息佇列 (亦稱為 MSMQ) 的電腦時，都會建立報告訊息並傳送至報告佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-206">When tracing is enabled, report messages are created and sent to the report queue each time the message leaves or arrives at a computer running Message Queuing (also known as MSMQ).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSourceJournal : bool with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-207">取得或設定布林值，這個值會指出是否要將此繫結處理之訊息的複本儲存在來源日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-207">Gets or sets a Boolean value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span></span></summary>
        <value><span data-ttu-id="0d1c1-208">如果要將此繫結處理之訊息的複本儲存在來源日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-208"><see langword="true" /> if copies of messages processed by this binding should be stored in the source journal queue; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0d1c1-209">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-209">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d1c1-210">有些佇列應用程式必須記錄已離開電腦輸出佇列的訊息，這些程式可以將訊息複製到日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-210">Queued applications that must keep a record of messages that have left the computer's outgoing queue can copy the messages to a journal queue.</span></span> <span data-ttu-id="0d1c1-211">只要訊息一離開輸出佇列，而且收到目的端電腦已收到訊息的認可，訊息的複本就會保留在傳送端電腦的系統日誌佇列中。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-211">Once a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.Configuration.MsmqElementBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Runtime.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d1c1-212">取得或設定值，這個值會指定用於佇列通道時的連線逾時。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-212">Gets or sets a value that specifies a connection time-out when used with queued channels.</span></span></summary>
        <value><span data-ttu-id="0d1c1-213">與佇列通道一起使用時的連接逾時。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-213">A connection time-out when used with queued channels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="0d1c1-214">如果訊息的 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> 過期，任何可用於處理訊息的異動都將中止，而且如果過期是在異動期間發生，工作流程執行個體也會一併中止。</span><span class="sxs-lookup"><span data-stu-id="0d1c1-214">If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>