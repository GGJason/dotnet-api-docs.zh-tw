<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7ea8ad96cdf88d631517133675ad9e52cbb3dbb2" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46680936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>為自訂型別轉換子提供抽象基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptConverter>類別可讓您實作序列化和還原序列化程序的原生不支援的 managed 型別<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。 您也可以使用<xref:System.Web.Script.Serialization.JavaScriptConverter>時您需要更充分掌控的序列化和還原序列化程序。  
  
 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>屬性會指出自訂轉換器提供轉換子服務的類型。  
  
 若要指示必須藉由使用自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體，您必須向的執行個體中的轉換子。 如果您使用<xref:System.Web.Script.Serialization.JavaScriptSerializer>直接類別中，您應該使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法，以註冊這個轉換子。 否則，如果您叫用 Web 方法，從 ECMAScript (JavaScript)，而且您想要使用自訂轉換器，您可以註冊它藉由新增`converters`組態檔中的項目。 如需詳細資訊，請參閱 <<c0> [ 如何： 設定 ASP.NET 服務在 Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體序列化的類型，其註冊，自訂轉換器，序列化程式會呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法。 同樣地，當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體還原序列化 JavaScript Object Notation (JSON) 字串，並會辨識在 JSON 字串內的類型具有與其建立關聯的序列化程式呼叫自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A>方法。  
  
   
  
## Examples  
 下列範例示範如何建立自訂轉換器<xref:System.Web.UI.WebControls.ListItemCollection>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>當您繼承自<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />，您必須覆寫下列成員： 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 提供<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法的實作器會使用<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />。 轉換子的程式碼必須能夠使用序列化程式傳遞給它，字典中包含的值，然後將該值轉換成的型別物件<paramref name="T" />。 而不用重新實作自訂的轉換程式碼，若要這麼做，您可以呼叫<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法。</para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">在 ASP.NET AJAX 的 web 服務</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">以名稱/值組方式儲存的屬性資料之 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體。</param>
        <param name="type">產生的物件類型。</param>
        <param name="serializer">
          <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 執行個體。</param>
        <summary>在衍生類別中覆寫時，將提供的字典轉換成屬於指定型別的物件。</summary>
        <returns>已還原序列化的物件。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />中的所有值的方法會逐一查看<paramref name="dictionary" />參數來建構執行個體中所要求型別的<paramref name="type" />參數。 雖然轉換子可以直接使用來自值<paramref name="dictionary" />，我們建議使用轉換器實作器<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法改為。 轉換程式應該呼叫這個方法<see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />執行個體可從<paramref name="serializer" />參數。  
  
<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法可讓屬性值傳遞至轉換器<paramref name="dictionary" />，然後傳回預期類型的值。 在某些情況下，自訂類型轉換器使用可能會使用自行註冊的轉換子的屬性 （例如，輸入具有型別 B 的屬性和型別 B 也是自訂轉換器相關聯）。 在此情況下，叫用<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />可確保自訂轉換器，將會以遞迴方式叫用包含在字典中的屬性資料。 轉換子具有逐一查看字典中的所有項目，它會傳回目標類型的建構執行個體。  
  
如果轉換子會在還原序列化期間遇到問題，則應該擲回<see cref="T:System.InvalidOperationException" />描述問題的錯誤。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">要序列化的物件。</param>
        <param name="serializer">負責序列化的物件。</param>
        <summary>在衍生類別中覆寫時，建置由名稱/值組所組成的字典。</summary>
        <returns>包含代表物件資料之索引鍵/值組的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您序列化為其註冊自訂轉換器，類型<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體叫用<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>傳回值<see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />必須是<see cref="T:System.Collections.Generic.IDictionary`2" />具有零個或多個名稱/值組表示要轉換成 JSON 物件的資料執行個體。 轉換子本身不會序列化為 JSON 的資料。 相反地，轉換器會建置包含的屬性名稱 （字典的字串索引鍵） 和對應屬性的名稱/值組的字典值 （在字典中的物件值）。 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />執行個體之後將轉換為 JSON。  
  
如果轉換子會遇到的例外狀況，則應該擲回<see cref="T:System.InvalidOperationException" />描述問題的錯誤。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得所支援型別的集合。</summary>
        <value>實作 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的物件，表示轉換子支援的型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>屬性列出支援的轉換子的型別。 在執行階段，<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體會使用這個屬性來判斷受管理類型對應至其對應的自訂轉換子。  
  
   
  
## Examples  
 下列範例示範如何覆寫<xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>衍生類別中的屬性。 在此範例中，這個轉換子只支援<xref:System.Web.UI.WebControls.ListItemCollection>型別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> 必須一律傳回集合，而且集合必須包含至少一個項目。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>