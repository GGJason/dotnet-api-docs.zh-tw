<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c9e5a480cbae2f463e4846af1036150671d2e08" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39880974" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="12956-101">為自訂型別轉換子提供抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12956-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12956-102"><xref:System.Web.Script.Serialization.JavaScriptConverter>類別可讓您實作序列化和還原序列化程序的原生不支援的 managed 型別<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。</span><span class="sxs-lookup"><span data-stu-id="12956-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="12956-103">您也可以使用<xref:System.Web.Script.Serialization.JavaScriptConverter>時您需要更充分掌控的序列化和還原序列化程序。</span><span class="sxs-lookup"><span data-stu-id="12956-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="12956-104"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>屬性會指出自訂轉換器提供轉換子服務的類型。</span><span class="sxs-lookup"><span data-stu-id="12956-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="12956-105">若要指示必須藉由使用自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體，您必須向的執行個體中的轉換子。</span><span class="sxs-lookup"><span data-stu-id="12956-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="12956-106">如果您使用<xref:System.Web.Script.Serialization.JavaScriptSerializer>直接類別中，您應該使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法，以註冊這個轉換子。</span><span class="sxs-lookup"><span data-stu-id="12956-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="12956-107">否則，如果您叫用 Web 方法，從 ECMAScript (JavaScript)，而且您想要使用自訂轉換器，您可以註冊它藉由新增`converters`組態檔中的項目。</span><span class="sxs-lookup"><span data-stu-id="12956-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="12956-108">如需詳細資訊，請參閱 <<c0> [ 如何： 設定 ASP.NET 服務在 Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。</span><span class="sxs-lookup"><span data-stu-id="12956-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="12956-109">當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體序列化的類型，其註冊，自訂轉換器，序列化程式會呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12956-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="12956-110">同樣地，當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體還原序列化 JavaScript Object Notation (JSON) 字串，並會辨識在 JSON 字串內的類型具有與其建立關聯的序列化程式呼叫自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12956-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12956-111">下列範例示範如何建立自訂轉換器<xref:System.Web.UI.WebControls.ListItemCollection>類別。</span><span class="sxs-lookup"><span data-stu-id="12956-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="12956-112">
        <para>當您繼承自<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />，您必須覆寫下列成員:- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />提供<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />的實作器將使用的方法<see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.轉換子的程式碼必須能夠使用序列化程式傳遞給它，字典中包含的值，然後將該值轉換成的型別物件<paramref name="T" />。而不用重新實作自訂的轉換程式碼，若要這麼做，您可以呼叫<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="12956-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="12956-113">初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="12956-114">以名稱/值組方式儲存的屬性資料之 <see cref="T:System.Collections.Generic.IDictionary`2" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="12956-115">產生的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="12956-116">
            <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12956-117">在衍生類別中覆寫時，將提供的字典轉換成屬於指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12956-118">已還原序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="12956-119">
            <para>
              <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />中的所有值的方法會逐一查看<paramref name="dictionary" />參數來建構執行個體中所要求型別的<paramref name="type" />參數。雖然轉換子可以直接使用來自值<paramref name="dictionary" />，我們建議使用轉換器實作器<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法改為。轉換程式應該呼叫這個方法<see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />執行個體可從<paramref name="serializer" />參數。<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />方法可讓屬性值傳遞至轉換器<paramref name="dictionary" />，然後傳回預期類型的值。在某些情況下，自訂類型轉換器使用可能會使用自行註冊的轉換子的屬性 （例如，輸入具有型別 B 的屬性和型別 B 也是自訂轉換器相關聯）。在此情況下，叫用<see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />可確保自訂轉換器，將會以遞迴方式叫用包含在字典中的屬性資料。轉換子具有逐一查看字典中的所有項目，它會傳回目標類型的建構執行個體。如果轉換子會在還原序列化期間遇到問題，則應該擲回<see cref="T:System.InvalidOperationException" />描述問題的錯誤。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="12956-120">要序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="12956-121">負責序列化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12956-122">在衍生類別中覆寫時，建置由名稱/值組所組成的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12956-123">包含代表物件資料之索引鍵/值組的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12956-124">當您序列化為其註冊自訂轉換器，類型<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體叫用<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="12956-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="12956-125">
            <para>傳回值<see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />必須是<see cref="T:System.Collections.Generic.IDictionary`2" />具有零個或多個名稱/值組表示要轉換成 JSON 物件的資料執行個體。轉換子本身不會序列化為 JSON 的資料。相反地，轉換器會建置包含的屬性名稱 （字典的字串索引鍵） 和對應屬性的名稱/值組的字典值 （在字典中的物件值）。<see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />執行個體之後將轉換為 JSON。如果轉換子會遇到的例外狀況，則應該擲回<see cref="T:System.InvalidOperationException" />描述問題的錯誤。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12956-126">在衍生類別中覆寫時，取得所支援型別的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12956-127">實作 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 的物件，表示轉換子支援的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12956-128"><xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>屬性列出支援的轉換子的型別。</span><span class="sxs-lookup"><span data-stu-id="12956-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="12956-129">在執行階段，<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體會使用這個屬性來判斷受管理類型對應至其對應的自訂轉換子。</span><span class="sxs-lookup"><span data-stu-id="12956-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12956-130">下列範例示範如何覆寫<xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A>衍生類別中的屬性。</span><span class="sxs-lookup"><span data-stu-id="12956-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="12956-131">在此範例中，這個轉換子只支援<xref:System.Web.UI.WebControls.ListItemCollection>型別。</span><span class="sxs-lookup"><span data-stu-id="12956-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="12956-132">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。</span><span class="sxs-lookup"><span data-stu-id="12956-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="12956-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> 必須一律傳回集合，而且集合必須包含至少一個項目。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="12956-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>