<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed139d90ee940c2091d55722bb0a7d9a029e089c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597423" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>[Json.NET](http://www.newtonsoft.com/json) should be used serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer>類別在內部使用的非同步通訊層序列化和還原序列化的瀏覽器與 Web 伺服器之間傳遞的資料。 您無法存取該執行個體的序列化程式。 不過，此類別會公開公用 API。 因此，您可以使用類別，當您想要在 managed 程式碼中處理以 JavaScript 物件標記法 (JSON)。  
  
 若要序列化的物件，使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法。 若要還原序列化 JSON 字串，請使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>或<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法。 序列化和還原序列化的原生不支援的型別<xref:System.Web.Script.Serialization.JavaScriptSerializer>，實作自訂轉換子透過<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。 使用，以註冊轉換器<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。  
  
## <a name="mapping-between-managed-types-and-json"></a>Managed 型別與 JSON 之間的對應  
 下表顯示序列化處理序 managed 型別與 JSON 之間的對應。 這些 managed 的類型的原生支援<xref:System.Web.Script.Serialization.JavaScriptSerializer>。 當您於 managed 類型還原序列化從 JSON 字串時，適用於相同的對應。 不過，還原序列化可能會非對稱;並非所有可序列化的 managed 型別可從 JSON 還原序列化。  
  
> [!NOTE]
>  多維度陣列序列化為一維陣列，以及您應該將它當做一般陣列。  
  
|Managed 的類型|JSON 的對等項目|  
|------------------|---------------------|  
|<xref:System.String> (Utf-8 編碼方式僅)。|String|  
|<xref:System.Char>|String|  
|單一的 null 字元 （例如，\0)|Null|  
|<xref:System.Boolean>|布林值。 表示為 JSON`true`或 `false`|  
|`null` (`null`物件參考和<xref:System.Nullable>實值類型)。|字串值是 null|  
|<xref:System.DBNull>|字串值是 null|  
|基本的數字 （或相容的數值） 類型： <xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>， <xref:System.Double>，和<xref:System.Single>。 會使用的文化特性而異的字串表示。|number|  
|<xref:System.DateTime>|Date 物件，表示為 JSON 中 「\\/Date （刻度數目）\\/"。 正數或負數的長值，指出刻度 （毫秒），01 年 1 月、 UTC 1970 午夜起已經過數的刻度數。<br /><br /> 支援的最大值是的日期<xref:System.DateTime.MaxValue>(12/31/9999 11:59:59 PM) 和支援的最小日期值是<xref:System.DateTime.MinValue>(1/1/0001 12:00:00)。|  
|整數類型的列舉型別|列舉值的整數對等項目|  
|型別都會實作<xref:System.Collections.IEnumerable>或<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>不也實作<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 這包含類型，例如<xref:System.Array>， <xref:System.Collections.ArrayList>，和<xref:System.Collections.Generic.List%601>。|使用 JSON 陣列語法的陣列|  
|型別都會實作<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 這包含類型，例如<xref:System.Collections.Generic.Dictionary%602>和<xref:System.Collections.Hashtable>。|使用 JSON 字典語法的 JavaScript 物件|  
|具體 （非抽象），自訂型別必須具有公用的執行個體屬性 get 存取子或公用執行個體欄位。<br /><br /> 請注意與公用的唯寫屬性、 公用屬性或公用欄位屬性標示<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>，而且會忽略在這些類型的公用索引的屬性。|JavaScript 會使用 JSON 字典語法的物件。 名為"__type"的特殊的中繼資料屬性就會包含以確保正確的還原序列化。 請確定公用執行個體屬性有 get 和 set 存取子，以確保正確的還原序列化。|  
|<xref:System.Guid>|GUID 的字串表示法|  
|<xref:System.Uri>|傳回值的字串表示法 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 第一個範例提供如何序列化和還原序列化資料物件的一個簡單的範例。 它需要類別名稱如下所示的人員。  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 下一個範例顯示更複雜且完整的專案使用<xref:System.Web.Script.Serialization.JavaScriptSerializer>來儲存和還原物件的狀態使用 JSON 序列化的類別。 此程式碼會使用所提供的自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別，而不型別解析程式序列化的 JSON 字串中不包含型別中繼資料屬性 （名稱為"__type"）。 型別中繼資料屬性供<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>和<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法來判斷適當的 managed 類型的 JSON 字串轉換。 型別解析程式的相關資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">The custom type-resolver object.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它會序列化物件時<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別會使用`resolver`參數來決定要包含在序列化的 JSON 字串型別中繼資料屬性 ("__type") 中的適當值。 同樣地，當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別還原序列化 JSON 字串、 它適當的 managed 型別解析的類型中繼資料屬性值使用解析程式執行個體。  
  
 您可以設定`resolver`參數`null`，相當於呼叫<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>建構函式。  
  
 執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>叫用 Web 服務用戶端指令碼中的使用特殊的型別解析程式用的非同步通訊層。 這個型別解析程式會限制可還原序列化的型別所定義的 Web 服務的方法簽章或會<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>套用。 您無法以程式設計方式修改這個內建型別解析程式。  
  
> [!IMPORTANT]
>  使用自訂型別解析程式以初始化此物件的執行個體可以存在的安全性風險。 此物件只適用於受信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">The object to convert.</param>
        <param name="targetType">The type to convert the object to.</param>
        <summary>Converts the specified object to the specified type.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體正在序列化的型別已註冊自訂轉換子的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得要被轉換成 JSON 格式的字串名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況是，如果物件圖表過於複雜、，或已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">所得的類型<c>obj</c>會轉換。</typeparam>
        <param name="obj">The object to convert.</param>
        <summary>Converts the given object to the specified type.</summary>
        <returns>The object that has been converted to the target type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法嘗試將轉換的物件執行個體所表示之`obj`型別的執行個體`T`。 此轉換期間並不會保留物件參考相等的保證。 因此，您不能假設`obj`和`T`參考相同的物件。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 適用於如果您實作衍生自類別<xref:System.Web.Script.Serialization.JavaScriptConverter>。 轉換子程式碼必須能夠進行序列化程式會將傳遞給它，在字典中的值，然後將該值轉換為類型的執行個體`T`。 而不要重新實作來執行此工作的自訂轉換程式碼，您可以呼叫<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>從轉換程式碼的方法。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法，以取得<xref:System.Web.UI.WebControls.ListItem>從傳遞至轉換器的字典中值的物件。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target.  -or-  It is not possible to convert <paramref name="obj" /> to <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to deserialize.</param>
        <param name="targetType">The type of the resulting object.</param>
        <summary>Converts a JSON-formatted string to an object of the specified type.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此還原序列化方法不會嘗試轉型為特定類型方式物件圖形的根，<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法會執行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">產生的物件類型。</typeparam>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法相當於第一個使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法，以取得物件圖形，然後嘗試將結果轉換為輸入`T`。  
  
 還原序列化時，序列化程式的目前的型別解析參考時，可判斷轉換的陣列和字典類型內巢狀項目時要使用的 managed 的類型。 如此一來，在還原序列化處理逐一查看所有巢狀元素的`input`。 如需型別解析程式的詳細資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別。  
  
   
  
## Examples  
下列範例提供如何序列化和還原序列化資料物件的一個簡單的範例。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要名為類別`Person`，這下列範例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">The JSON string to be deserialized.</param>
        <summary>Converts the specified JSON string to an object graph.</summary>
        <returns>The deserialized object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此還原序列化方法不會嘗試轉型為特定的型別，物件圖形的根如同<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="input" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.  -or-  <paramref name="input" /> contains an unexpected character sequence.  -or-  <paramref name="input" /> is a dictionary type and a non-string key value was encountered.  -or-  <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type.  -or-  <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.  -or-  <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).  -or-  An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target.  -or-  It is not possible to convert <paramref name="input" /> to the target type.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
        <value>JSON 字串的最大長度。 預設值為 2097152 個字元，這相當於 4 MB 的 Unicode 字串資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A>屬性適用於僅當您明確建立的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。 使用`jsonSerialization`組態檔來設定內部的序列化程式執行個體所使用的非同步通訊層的最大長度的項目。 如需序列化的組態項目，請參閱[How to： 設定 ASP.NET 服務在 Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
        <value>物件層級的數目。 預設值為 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>屬性參考到的物件階層中的層級數目的<xref:System.Web.Script.Serialization.JavaScriptSerializer>會處理在下列情況：  
  
-   當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別還原序列化 JSON 字串。  
  
-   當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別在序列化期間查核物件圖形。  
  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>適用於僅當您明確建立的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。 使用`jsonSerialization`組態檔來設定要處理的非同步通訊層使用內部序列化程式執行個體的物件層級數目的項目。 如需序列化的組態項目，請參閱[How to： 設定 ASP.NET 服務在 Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">An array that contains the custom converters to be registered.</param>
        <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以註冊使用的一或多個自訂轉換子<xref:System.Web.Script.Serialization.JavaScriptSerializer>所使用的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。 當註冊自訂轉換子時，<xref:System.Web.Script.Serialization.JavaScriptSerializer>使用轉換器，將 managed 的類型的序列化和還原序列化 JSON 字串為 managed 型別。  
  
 多個轉換子可以註冊具有相同<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體，而且這些轉換工具可以表示相同類型的支援。 如此一來，已為特定類型的最後一個轉換器會將使用的一個<xref:System.Web.Script.Serialization.JavaScriptSerializer>序列化的型別。  
  
 如需自訂轉換子的詳細資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。  
  
   
  
## Examples  
 下列範例示範如何註冊與自訂轉換子<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="converters" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Converts an object to a JSON string.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <summary>Converts an object to a JSON string.</summary>
        <returns>The serialized JSON string.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體正在序列化的型別已註冊自訂轉換子的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得會轉換成 JSON 字串的名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況是，如果物件圖表過於複雜、，或已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
   
  
## Examples  
下列範例提供如何序列化和還原序列化資料物件的一個簡單的範例。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要名為類別`Person`，這下列範例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">The object to serialize.</param>
        <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
        <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體正在序列化的型別已註冊自訂轉換子的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得會轉換成 JSON 字串的名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況是，如果物件圖表過於複雜、，或已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  -or-  <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object.</exception>
        <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="output" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>