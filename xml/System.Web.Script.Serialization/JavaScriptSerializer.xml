<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5866a7bed9c27bf951a0c9688e4e6fdd5766de4" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52613783" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see href="https://www.newtonsoft.com/json">Json.NET</see> 應該用於序列化和還原序列化。 為具有 AJAX 能力的應用程式提供序列化和還原序列化功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer>類別可在內部由非同步通訊層來序列化和還原序列化的瀏覽器與 Web 伺服器之間傳遞的資料。 您無法存取該執行個體的序列化程式。 不過，這個類別會公開公用 API。 因此，您可以使用此類別，當您想要使用 managed 程式碼與 JavaScript Object Notation (JSON)。  
  
 若要將物件序列化，使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法。 若要還原序列化 JSON 字串，使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>或<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法。 序列化和還原序列化原生不支援的類型<xref:System.Web.Script.Serialization.JavaScriptSerializer>，使用實作自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。 使用，以註冊轉換器<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。  
  
## <a name="mapping-between-managed-types-and-json"></a>Managed 型別與 JSON 之間的對應  
 下表顯示序列化處理序 managed 型別與 JSON 之間的對應。 這些 managed 的類型原生支援<xref:System.Web.Script.Serialization.JavaScriptSerializer>。 當您指向 managed 類型的還原序列化來自 JSON 字串時，則會套用相同的對應。 不過，還原序列化可能會非對稱式;並非所有可序列化的 managed 的類型都可以從 JSON 還原序列化。  
  
> [!NOTE]
>  多維陣列序列化為一維陣列，以及您應該使用它做為一般陣列。  
  
|Managed 的類型|JSON 的對等項目|  
|------------------|---------------------|  
|<xref:System.String> (Utf-8 編碼方式僅)。|String|  
|<xref:System.Char>|String|  
|單一的 null 字元 （例如，\0)|Null|  
|<xref:System.Boolean>|布林值。 以做為 json 格式代表`true`或 `false`|  
|`null` (`null`的物件參考和<xref:System.Nullable>實值型別)。|字串值是 null|  
|<xref:System.DBNull>|字串值是 null|  
|基本的數字 （或數值相容） 類型： <xref:System.Byte>， <xref:System.SByte>， <xref:System.Int16>， <xref:System.Int32>， <xref:System.Int64>， <xref:System.UInt16>， <xref:System.UInt32>， <xref:System.UInt64>， <xref:System.Double>，以及<xref:System.Single>。 會使用的文化特性而異的字串表示。|number|  
|<xref:System.DateTime>|Date 物件，以做為 json 格式代表 「\\日期 （的刻度數）/\\/"。 正數或負數的長值，指出刻度 （毫秒） 01 年 1 月，1970 UTC 午夜起已經過數的刻度數。<br /><br /> 受支援的最大日期值是<xref:System.DateTime.MaxValue>(9999 年 12/31/11:59:59 PM) 和最小支援的日期值是<xref:System.DateTime.MinValue>(1/1/0001 上午 12:00:00)。|  
|列舉型別是整數類型|列舉值的整數對等項目|  
|型別都會實作<xref:System.Collections.IEnumerable>或是<xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>不是也實作<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 這包括類型，例如<xref:System.Array>， <xref:System.Collections.ArrayList>，和<xref:System.Collections.Generic.List%601>。|使用 JSON 陣列語法的陣列|  
|型別都會實作<xref:System.Collections.IDictionary>或<xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>。 這包括類型，例如<xref:System.Collections.Generic.Dictionary%602>和<xref:System.Collections.Hashtable>。|使用 JSON 字典語法的 JavaScript 物件|  
|自訂具體 （非抽象） 類型的公用執行個體屬性的 get 存取子或公用執行個體欄位。<br /><br /> 請注意公用的唯寫屬性，公用屬性或公用欄位屬性標示與<xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>，而且會忽略在這些類型的公用索引的屬性。|使用 JSON 字典語法的 JavaScript 物件。 若要確保正確的還原序列化包含一個名為"__type"的特殊中繼資料屬性。 請確定公用執行個體屬性有 get 和 set 存取子，以確保正確的還原序列化。|  
|<xref:System.Guid>|在 GUID 的字串表示法|  
|<xref:System.Uri>|傳回值的字串表示法 <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 第一個範例提供簡單說明如何序列化和還原序列化資料物件。 它需要名為 Person 會如下所示的類別。  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 下一個範例顯示更複雜且完整的專案使用<xref:System.Web.Script.Serialization.JavaScriptSerializer>儲存和還原物件的狀態，藉由使用 JSON 序列化的類別。 此程式碼會使用所提供的自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">使用 ASP.NET AJAX 中的 Web 服務</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">從 ASP.NET AJAX 中的用戶端指令碼呼叫 Web 服務</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 類別的新執行個體，該執行個體沒有類型解析程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別沒有類型解析程式不包含序列化的 JSON 字串中的型別中繼資料屬性 （名為"__type"）。 型別中繼資料屬性由<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>和<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法來判斷適當的 managed 類型的 JSON 字串轉換。 類型解析程式的相關資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">自訂的類型解析程式物件。</param>
        <summary>初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 類別的新執行個體，該執行個體有自訂的類型解析程式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件，它會設定序列化時<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別會使用`resolver`參數來決定要包含在序列化的 JSON 字串型別中繼資料屬性 ("__type") 中的適當值。 同樣地，當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別所還原序列化 JSON 字串，以適當的 managed 型別解析型別中繼資料屬性值使用解析程式執行個體。  
  
 您可以設定`resolver`參數來`null`，這相當於呼叫<xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>建構函式。  
  
 執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>所用的非同步通訊層叫用 Web 服務用戶端指令碼會使用特殊的型別解析程式。 這個型別解析程式將可還原序列化的型別限制為 Web 服務的方法簽章或項目中定義的<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>套用。 您無法以程式設計方式修改這個內建型別解析程式。  
  
> [!IMPORTANT]
>  使用具有自訂類型解析程式初始化此物件的執行個體可以有安全性風險。 使用此物件時，請一律使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582">使用 ASP.NET AJAX 中的 Web 服務</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="obj">要轉換的物件。</param>
        <param name="targetType">要將物件轉換成的類型。</param>
        <summary>將指定的物件轉換成指定的類型。</summary>
        <returns>序列化的 JSON 字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體序列化為其註冊自訂轉換器，類型的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得將轉換成 JSON 格式的字串的名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況物件圖形太過複雜，則已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">產生的 JSON 格式字串超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
 <paramref name="obj" /> 包含循環參考。 當子物件具有父物件的參考，而父物件又具有子物件的參考時，就會發生循環參考。</exception>
        <exception cref="T:System.ArgumentException">已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T"><paramref name="obj" /> 將轉換成的類型。</typeparam>
        <param name="obj">要轉換的物件。</param>
        <summary>將指定的物件轉換為指定類型。</summary>
        <returns>已轉換成目標類型的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法會嘗試將物件執行個體所表示的轉換`obj`型別的執行個體`T`。 此轉換期間中，則無法保證會保留物件參考是否相等。 因此，您無法假設`obj`和`T`參考相同的物件。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> 要用於實作的類別，衍生自<xref:System.Web.Script.Serialization.JavaScriptConverter>。 必須要能夠採用序列化程式傳遞給它，字典中的值轉換子的程式碼，並將其然後將該值轉換為類型的執行個體`T`。 而不是重新實作自訂的轉換程式碼來執行這項工作中，您可以呼叫<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>從轉換子的程式碼的方法。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>方法，以取得<xref:System.Web.UI.WebControls.ListItem>從傳遞至轉換器的字典中值的物件。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" /> (或 <paramref name="obj" /> 的巢狀成員) 包含表示自訂類型的 "__type" 屬性，但與序列化程式相關聯的類型解析程式找不到對應的 Managed 類型。  
  
-或- 
 <paramref name="obj" /> (或 <paramref name="obj" /> 的巢狀成員) 包含表示自訂類型的 "__type" 屬性，但還原序列化對應 JSON 字串的結果無法指派給預期的目標類型。  
  
-或- 
 <paramref name="obj" /> (或 <paramref name="obj" /> 的巢狀成員) 包含 "__type" 屬性，表示 <see cref="T:System.Object" /> 或不可執行個體化的類型 (例如，抽象類型或介面)。  
  
-或- 
嘗試將 <paramref name="obj" /> 轉換成陣列式的 Managed 類型，但是不支援使用該類型做為還原序列化目標。  
  
-或- 
無法將 <paramref name="obj" /> 轉換成 <paramref name="T" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> 為字典類型，而且發生非字串索引鍵值。  
  
-或- 
 <paramref name="obj" /> 包含的成員定義未在 <paramref name="T" /> 類型上提供。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="input">要還原序列化的 JSON 字串。</param>
        <param name="targetType">產生的物件類型。</param>
        <summary>將 JSON 格式化字串轉換成指定之類型的物件。</summary>
        <returns>已還原序列化的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此還原序列化方法不會嘗試轉型為特定類型的方法的物件圖形的根目錄，<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法會執行。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 的長度超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。  
  
-或- 
 <paramref name="input" /> 包含非預期的字元順序。  
  
-或- 
 <paramref name="input" /> 為字典類型，而且發生非字串索引鍵值。  
  
-或- 
 <paramref name="input" /> 包含的成員定義未在目標類型上提供。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> 包含表示自訂類型的 “__type” 屬性，但目前與序列化程式相關聯的類型解析程式找不到對應的 Managed 類型。  
  
-或- 
 <paramref name="input" /> 包含表示自訂類型的 “__type” 屬性，但還原序列化對應 JSON 字串的結果無法指派給預期的目標類型。  
  
-或- 
 <paramref name="input" /> 包含 “__type” 屬性，表示 <see cref="T:System.Object" /> 或不可執行個體化的類型 (例如抽象類型或介面)。  
  
-或- 
嘗試將 JSON 陣列轉換成陣列式的 Managed 類型，但是不支援使用該類型做為 JSON 還原序列化目標。  
  
-或- 
<paramref name="input" /> 無法轉換成目標類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">產生的物件類型。</typeparam>
        <param name="input">要還原序列化的 JSON 字串。</param>
        <summary>將指定的 JSON 字串轉換成 <paramref name="T" /> 類型的物件。</summary>
        <returns>已還原序列化的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法就相當於設定使用的第一個<xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>方法，以取得物件圖形，然後嘗試將結果轉換成輸入`T`。  
  
 還原序列化期間，目前型別解析程式的序列化程式的參考，以決定轉換都放在陣列和字典類型的項目時要使用的 managed 的類型。 如此一來，還原序列化程序會逐一查看所有巢狀項目`input`。 如需型別解析程式的詳細資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別。  
  
   
  
## Examples  
下列範例提供簡單說明如何序列化和還原序列化資料物件。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要一個名為類別`Person`，這下列範例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 長度超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。  
  
-或- 
 <paramref name="input" /> 包含非預期的字元順序。  
  
-或- 
 <paramref name="input" /> 為字典類型，而且發生非字串索引鍵值。  
  
-或- 
 <paramref name="input" /> 包含的成員定義未在 <paramref name="T" /> 類型上提供。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> 包含表示自訂類型的 "__type" 屬性，但與序列化程式相關聯的類型解析程式找不到對應的 Managed 類型。  
  
-或- 
 <paramref name="input" /> 包含表示自訂類型的 “__type” 屬性，但還原序列化對應 JSON 字串的結果無法指派給預期的目標類型。  
  
-或- 
 <paramref name="input" /> 包含 "__type" 屬性，表示 <see cref="T:System.Object" /> 或不可執行個體化的類型 (例如，抽象類型或介面)。  
  
-或- 
嘗試將 JSON 陣列轉換成陣列式的 Managed 類型，但是不支援使用該類型做為 JSON 還原序列化目標。  
  
-或- 
無法將 <paramref name="input" /> 轉換成 <paramref name="T" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">要還原序列化的 JSON 字串。</param>
        <summary>將指定的 JSON 字串轉換成物件圖形。</summary>
        <returns>已還原序列化的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此還原序列化方法不會嘗試轉換圖形的根物件特定的型別，如同<xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="input" /> 長度超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。  
  
-或- 
 <paramref name="input" /> 包含非預期的字元順序。  
  
-或- 
 <paramref name="input" /> 為字典類型，而且發生非字串索引鍵值。  
  
-或- 
 <paramref name="input" /> 包含的成員定義未在目標類型上提供。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> 包含表示自訂類型的 “__type” 屬性，但目前與序列化程式相關聯的類型解析程式找不到對應的 Managed 類型。  
  
-或- 
 <paramref name="input" /> 包含表示自訂類型的 “__type” 屬性，但還原序列化對應 JSON 字串的結果無法指派給預期的目標類型。  
  
-或- 
 <paramref name="input" /> 包含 “__type” 屬性，表示 <see cref="T:System.Object" /> 或不可執行個體化的類型 (例如抽象類型或介面)。  
  
-或- 
嘗試將 JSON 陣列轉換成陣列式的 Managed 類型，但是不支援使用該類型做為 JSON 還原序列化目標。  
  
-或- 
<paramref name="input" /> 無法轉換成目標類型。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 類別接受的 JSON 字串最大長度。</summary>
        <value>JSON 字串的最大長度。 預設值為 2097152 個字元，這相當於 4 MB 的 Unicode 字串資料。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A>屬性適用於只有當您明確建立的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。 使用`jsonSerialization`組態檔來設定內部的序列化程式執行個體，以供非同步通訊層的最大長度的項目。 如需詳細的組態項目，進行序列化的詳細資訊，請參閱[如何： 設定 ASP.NET 服務在 Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">屬性設為小於 1 的值。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要處理物件層級數目的限制。</summary>
        <value>物件層級的數目。 預設值為 100。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>屬性會參考的物件階層中的層級數目的<xref:System.Web.Script.Serialization.JavaScriptSerializer>會處理在下列情況：  
  
-   當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別所還原序列化 JSON 字串。  
  
-   當<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別在序列化期間查核物件圖形。  
  
 值<xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>適用於只有當您明確建立的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。 使用`jsonSerialization`組態檔來設定物件來處理內部的序列化程式執行個體，以供非同步通訊層的層級數目的項目。 如需詳細的組態項目，進行序列化的詳細資訊，請參閱[如何： 設定 ASP.NET 服務在 Microsoft Ajax](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">屬性設為小於 1 的值。</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">陣列，包含要註冊的自訂轉換子。</param>
        <summary>向 <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> 執行個體註冊自訂轉換子。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以註冊使用的一或多個自訂轉換器<xref:System.Web.Script.Serialization.JavaScriptSerializer>使用的執行個體<xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>方法。 註冊自訂轉換器時,<xref:System.Web.Script.Serialization.JavaScriptSerializer>使用轉換器，將 managed 的類型序列化和還原序列化 JSON 字串為 managed 型別。  
  
 多個轉換器可以註冊具有相同<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體，以及這些轉換子可以指出相同類型的支援。 如此一來，針對特定類型註冊的最後一個轉換子是可供<xref:System.Web.Script.Serialization.JavaScriptSerializer>為序列化的型別。  
  
 如需有關自訂轉換器的詳細資訊，請參閱<xref:System.Web.Script.Serialization.JavaScriptConverter>類別。  
  
   
  
## Examples  
 下列範例示範如何註冊自訂轉換器，且<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.Script.Serialization.JavaScriptSerializer>類別。  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將物件轉換成 JSON 字串。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要序列化的物件。</param>
        <summary>將物件轉換成 JSON 字串。</summary>
        <returns>序列化的 JSON 字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體序列化為其註冊自訂轉換器，類型的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得會轉換成 JSON 字串的名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況物件圖形太過複雜，則已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
   
  
## Examples  
下列範例提供簡單說明如何序列化和還原序列化資料物件。  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

它需要一個名為類別`Person`，這下列範例所示。 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">產生的 JSON 字串超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
 <paramref name="obj" /> 包含循環參考。 當子物件具有父物件的參考，而父物件又具有子物件的參考時，就會發生循環參考。</exception>
        <exception cref="T:System.ArgumentException">已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">要序列化的物件。</param>
        <param name="output"><see cref="T:System.Text.StringBuilder" /> 物件，用來撰寫 JSON 字串。</param>
        <summary>序列化物件並將產生的 JSON 字串寫入指定的 <see cref="T:System.Text.StringBuilder" /> 物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體序列化為其註冊自訂轉換器，類型的序列化程式呼叫<xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>方法，以取得會轉換成 JSON 字串的名稱/值組的字典。  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>方法也可以擲回例外狀況物件圖形太過複雜，則已註冊的執行個體<xref:System.Web.Script.Serialization.JavaScriptConverter>造成轉換器遞迴。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">產生的 JSON 字串超過 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" /> 的值。  
  
-或- 
 <paramref name="obj" /> 包含循環參考。 當子物件具有父物件的參考，而父物件又具有子物件的參考時，就會發生循環參考。</exception>
        <exception cref="T:System.ArgumentException">已超出 <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> 所定義的遞迴限制。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>