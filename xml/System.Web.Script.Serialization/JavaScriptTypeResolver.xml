<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b261b549f0484bcdba3b77049d0bde7135139ef" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39929974" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f37e3-101">提供實作自訂型別解析程式的抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f37e3-101">Provides the abstract base class for implementing a custom type resolver.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37e3-102"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別提供的服務：</span><span class="sxs-lookup"><span data-stu-id="f37e3-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="f37e3-103">將 managed 類型轉換型別資訊的字串值，透過<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37e3-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="f37e3-104">解析字串值傳回給適當的 managed 型別的，透過<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f37e3-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="f37e3-105">當<xref:System.Web.Script.Serialization.JavaScriptSerializer>物件序列化的自訂型別，它可以選擇性地包含在序列化的 JavaScript Object Notation (JSON) 字串中包含的型別資訊的值。</span><span class="sxs-lookup"><span data-stu-id="f37e3-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="f37e3-106">還原序列化期間，<xref:System.Web.Script.Serialization.JavaScriptSerializer>可以接著參考此字串值，以判斷適當的受管理的 JSON 字串轉換的輸入。</span><span class="sxs-lookup"><span data-stu-id="f37e3-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="f37e3-107">如果您提供的型別解析程式，來<xref:System.Web.Script.Serialization.JavaScriptSerializer>序列化程式將使用的執行個體，<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>和<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>managed 型別和字串值之間在序列化和還原序列化的過程中，分別對應的方法。</span><span class="sxs-lookup"><span data-stu-id="f37e3-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="f37e3-108"><xref:System.Web.Script.Serialization.JavaScriptTypeResolver>類別是基底類別<xref:System.Web.Script.Serialization.SimpleTypeResolver>類別，可提供使用的 managed 的類型的組件限定名稱的型別解析程式的實作。</span><span class="sxs-lookup"><span data-stu-id="f37e3-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f37e3-109">下列範例示範如何建立自訂型別解析程式。</span><span class="sxs-lookup"><span data-stu-id="f37e3-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="f37e3-110">
        <para>當您實作型別解析程式，所傳回的字串<see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />方法必須將對應回相同的 managed 類型的字串值傳遞至<see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />方法。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f37e3-110">
          <para>When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f37e3-111">初始化 <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="f37e3-112">Managed 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-112">The name of the managed type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37e3-113">在衍生類別中覆寫時，傳回與指定之型別名稱相關聯的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37e3-114">與指定之型別名稱相關聯的 <see cref="T:System.Type" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37e3-115">當型別解析程式相關聯<xref:System.Web.Script.Serialization.JavaScriptSerializer>執行個體，序列化程式會使用<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>方法，當它逐一查看 JSON 字串來判斷特定受管理的 JSON 類型應該轉換成的型別。</span><span class="sxs-lookup"><span data-stu-id="f37e3-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f37e3-116">
            <para>指定的字串值，型別解析程式必須傳回<see cref="T:System.Type" />物件，表示對應的 managed 型別。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-116">
              <para>Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f37e3-117">要解析的 Managed 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-117">The managed type to be resolved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f37e3-118">在衍生類別中覆寫時，會傳回指定之 <see cref="T:System.Type" /> 物件的型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f37e3-119">指定之 Managed 型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f37e3-119">The name of the specified managed type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f37e3-120">如果<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>方法會傳回`null`或<xref:System.String.Empty>，則型別解析程式不支援的類型。</span><span class="sxs-lookup"><span data-stu-id="f37e3-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>