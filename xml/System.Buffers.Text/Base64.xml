<Type Name="Base64" FullName="System.Buffers.Text.Base64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccdcbb33753dfa1bd9ba714a6c438e823c9f8a0f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56354750" /></Metadata><TypeSignature Language="C#" Value="public static class Base64" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Base64 extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Base64" />
  <TypeSignature Language="VB.NET" Value="Public Class Base64" />
  <TypeSignature Language="C++ CLI" Value="public ref class Base64 abstract sealed" />
  <TypeSignature Language="F#" Value="type Base64 = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在二進位資料與以 base 64 表示的 UTF-8 編碼文字之間轉換。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; utf8, Span&lt;byte&gt; bytes, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8, valuetype System.Span`1&lt;unsigned int8&gt; bytes, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (utf8 As ReadOnlySpan(Of Byte), bytes As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8 (utf8, bytes, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8">輸入範圍，包含需要解碼的 base 64 格式 UTF-8 編碼文字。</param>
        <param name="bytes">輸出範圍，包含作業的結果，亦即，解碼的二進位資料。</param>
        <param name="bytesConsumed">作業期間使用的輸入位元組數。 如有必要，這可以用來分割後續呼叫的輸入。</param>
        <param name="bytesWritten">寫入至輸出範圍的位元組數。 如有必要，這可以用來分割後續呼叫的輸出。</param>
        <param name="isFinalBlock"><see langword="true" /> (預設) 如果輸入範圍包含要解碼的整個資料。 <see langword="false" /> 如果輸入範圍包含後續還有更多資料的部分資料。</param>
        <summary>將以 base 64 表示的 UTF-8 編碼文字範圍解碼為二進位資料。 如果輸入不是 4 的倍數，就會盡可能地解碼為最接近 4 的倍數。</summary>
        <returns>指出解碼作業狀態的其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

傳回值可以是如下所示：

- <xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：成功的整個輸入範圍的處理。
- <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：要寫入已解碼的輸入輸出範圍中沒有足夠的空間。
- <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>:`isFinalBlock`是`false`輸入也不是 4 的倍數。 否則，會被視為部分輸入<xref:System.Buffers.OperationStatus.InvalidData>。
- <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>：輸入包含超出預期的基底 64 範圍的位元組、 具有無效或兩個以上填補字元，或不完整 (也就不是 4 的倍數） 和`isFinalBlock`是`true`。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8InPlace (Span&lt;byte&gt; buffer, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.DecodeFromUtf8InPlace(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8InPlace (buffer As Span(Of Byte), ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8InPlace(Span&lt;System::Byte&gt; buffer, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8InPlace : Span&lt;byte&gt; *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.DecodeFromUtf8InPlace (buffer, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">輸入範圍，包含需要解碼的 base-64 文字資料。</param>
        <param name="bytesWritten">寫入緩衝區的位元組數目。</param>
        <summary>將 base 64 (就地) 格式 UTF-8 編碼文字的範圍解碼為二進位資料。 解碼的二進位輸出小於輸入中包含的文字資料 (此作業會壓縮資料)。 如果輸入不是 4 的倍數，此方法將不會解碼任何資料。</summary>
        <returns>指出解碼作業狀態的其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

傳回值可以是如下所示：

- <xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：成功的整個輸入範圍的處理。
- <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>：輸入包含超出預期的基底 64 範圍的位元組、 具有無效或兩個以上填補字元，或不完整 (也就不是 4 的倍數）。

這個方法無法傳回<xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>和<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>值。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8 (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;byte&gt; utf8, out int bytesConsumed, out int bytesWritten, bool isFinalBlock = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;unsigned int8&gt; utf8, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten, bool isFinalBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8 (bytes As ReadOnlySpan(Of Byte), utf8 As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer, Optional isFinalBlock As Boolean = true) As OperationStatus" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8 : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; *  *  * bool -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8 (bytes, utf8, bytesConsumed, bytesWritten, isFinalBlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="isFinalBlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bytes">輸入範圍，包含需要編碼的二進位資料。</param>
        <param name="utf8">輸出範圍，包含作業的結果，亦即，base 64 格式的 UTF-8 編碼文字。</param>
        <param name="bytesConsumed">作業期間使用的輸入位元組數。 如有必要，這可以用來分割後續呼叫的輸入。</param>
        <param name="bytesWritten">寫入至輸出範圍的位元組數。 如有必要，這可以用來分割後續呼叫的輸出。</param>
        <param name="isFinalBlock"><see langword="true" /> (預設) 如果輸入範圍包含要編碼的整個資料。 <see langword="false" /> 如果輸入範圍包含後續還有更多資料的部分資料。</param>
        <summary>將二進位資料的範圍編碼為以 base 64 表示的 UTF-8 編碼文字。</summary>
        <returns>指出編碼作業狀態的其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

傳回值可以是如下所示：

- <xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：成功的整個輸入範圍的處理。
- <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：沒有足夠空間來容納編碼的輸入輸出範圍中。
- <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>:`isFinalBlock`是`false`。 否則，如果`isFinalBlock`是`true`，如果輸入不是 3 的倍數，就會進行填補的輸出。

這個方法無法傳回<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>因為這不是可將 base-64 編碼。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8InPlace">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus EncodeToUtf8InPlace (Span&lt;byte&gt; buffer, int dataLength, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus EncodeToUtf8InPlace(valuetype System.Span`1&lt;unsigned int8&gt; buffer, int32 dataLength, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.EncodeToUtf8InPlace(System.Span{System.Byte},System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeToUtf8InPlace (buffer As Span(Of Byte), dataLength As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus EncodeToUtf8InPlace(Span&lt;System::Byte&gt; buffer, int dataLength, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member EncodeToUtf8InPlace : Span&lt;byte&gt; * int *  -&gt; System.Buffers.OperationStatus" Usage="System.Buffers.Text.Base64.EncodeToUtf8InPlace (buffer, dataLength, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="dataLength" Type="System.Int32" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">輸入範圍，包含需要編碼的二進位資料。 此方法會執行就地轉換，因此必須要夠大，才能儲存作業的結果。</param>
        <param name="dataLength">包含在需要編碼的緩衝區中的二進位資料位元組數。 這個值必須小於緩衝區長度。</param>
        <param name="bytesWritten">寫入緩衝區的位元組數目。</param>
        <summary>將二進位資料 (就地) 的範圍編碼為以 base 64 表示的 UTF-8 編碼文字。 編碼的文字輸出大於輸入中包含的二進位資料 (此作業會擴大資料)。</summary>
        <returns>指出編碼作業狀態的其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

傳回值可以是如下所示：

- <xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>：已成功處理整個緩衝區。
- <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>：超過緩衝區中沒有足夠的空間`dataLength`以符合結果的編碼輸入。

這個方法無法傳回<xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>和<xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxDecodedFromUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxDecodedFromUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxDecodedFromUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxDecodedFromUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxDecodedFromUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxDecodedFromUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary>如果您要在大小 <paramref name="length" /> 的位元組範圍內解碼 base-64 編碼文字，請傳回結果的最大長度 (位元組)。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length" /> 小於 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxEncodedToUtf8Length">
      <MemberSignature Language="C#" Value="public static int GetMaxEncodedToUtf8Length (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxEncodedToUtf8Length(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMaxEncodedToUtf8Length (length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMaxEncodedToUtf8Length(int length);" />
      <MemberSignature Language="F#" Value="static member GetMaxEncodedToUtf8Length : int -&gt; int" Usage="System.Buffers.Text.Base64.GetMaxEncodedToUtf8Length length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <summary>如果您要在大小 <paramref name="length" /> 的位元組範圍內編碼二進位資料，請傳回結果的最大長度 (位元組)。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length" /> 小於 0 或大於 1610612733 (因為編碼會將資料擴大 4/3)。</exception>
      </Docs>
    </Member>
  </Members>
</Type>