<Type Name="IBuildEngine3" FullName="Microsoft.Build.Framework.IBuildEngine3">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3aa92b9d44c30f2d062a866aacac5733a52500d4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36735912" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine3 : Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine3 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine3&#xA;Implements IBuildEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine3 : Microsoft::Build::Framework::IBuildEngine2" />
  <TypeSignature Language="F#" Value="type IBuildEngine3 = interface&#xA;    interface IBuildEngine2&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine2</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>這個介面會擴充 IBuildEngine，提供方法來平行建置專案檔。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.Generic.IList`1&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), removeGlobalProperties As IList(Of String)(), toolsVersion As String(), returnTargetOutputs As Boolean) As BuildEngineResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::BuildEngineResult BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ removeGlobalProperties, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool returnTargetOutputs);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFilesInParallel : string[] * string[] * System.Collections.IDictionary[] * System.Collections.Generic.IList&lt;string&gt;[] * string[] * bool -&gt; Microsoft.Build.Framework.BuildEngineResult" Usage="iBuildEngine3.BuildProjectFilesInParallel (projectFileNames, targetNames, globalProperties, removeGlobalProperties, toolsVersion, returnTargetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.BuildEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="removeGlobalProperties" Type="System.Collections.Generic.IList&lt;System.String&gt;[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="returnTargetOutputs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">要建置的專案。</param>
        <param name="targetNames">要建置之專案中的目標 (可以是 Null)。</param>
        <param name="globalProperties">要套用至子專案之其他全域屬性的 <see cref="T:System.Collections.IDictionary" /> 陣列 (陣列項目可以是 null)。  索引鍵和值都必須是字串。</param>
        <param name="removeGlobalProperties">應該移除的全域屬性清單。</param>
        <param name="toolsVersion">引擎所辨識的工具版本，將在這個建置期間使用 (可以是 Null)。</param>
        <param name="returnTargetOutputs">表示應該在 BuildEngineResult 中傳回目標輸出。</param>
        <summary>允許工作根據專案檔來初始化組建。</summary>
        <returns>如果建置成功，則會傳回指定目標的輸出。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reacquire">
      <MemberSignature Language="C#" Value="public void Reacquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reacquire() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Reacquire" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reacquire ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reacquire();" />
      <MemberSignature Language="F#" Value="abstract member Reacquire : unit -&gt; unit" Usage="iBuildEngine3.Reacquire " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在退讓之後等候重新取得控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public void Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Sub Yield ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Yield();" />
      <MemberSignature Language="F#" Value="abstract member Yield : unit -&gt; unit" Usage="iBuildEngine3.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>告知系統這個工作 (Task) 具有長時間執行的跨處理序元件，而且其他工作 (Work) 可以在該項工作 (Work) 完成時在組建中完成。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 沒有每一 CPU 只有一個節點 （msbuild.exe 處理程序）。 只有一個專案、 目標和工作可以在任何時間建置，在節點上。 如果工作在等候，例如，繁衍的工具或其他事件，才能完成工作可以呼叫會立即傳回的利潤。 如果有的話，這可讓建置在另一個專案中，目標節點。  準備好繼續進行的工作時，它應該呼叫<xref:Microsoft.Build.Framework.IBuildEngine3.Reacquire%2A>。 粗略的規則，如果工作預期作業需要多個 20 或 30 秒為單位，它可以選擇呼叫`Yield`作業開始之前和`Reaquire`當作業完成為止。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>