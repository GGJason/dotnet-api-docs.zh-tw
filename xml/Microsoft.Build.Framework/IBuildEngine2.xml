<Type Name="IBuildEngine2" FullName="Microsoft.Build.Framework.IBuildEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9ae6208b5acc92040f48951469ee5a51a141c4f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37725153" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBuildEngine2 : Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine2 implements class Microsoft.Build.Framework.IBuildEngine" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine2&#xA;Implements IBuildEngine" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine2 : Microsoft::Build::Framework::IBuildEngine" />
  <TypeSignature Language="F#" Value="type IBuildEngine2 = interface&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>可讓工作作者使用 MSBuild 引擎的一小部分功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Build.Framework.IBuildEngine2> 擴充<xref:Microsoft.Build.Framework.IBuildEngine>，可讓您建置多個專案檔，以平行方式在包含多個處理器或具有多核心處理器的系統上。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFile">
      <MemberSignature Language="C#" Value="public bool BuildProjectFile (string projectFileName, string[] targetNames, System.Collections.IDictionary globalProperties, System.Collections.IDictionary targetOutputs, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFile(string projectFileName, string[] targetNames, class System.Collections.IDictionary globalProperties, class System.Collections.IDictionary targetOutputs, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFile (projectFileName As String, targetNames As String(), globalProperties As IDictionary, targetOutputs As IDictionary, toolsVersion As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFile(System::String ^ projectFileName, cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ globalProperties, System::Collections::IDictionary ^ targetOutputs, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFile : string * string[] * System.Collections.IDictionary * System.Collections.IDictionary * string -&gt; bool" Usage="iBuildEngine2.BuildProjectFile (projectFileName, targetNames, globalProperties, targetOutputs, toolsVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName">要建置的專案檔名稱。</param>
        <param name="targetNames">在要建置之專案中的目標名稱。 使用分號 (;) 分隔多個目標。 可接受 <see langword="Null" /> 值。</param>
        <param name="globalProperties">要套用至專案之其他全域屬性的 <see cref="T:System.Collections.IDictionary" />。 索引鍵和值都必須是 <see langword="String" /> 資料類型。</param>
        <param name="targetOutputs">每個指定目標的輸出。 可接受 <see langword="Null" /> 值。</param>
        <param name="toolsVersion">預設值 = "3.5"。 指定組建要使用的工具組版本。 可接受 <see langword="Null" /> 值。</param>
        <summary>初始化專案檔的建置。 如果建置成功，則會傳回指定之目標的輸出 (如果有的話)。</summary>
        <returns>如果建置成功，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未不指定任何目標，[!INCLUDE[vstecmsbuild](~/includes/vstecmsbuild-md.md)]建置專案的預設目標。  
  
 目標輸出會傳回為<xref:Microsoft.Build.Framework.ITaskItem>陣列編製索引以目標名稱。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public bool BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.IDictionary[] targetOutputsPerProject, string[] toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine2.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), targetOutputsPerProject As IDictionary(), toolsVersion As String(), useResultsCache As Boolean, unloadProjectsOnCompletion As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::IDictionary ^&gt; ^ targetOutputsPerProject, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool useResultsCache, bool unloadProjectsOnCompletion);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFilesInParallel : string[] * string[] * System.Collections.IDictionary[] * System.Collections.IDictionary[] * string[] * bool * bool -&gt; bool" Usage="iBuildEngine2.BuildProjectFilesInParallel (projectFileNames, targetNames, globalProperties, targetOutputsPerProject, toolsVersion, useResultsCache, unloadProjectsOnCompletion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="targetOutputsPerProject" Type="System.Collections.IDictionary[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="useResultsCache" Type="System.Boolean" />
        <Parameter Name="unloadProjectsOnCompletion" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">要建置之專案檔的名稱。</param>
        <param name="targetNames">在要建置之專案中的目標名稱。 使用分號 (;) 分隔多個目標。 可接受 <see langword="Null" /> 值。</param>
        <param name="globalProperties">要套用至專案之其他全域屬性的 <see cref="T:System.Collections.IDictionary" />。 索引鍵和值都必須是 <see langword="String" /> 資料類型。 陣列項目可以是 <see langword="null" />。</param>
        <param name="targetOutputsPerProject">每個指定目標的輸出。 可接受 <see langword="Null" /> 值。</param>
        <param name="toolsVersion">預設值 = "3.5"。 指定組建要使用的工具組版本。 可接受 <see langword="Null" /> 值。</param>
        <param name="useResultsCache">如果為 <see langword="true" />，則此作業只會在快取區 (Cache) 尚未包含結果時執行。 在作業完成後，結果便會儲存在快取區中。</param>
        <param name="unloadProjectsOnCompletion">如果為 <see langword="true" />，作業完成後就會卸載專案。</param>
        <summary>允許工作在配備多個處理器的系統或多核心處理器上，啟始指定之專案檔的平行組建。 如果建置成功，則會傳回指定之目標的輸出 (如果有的話)。</summary>
        <returns>如果建置成功則為 <see langword="True" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩者`targetNames`並`targetOutputs`接受`null`值。 如果未不指定任何目標，則會建立預設目標。 目標輸出會傳回為<xref:Microsoft.Build.Framework.ITaskItem>陣列編製索引以目標名稱。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunningMultipleNodes">
      <MemberSignature Language="C#" Value="public bool IsRunningMultipleNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunningMultipleNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRunningMultipleNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunningMultipleNodes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRunningMultipleNodes : bool" Usage="Microsoft.Build.Framework.IBuildEngine2.IsRunningMultipleNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回系統是在單一處理器還是多處理器模式下執行。</summary>
        <value>如果系統是在多處理器模式下執行，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建置引擎會在單一處理器模式中 (`IsRunningMultipleNodes` = `false`) 當初始化等於 1 的 Cpu 數目，並建置引擎不是子引擎。 建置引擎會在多處理器模式中 (`IsRunningMultipleNodes` = `true`) 大於 1 的 Cpu 數目的初始化時，或當建置引擎是子引擎。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>