<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c85117253b19f13ffbb97dad5fd61dac91c407d8" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51895490" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供屬性和方法，以操作登錄。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要使用這些屬性，您必須具有讀取和寫入權限，從<xref:System.Security.Permissions.RegistryPermissionAccess>列舉型別。 以完全信任執行的任何程式碼 （在預設的安全性原則，這是安裝在使用者的本機硬碟上的任何程式碼） 具有存取登錄的必要權限。 如需詳細資訊，請參閱 <xref:System.Security.Permissions.RegistryPermission> 類別。  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|從登錄讀取資料|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 這個範例會讀取該值`Name`從`HKEY_CURRENT_USER\Software\MyApp`並將它顯示在訊息方塊。  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_CLASSES_ROOT" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` 主要用來儲存在 Windows 中的檔案關聯的相關資訊。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與僅這些必要權限可完成工作。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 這個範例會取得名稱的子機碼`ClassesRoot`登錄機碼並將其加入`ListBox1`。  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 此範例中，您需要`ListBox`名為`ListBox1`專案中。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_CURRENT_CONFIG" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` 主要用來在電腦上儲存裝置的設定。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與僅這些必要權限可完成工作。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 這個範例會建立子機碼`MyDeviceSettings`。  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_CURRENT_USER" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` 主要用來儲存每位使用者的設定，例如色彩和字型，在 Windows 中。 索引鍵會因使用者而有所不同。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與完成工作所需的最低權限。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 此範例會刪除子機碼`Software\MyCompany\Preferences\UserData`。  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_DYNDATA" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` 用來儲存動態登錄資料，例如虛擬裝置驅動程式所使用的資料，並只在 Windows 95/98 系統上支援。 在非 Windows 95/98 系統上呼叫任何方法所傳回索引鍵`Registry.DynData`，這類`CreateSubKey`， `DeleteSubKey`， `GetSubKeyCount`，`GetValueCount`等，將會擲回<xref:System.IO.IOException>。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與完成工作所需的最低權限。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 此範例會刪除子機碼的樹狀結構`Software\MyCompany\Preferences`。  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. 要從中擷取值的索引鍵。 必要。</param>
        <param name="valueName">
          <see langword="String" />. 要擷取的值。 必要。</param>
        <param name="defaultValue">
          <see langword="Object" />. 當值不存在時要提供的預設值。 必要。</param>
        <summary>從登錄機碼取得值。</summary>
        <returns>從登錄機碼取得值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` 不區分大小寫。  
  
 登錄機碼可以包含一個不是任何名稱相關聯的值。 當這個未命名的值顯示在登錄編輯程式中時，字串 「 （預設） 」 會出現而不是名稱。 若要擷取這個未命名的值，指定 null 或空字串 ("") 的`valueName`。  
  
 下表列出與工作的範例`GetValue`方法。  
  
|以|請參閱|  
|--------|---------|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 這個範例會讀取該值`Name`從`HKEY_CURRENT_USER\Software\MyApp`，並顯示在`MessageBox`。  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">使用者沒有讀取登錄機碼所需的使用權限。</exception>
        <exception cref="T:System.IO.IOException">包含指定值的 <see cref="T:Microsoft.Win32.RegistryKey" /> 已標記為刪除。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> 不是以有效的登錄根目錄開頭。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要從登錄讀取。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">讀取REG_EXPAND_SZ類型的註冊表項。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_LOCAL_MACHINE" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` 通常用來儲存不會在 Windows 中改變使用者的設定。 電腦的所有使用者都共用此金鑰。 其五個子機碼 (`Hardware`， `SAM`， `Security`， `Software`，和`System`) 保存在本機電腦的組態資料。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與完成工作所需的最低權限。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 此範例會開啟子機碼`Software\MyCompany\Preferences`，然後將值`FontColor`至`"red"`。  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_PERFORMANCE_DATA" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` 用來存取軟體元件的效能資訊。 當它安裝，並將計數器資料的寫入，當它執行時，每個軟體元件就會建立它的物件和計數器的金鑰。 這項資料不會儲存在登錄中，雖然登錄用來存取它。 相反地，呼叫登錄函數，透過`HKEY_PERFORMANCE_DATA`會使系統收集適當的系統物件管理員中的資料。  
  
 這個索引鍵不存在於 Windows 98 系統;嘗試使用它呼叫以外`Name`方法會擲回<xref:System.IO.IOException>。  
  
 此機碼無法正常寫入;嘗試在其上建立子機碼將會擲回<xref:System.IO.IOException>。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與完成工作所需的最低權限。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|描述|  
|-----------|-----------------|  
|AllAccess|建立、 讀取和寫入登錄變數的存取權。|  
|建立|建立登錄變數的存取權限。|  
|NoAccess|不允許存取登錄變數。|  
|讀取|登錄變數的讀取存取。|  
|Write|登錄變數的寫入存取。|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|以|請參閱|  
|--------|---------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 這個範例會取得該值`ThisSoftware`從`MyCompany`子機碼。  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將值寫入至登錄機碼中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. 要寫入之索引鍵的名稱。 必要。</param>
        <param name="valueName">
          <see langword="String" />. 要寫入之值的名稱。 必要。</param>
        <param name="value">
          <see langword="Object" />. 要寫入的值。 必要。</param>
        <summary>將值寫入至登錄機碼中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定的索引鍵或值不存在，它會建立它。  
  
 以下是範例工作涉及`My.Computer.Registry.SetValue`方法。  
  
|以|請參閱|  
|--------|---------|  
|登錄機碼中設定的值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 此範例會將值`FontColor`為 「 紅色 」 索引鍵中`HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`。  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="Nothing" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> 不是以有效的登錄根目錄開頭。  
  
-或- 
 <paramref name="valueName" /> 超過允許的最大長度 (255 個字元)。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 為唯讀，因此無法寫入 (例如，它是根層次節點，或未以寫入權限來開啟它)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或修改登錄機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. 要寫入之索引鍵的名稱。 必要。</param>
        <param name="valueName">
          <see langword="String" />. 要寫入之值的名稱。 必要。</param>
        <param name="value">
          <see langword="Object" />. 要寫入的值。 必要。</param>
        <param name="valueKind">
          <see cref="T:Microsoft.Win32.RegistryValueKind" />. 必要。</param>
        <summary>將值寫入至登錄機碼中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果指定的索引鍵或值不存在，它會建立它。  
  
 以下是範例工作涉及`My.Computer.Registry.SetValue`方法。  
  
|以|請參閱|  
|--------|---------|  
|登錄機碼中設定的值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 此範例會將值`FontColor`為 「 紅色 」 索引鍵中`HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`。  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> 為 <see langword="Nothing" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> 不是以有效的登錄根目錄開頭。  
  
-或- 
 <paramref name="keyName" /> 超過允許的最大長度 (255 個字元)。  
  
-或- 
<paramref name="value" /> 的型別與 <paramref name="valueKind" /> 所指定的登錄資料型別不符，因此無法正確轉換資料。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> 為唯讀，因此無法寫入 (例如，它是根層次節點，或未以寫入權限來開啟它)。</exception>
        <exception cref="T:System.Security.SecurityException">使用者沒有建立或修改登錄機碼所需的使用權限。</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">若要修改指定的登錄機碼，如果存在，或不存在時建立登錄機碼。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />， <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回 <see cref="T:Microsoft.Win32.RegistryKey" /> 型別，此型別可提供 <see langword="HKEY_USERS" /> 的存取。</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` 主要用來儲存使用者第一次的預設設定。  
  
 <xref:System.Security.Permissions.RegistryPermission>類別，這是在<xref:System.Security.Permissions>命名空間、 控制登錄變數存取。 您不應將登錄變數儲存在記憶體位置，因為不具備 <xref:System.Security.Permissions.RegistryPermission> 的程式碼亦可存取這個位置。 同樣地，當授與權限，授與完成工作所需的最低權限。  
  
 登錄權限存取值是由 <xref:System.Security.Permissions.RegistryPermissionAccess> 列舉定義。 下表會詳細說明其成員。  
  
|值|登錄變數的存取權|  
|-----------|----------------------------------|  
|AllAccess|建立、讀取和寫入|  
|建立|建立|  
|NoAccess|沒有存取權。|  
|讀取|讀取|  
|Write|Write|  
  
 下表列出與工作的範例`My.Computer.Registry`物件。  
  
|**若要**|**請參閱**|  
|------------|-------------|  
|建立登錄機碼，並設定其值|[如何：建立登錄機碼並設定其值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|刪除登錄機碼|[如何：刪除登錄機碼](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|讀取登錄機碼的值|[如何：讀取登錄機碼的值](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 此範例會計算，並顯示登錄機碼中的值數目。  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">物件 (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">讀取和寫入登錄 (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">安全性和登錄</related>
      </Docs>
    </Member>
  </Members>
</Type>