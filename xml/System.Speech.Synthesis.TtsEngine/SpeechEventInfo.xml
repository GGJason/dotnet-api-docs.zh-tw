<Type Name="SpeechEventInfo" FullName="System.Speech.Synthesis.TtsEngine.SpeechEventInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f23dd4b7940cca2394fd5b09d6787e8a1f016003" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36608005" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct SpeechEventInfo : IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SpeechEventInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure SpeechEventInfo&#xA;Implements IEquatable(Of SpeechEventInfo)" />
  <TypeSignature Language="C++ CLI" Value="public value class SpeechEventInfo : IEquatable&lt;System::Speech::Synthesis::TtsEngine::SpeechEventInfo&gt;" />
  <TypeSignature Language="F#" Value="type SpeechEventInfo = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Speech.Synthesis.TtsEngine.SpeechEventInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ImmutableObject(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="81d4e-101">用來指定要在自訂合成語音引擎將文字轉譯為語音過程中產生之事件的型別及其引數 (如果有的話)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81d4e-101">Used to specify the type of event, and its arguments (if any)  to be generated as part of the rendering of text to speech by a custom synthetic speech engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d4e-102">自訂的語音合成引擎藉由提供適當要求的語音平台事件產生<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A>隸屬<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>引擎站台物件傳遞到實作<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>，<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-102">A custom speech synthesis engine requests the generation of events under the Speech Platform by providing an appropriate <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance to <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.AddEvents%2A> member of the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> engine site object passed to implementations of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d4e-103">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-103">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-104">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-104">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-105">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-105">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-106">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-106">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-107">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-107">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-108">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-108">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="81d4e-109">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-109">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpeechEventInfo (short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int16 eventId, int16 parameterType, int32 param1, native int param2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.#ctor(System.Int16,System.Int16,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventId As Short, parameterType As Short, param1 As Integer, param2 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpeechEventInfo(short eventId, short parameterType, int param1, IntPtr param2);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo : int16 * int16 * int * nativeint -&gt; System.Speech.Synthesis.TtsEngine.SpeechEventInfo" Usage="new System.Speech.Synthesis.TtsEngine.SpeechEventInfo (eventId, parameterType, param1, param2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int16" />
        <Parameter Name="parameterType" Type="System.Int16" />
        <Parameter Name="param1" Type="System.Int32" />
        <Parameter Name="param2" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="eventId">
          <span data-ttu-id="81d4e-110">
            <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" />的執行個體，指出<see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件要處理的語音平台事件的排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-110">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> indicating the sort of Speech platform event the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to handle.</span>
          </span>
        </param>
        <param name="parameterType">
          <span data-ttu-id="81d4e-111">
            <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> 的執行個體，指出如何解譯 <c>param2</c> 的 <see langword="System.IntPtr" /> 參考，以及隱含地指出 <c>param1</c> 的使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-111">An instance of <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> indicating how the <see langword="System.IntPtr" /> reference of <c>param2</c> is to be interpreted, and, by implication, the use of <c>param1</c>.</span>
          </span>
        </param>
        <param name="param1">
          <span data-ttu-id="81d4e-112">當要建構的<see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />的執行個體所要求的事件產生時，要傳遞至語音平台的整數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-112">An integer value to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span>
          </span>
          <span data-ttu-id="81d4e-113">這個整數的確切意義由 <c>parameterType</c> 的值隱含決定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-113">The exact meaning of this integer is implicitly determined by the value of <c>parameterType</c>.</span>
          </span>
        </param>
        <param name="param2">
          <span data-ttu-id="81d4e-114">參考物件的 <see langword="System.IntPtr" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-114">A <see langword="System.IntPtr" /> instance referencing an object.</span>
          </span>
          <span data-ttu-id="81d4e-115">當要建構的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 的執行個體所要求的事件產生時，要傳遞至語音平台的整數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-115">to be passed to the Speech platform when the event requested by the instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> to be constructed is generated.</span>
          </span>
          <span data-ttu-id="81d4e-116">必須參考的型別是由 <c>parameterType</c> 值來明確定義的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-116">The type which must be referenced is explicitly defined by the value <c>parameterType</c>.</span>
          </span>
          <span data-ttu-id="81d4e-117">值 <see langword="System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-117">The value <see langword="System.IntPtr.Zero" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d4e-118">建構適當的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-118">Constucts an appropriate <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d4e-119">允許的值用於`parameterType`， `param1`，和`param2`和它們的意義取決於所要求的事件類型的成員所指定<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>用於`eventId`。</span><span class="sxs-lookup"><span data-stu-id="81d4e-119">Permitted values used for `parameterType`, `param1`, and `param2` and their meaning is dictated by the type of event being requested, as specified by the member of <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> used for `eventId`.</span></span>  
  
 <span data-ttu-id="81d4e-120">為適當值的詳細資訊`parameterType`， `param1`，和`param2`，請參閱文件 <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-120">For detailed information on appropriate values for `parameterType`, `param1`, and `param2`, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A></span></span>  
  
 <span data-ttu-id="81d4e-121">事件，可由語音平台基礎結構的類型可以透過取得<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>合成器引擎網站實作的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-121">The type of the events which can be handled by the Speech platform infrastructure can be obtained through the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the synthesizer engine site implementation of <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d4e-122">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-123">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-124">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-125">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-125">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-126">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-126">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-127">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-127">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="81d4e-128">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-128">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-129">判斷 <c>SpeechEventInfo</c> 執行個體是否等於另一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-129">Determines whether a <c>SpeechEventInfo</c> instance is equal to another object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="speechEventInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="81d4e-130">要評估的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-130">The object to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d4e-131">判斷指定的物件是否為 <c>SpeechEventInfo</c> 的執行個體且等於 <c>SpeechEventInfo</c> 目前的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-131">Determines whether a specified object is an instance of <c>SpeechEventInfo</c> and equal to the current instance of <c>SpeechEventInfo</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d4e-132">如果 <paramref name="obj" /> 等於目前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-132">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Speech.Synthesis.TtsEngine.SpeechEventInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals(System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Speech::Synthesis::TtsEngine::SpeechEventInfo other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="speechEventInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="81d4e-133">要評估的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-133">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to evaluate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d4e-134">判斷指定的 <c>SpeechEventInfo</c> 物件是否等於 <c>SpeechEventInfo</c> 目前的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-134">Determines whether a specified <c>SpeechEventInfo</c> object is equal to the current instance of <c>SpeechEventInfo</c>.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d4e-135">如果 <paramref name="other" /> 等於目前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-135">
              <see langword="true" /> if <paramref name="other" /> is equal to the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventId">
      <MemberSignature Language="C#" Value="public short EventId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 EventId" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventId As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short EventId { short get(); };" />
      <MemberSignature Language="F#" Value="member this.EventId : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-136">取得和設定使用 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 之執行個體進行要求的語音平台事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-136">Gets and set the Speech platform event which an instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d4e-137">傳回 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> 的成員做為 <see langword="short" />，表示 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件要產生的事件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-137">Returns a member of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEventId" /> as a <see langword="short" />, indicating the event type the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object is to generate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81d4e-138">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-138">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-139">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-139">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-140">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-140">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-141">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-141">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-142">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-142">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-143">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-143">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="81d4e-144">上的參數<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>，包括<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>用來記錄事件產生透過`LogSpeechEvent`方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-144">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="81d4e-145">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-145">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="speechEventInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-146">提供 <c>SpeechEventInfo</c> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-146">Provides a hash code for a <c>SpeechEventInfo</c> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d4e-147">
            <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-147">A hash code for a <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Equality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="event1 = event2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1">
          <span data-ttu-id="81d4e-148">與 <c>event2</c> 相比較的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-148">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event2</c>.</span>
          </span>
        </param>
        <param name="event2">
          <span data-ttu-id="81d4e-149">與 <c>event1</c> 相比較的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-149">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d4e-150">判斷 <c>SpeechEventInfo</c> 的兩個執行個體是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-150">Determines whether two instances of <c>SpeechEventInfo</c> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d4e-151">如果 <paramref name="event1" /> 與 <paramref name="event2" /> 相同則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-151">
              <see langword="true" /> if <paramref name="event1" /> is the same as <paramref name="event2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="81d4e-152">這個運算子的對等方法是<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-152">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event1, valuetype System.Speech.Synthesis.TtsEngine.SpeechEventInfo event2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality(System.Speech.Synthesis.TtsEngine.SpeechEventInfo,System.Speech.Synthesis.TtsEngine.SpeechEventInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (event1 As SpeechEventInfo, event2 As SpeechEventInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Speech::Synthesis::TtsEngine::SpeechEventInfo event1, System::Speech::Synthesis::TtsEngine::SpeechEventInfo event2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Speech.Synthesis.TtsEngine.SpeechEventInfo * System.Speech.Synthesis.TtsEngine.SpeechEventInfo -&gt; bool" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.op_Inequality (event1, event2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event1" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
        <Parameter Name="event2" Type="System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
      </Parameters>
      <Docs>
        <param name="event1">
          <span data-ttu-id="81d4e-153">與 <c>event2</c> 相比較的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-153">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event2</c>.</span>
          </span>
        </param>
        <param name="event2">
          <span data-ttu-id="81d4e-154">與 <c>event1</c> 相比較的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-154">The <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object to compare to <c>event1</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81d4e-155">判斷 <c>SpeechEventInfo</c> 的兩個執行個體是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-155">Determines whether two instances of <c>SpeechEventInfo</c> are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81d4e-156">如果 <paramref name="event1" /> 與 <paramref name="event2" /> 不同則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-156">
              <see langword="true" /> if <paramref name="event1" /> is different from <paramref name="event2" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="81d4e-157">這個運算子的對等方法是<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-157">The equivalent method for this operator is <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Equals%28System.Speech.Synthesis.TtsEngine.SpeechEventInfo%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param1">
      <MemberSignature Language="C#" Value="public int Param1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Param1" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param1 As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Param1 { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Param1 : int" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-158">取得和設定 <see langword="integer" />值 (建構函式中的 <paramref name="param1" />)，這個值要傳遞至語音平台以產生使用 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 之目前執行個體進行要求的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-158">Gets and set the <see langword="integer" /> value (<paramref name="param1" /> in the constructor) to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d4e-159">傳回在目前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 執行個體所指定的事件產生時，要傳遞至語音平台的 <see langword="integer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-159">Returns the <see langword="integer" /> to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d4e-160">需求和意義<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>唯一取決於值<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>和<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體。</span><span class="sxs-lookup"><span data-stu-id="81d4e-160">The requirements and meaning of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="81d4e-161">如需詳細資訊使用<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>，請參閱文件<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-161">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d4e-162">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-162">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-163">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-163">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-164">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-164">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-165">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-165">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-166">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-166">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-167">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-167">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="81d4e-168">上的參數<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>，包括<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A>用來記錄事件產生透過`LogSpeechEvent`方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-168">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param1%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="81d4e-169">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-169">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Param2">
      <MemberSignature Language="C#" Value="public IntPtr Param2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Param2" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Param2 As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Param2 { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Param2 : nativeint" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-170">取得和設定 <see langword="System.IntPtr" />執行個體 (建構函式中的 <paramref name="param2" />)，這個執行個體所參考的物件要傳遞至語音平台以產生使用 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 之目前執行個體進行要求的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-170">Gets and set the <see langword="System.IntPtr" /> instance (<paramref name="param2" /> in the constructor) referencing the object to be passed to the Speech platform to generate an event the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is used to request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d4e-171">傳回 <see langword="System.IntPtr" />，參考在目前的 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 執行個體所指定的事件產生時，要傳遞至語音平台的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-171">Returns the <see langword="System.IntPtr" /> referencing the object to be passed to Speech platform when the event specified by the current instance of <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> is generated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d4e-172">上的需求`System.IntPtr`參考<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>唯一取決於值<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>和<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體。</span><span class="sxs-lookup"><span data-stu-id="81d4e-172">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="81d4e-173">如需詳細資訊使用<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>，請參閱文件<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-173">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d4e-174">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-174">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-175">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-175">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-176">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-176">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-177">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-177">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-178">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-178">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-179">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-179">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="81d4e-180">上的參數<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>，包括<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>用來記錄事件產生透過`LogSpeechEvent`方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-180">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="81d4e-181">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-181">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public short ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short ParameterType { short get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : int16" Usage="System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81d4e-182">傳回目前 <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> 物件上 <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> 參數所傳回的 <see langword="IntPtr" /> 所指向之物件的資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-182">Returns the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter on the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81d4e-183">對應至 <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> 列舉成員的 <see langword="short" />值，指出<see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" />參數所傳回的<see langword="IntPtr" />所指的物件的資料型別，並用來作為目前<see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />物件的建構函式的第二個引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81d4e-183">A <see langword="short" /> value corresponding to a member of the <see cref="T:System.Speech.Synthesis.TtsEngine.EventParameterType" /> enumeration and indicating the data type of the object pointed to by the <see langword="IntPtr" /> returned by the <see cref="P:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2" /> parameter and used as the second argument for the constructor of the current <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81d4e-184">上的需求`System.IntPtr`參考<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>唯一取決於值<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>和<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體。</span><span class="sxs-lookup"><span data-stu-id="81d4e-184">The requirements on the `System.IntPtr` reference of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A> property of <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> are uniquely determined by the values of the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A> and <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> properties the <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance.</span></span>  
  
 <span data-ttu-id="81d4e-185">如需詳細資訊使用<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>，請參閱文件<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>。</span><span class="sxs-lookup"><span data-stu-id="81d4e-185">For detailed information on how use <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.Param2%2A>, see documentation for <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81d4e-186">下列範例是繼承自自訂語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用使用<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="81d4e-186">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="81d4e-187">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="81d4e-187">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="81d4e-188">接收的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞給`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-188">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="81d4e-189">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值的中找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>每個屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="81d4e-189">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="81d4e-190">將 Americanism Britishisms 以轉譯要讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="81d4e-190">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="81d4e-191">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面提供給實作支援<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成器完成百分比的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="81d4e-191">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
         <span data-ttu-id="81d4e-192">上的參數<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>，包括<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>用來記錄事件產生透過`LogSpeechEvent`方法。</span><span class="sxs-lookup"><span data-stu-id="81d4e-192">The parameters on <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, including <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A> are used to log the event generated through the `LogSpeechEvent` method.</span></span>  
  
3.  <span data-ttu-id="81d4e-193">語音轉譯引擎接著會呼叫以修改<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="81d4e-193">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>