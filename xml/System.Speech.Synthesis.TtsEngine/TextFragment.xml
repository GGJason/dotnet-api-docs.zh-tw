<Type Name="TextFragment" FullName="System.Speech.Synthesis.TtsEngine.TextFragment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fec15f3aa469e16359d9844dba0b87ed75e1b2a" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39729397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextFragment" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit TextFragment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TextFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFragment" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFragment" />
  <TypeSignature Language="F#" Value="type TextFragment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d9881-101">包含語音合成器引擎所使用的文字和語音屬性資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9881-101">Contains text and speech attribute information for consumption by a speech synthsizer engine.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-102">語音平台基礎結構會解壓縮之 SSML 輸入和建構的 XML 架構結構<xref:System.Speech.Synthesis.TtsEngine.TextFragment>物件。</span><span class="sxs-lookup"><span data-stu-id="d9881-102">The Speech platform infrastructure unpacks the XML based structure of the SSML input and constructs <xref:System.Speech.Synthesis.TtsEngine.TextFragment> objects.</span></span>  
  
 <span data-ttu-id="d9881-103">語音內容均可透過<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>， <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，並<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>的屬性<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體。</span><span class="sxs-lookup"><span data-stu-id="d9881-103">Speech content is available through the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> properties of a <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance.</span></span>  
  
 <span data-ttu-id="d9881-104">語音屬性資訊，例如強調、 音調、 和速率會取自<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回的物件<xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d9881-104">Speech attribute information, such as emphasis, pitch, and rate, are obtained from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> object returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment><xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9881-105">下列範例是繼承自客製化語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用將<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="d9881-105">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="d9881-106">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="d9881-106">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="d9881-107">收到陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞至`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="d9881-107">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="d9881-108">特別注意用於尊重<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>建立時<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體。</span><span class="sxs-lookup"><span data-stu-id="d9881-108">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="d9881-109">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值，藉由從找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性上的<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性的每個<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="d9881-109">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="d9881-110">將以 Britishisms Americanism 轉譯要讀出的文字中。</span><span class="sxs-lookup"><span data-stu-id="d9881-110">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="d9881-111">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>提供的實作支援介面<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成進度計量表的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="d9881-111">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="d9881-112">然後會呼叫語音轉譯引擎使用修改後<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="d9881-112">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TextFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9881-113">建構 <see langword="TextFragment" /> 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-113">Constructs a new instance of <see langword="TextFragment" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-114">預設建構函式<xref:System.Speech.Synthesis.TtsEngine.TextFragment>。</span><span class="sxs-lookup"><span data-stu-id="d9881-114">Default constructor for <xref:System.Speech.Synthesis.TtsEngine.TextFragment>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Speech.Synthesis.TtsEngine.FragmentState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Synthesis.TtsEngine.FragmentState State" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.State" />
      <MemberSignature Language="VB.NET" Value="Public Property State As FragmentState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Synthesis::TtsEngine::FragmentState State { System::Speech::Synthesis::TtsEngine::FragmentState get(); void set(System::Speech::Synthesis::TtsEngine::FragmentState value); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Speech.Synthesis.TtsEngine.FragmentState with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.FragmentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9881-115">取得或設定 <see langword="TextFragment" /> 的語音屬性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-115">Gets or sets speech attribute information for a <see langword="TextFragment" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9881-116">
            <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" />執行個體會傳回，或用來設定<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />的語音屬性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-116">A <see cref="T:System.Speech.Synthesis.TtsEngine.FragmentState" /> instance is returned, or used to set speech attribute information for a <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-117">此屬性的預設值為 `null`。</span><span class="sxs-lookup"><span data-stu-id="d9881-117">The default value of this property is `null`.</span></span>  
  
 <span data-ttu-id="d9881-118">韻律資訊可以從執行個體取得<xref:System.Speech.Synthesis.TtsEngine.Prosody>所傳回<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A>執行個體上的屬性<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>。</span><span class="sxs-lookup"><span data-stu-id="d9881-118">Prosody information can be obtained from the instance of <xref:System.Speech.Synthesis.TtsEngine.Prosody> returned by the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Prosody%2A> property on the instance of <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public int TextLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9881-119">取得或設定片段中語音文字的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-119">Gets or sets the length of the speech text in the fragment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9881-120">
            <see langword="int" />會傳回，也可以用來設定和要說出的這個片段相關聯的文字字串的長度（以字元為單位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-120">An <see langword="int" /> is returned or can be used to set the length, in character, of the text string associated with this fragment to be spoken.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-121">這個屬性的預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d9881-121">The default value of this property is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9881-122">下列範例是繼承自客製化語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用將<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="d9881-122">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="d9881-123">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="d9881-123">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="d9881-124">收到陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞至`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="d9881-124">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="d9881-125">特別注意用於尊重<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>建立時<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體。</span><span class="sxs-lookup"><span data-stu-id="d9881-125">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="d9881-126">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值，藉由從找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性上的<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性的每個<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="d9881-126">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="d9881-127">將以 Britishisms Americanism 轉譯要讀出的文字中。</span><span class="sxs-lookup"><span data-stu-id="d9881-127">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="d9881-128">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>提供的實作支援介面<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成進度計量表的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="d9881-128">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="d9881-129">然後會呼叫語音轉譯引擎使用修改後<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="d9881-129">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextOffset">
      <MemberSignature Language="C#" Value="public int TextOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextOffset" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property TextOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextOffset : int with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9881-130">取得或設定片段中文字起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-130">Gets or sets the starting location of the text in the fragment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9881-131">
            <see langword="int" />會傳回，也可以用來設定和要說出的這個片段相關聯的該文字字串部分的開始位置（以字元為單位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-131">An <see langword="int" /> is returned or can be used to set the start location, in character, of the part of text string associated with this fragment to be spoken.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-132">這個屬性的預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d9881-132">The default value of this property is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9881-133">下列範例是繼承自客製化語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用將<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="d9881-133">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="d9881-134">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="d9881-134">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="d9881-135">收到陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞至`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="d9881-135">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="d9881-136">特別注意用於尊重<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>建立時<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體。</span><span class="sxs-lookup"><span data-stu-id="d9881-136">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="d9881-137">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值，藉由從找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性上的<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性的每個<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="d9881-137">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="d9881-138">將以 Britishisms Americanism 轉譯要讀出的文字中。</span><span class="sxs-lookup"><span data-stu-id="d9881-138">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="d9881-139">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>提供的實作支援介面<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成進度計量表的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="d9881-139">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="d9881-140">然後會呼叫語音轉譯引擎使用修改後<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="d9881-140">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextToSpeak">
      <MemberSignature Language="C#" Value="public string TextToSpeak { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TextToSpeak" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      <MemberSignature Language="VB.NET" Value="Public Property TextToSpeak As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TextToSpeak { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextToSpeak : string with get, set" Usage="System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9881-141">設定或取得片段的語音文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-141">Sets or gets the speech text of the fragment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9881-142">
            <see langword="System.String" />會傳回，或者可以用來設定語音合成引擎所要使用的語音文字以產生音訊輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9881-142">A <see langword="System.String" /> is returned or can be used to set the speech text to be used by a speech synthesis engine to generate audio output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9881-143">此屬性的預設值為 `System.String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="d9881-143">The default value of this property is `System.String.Empty`.</span></span>  
  
 <span data-ttu-id="d9881-144">應用程式是免費的值完全變更<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>。</span><span class="sxs-lookup"><span data-stu-id="d9881-144">Applications are free to completely change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>.</span></span>  
  
 <span data-ttu-id="d9881-145">重設的值<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>不會變更的值<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>和<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>。</span><span class="sxs-lookup"><span data-stu-id="d9881-145">Resetting the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> will not change the value of <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A> and <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9881-146">下列範例是繼承自客製化語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用將<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，和<xref:System.Speech.Synthesis.TtsEngine.TtsEventId>。</span><span class="sxs-lookup"><span data-stu-id="d9881-146">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.</span></span>  
  
 <span data-ttu-id="d9881-147">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="d9881-147">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="d9881-148">收到陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞至`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="d9881-148">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
     <span data-ttu-id="d9881-149">特別注意用於尊重<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>，<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A>原始<xref:System.Speech.Synthesis.TtsEngine.TextFragment>建立時<xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A>新<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體。</span><span class="sxs-lookup"><span data-stu-id="d9881-149">Particular care is used to respect the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextOffset%2A>, <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextLength%2A> on the original <xref:System.Speech.Synthesis.TtsEngine.TextFragment> when creating the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A> on the new <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances.</span></span>  
  
2.  <span data-ttu-id="d9881-150">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值，藉由從找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性上的<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性的每個<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="d9881-150">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="d9881-151">將以 Britishisms Americanism 轉譯要讀出的文字中。</span><span class="sxs-lookup"><span data-stu-id="d9881-151">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="d9881-152">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>提供的實作支援介面<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成進度計量表的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="d9881-152">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="d9881-153">然後會呼叫語音轉譯引擎使用修改後<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="d9881-153">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>