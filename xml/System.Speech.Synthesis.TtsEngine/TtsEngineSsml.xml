<Type Name="TtsEngineSsml" FullName="System.Speech.Synthesis.TtsEngine.TtsEngineSsml">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f997637b2e580bde8d2113499021c961c4dc139d" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52216766" /></Metadata><TypeSignature Language="C#" Value="public abstract class TtsEngineSsml" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TtsEngineSsml extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TtsEngineSsml" />
  <TypeSignature Language="C++ CLI" Value="public ref class TtsEngineSsml abstract" />
  <TypeSignature Language="F#" Value="type TtsEngineSsml = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3d58a-101">要由所有文字轉換語音合成引擎實作的抽象基底類別。</span><span class="sxs-lookup"><span data-stu-id="3d58a-101">Abstract base class to be implemented by all text to speech synthesis engines.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-102">若要建構自訂的文字轉換語音引擎，應用程式必須一律實作衍生自抽象基底類別的類別<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>。</span><span class="sxs-lookup"><span data-stu-id="3d58a-102">To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>.</span></span>  
  
 <span data-ttu-id="3d58a-103">正確註冊的實作<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>再做合成語音的<xref:System.Speech.Synthesis>命名空間基礎的應用程式。</span><span class="sxs-lookup"><span data-stu-id="3d58a-103">A properly registered implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> can then be used as a synthesizer voice by <xref:System.Speech.Synthesis> name space based applications.</span></span>  
  
 <span data-ttu-id="3d58a-104">物件繼承自<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>必須覆寫下列成員： <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>， <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>， <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>，<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>和<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d58a-104">Objects inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must override the following members: <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>, <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>.</span></span>  
  
 <span data-ttu-id="3d58a-105">最重要的一員<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>實作的類別是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3d58a-105">The most important member of the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> class to be implemented is the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="3d58a-106"><xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>接收的基礎結構的文字剖析器會呼叫方法：</span><span class="sxs-lookup"><span data-stu-id="3d58a-106">The <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A> method is called by the infrastructures text parser receiving:</span></span>  
  
1.  <span data-ttu-id="3d58a-107">參考<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面，可提供存取系統服務，例如即使佇列和寫入音訊輸出。</span><span class="sxs-lookup"><span data-stu-id="3d58a-107">A reference to the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface, which provides access to system services such as even queuing and writing audio output.</span></span>  
  
2.  <span data-ttu-id="3d58a-108">陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>從語音合成標記語言 (SSML) 輸入產生的執行個體。</span><span class="sxs-lookup"><span data-stu-id="3d58a-108">An array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance produced from Speech Synthesis Markup Language (SSML) input.</span></span> <span data-ttu-id="3d58a-109">除了要轉譯為語音的文字，剖析 SSML 儲存要求的屬性相關資訊中的語音<xref:System.Speech.Synthesis.TtsEngine.FragmentState>每個連入相關聯的執行個體<xref:System.Speech.Synthesis.TtsEngine.TextFragment>物件。</span><span class="sxs-lookup"><span data-stu-id="3d58a-109">In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <xref:System.Speech.Synthesis.TtsEngine.FragmentState> instance associated with each incoming <xref:System.Speech.Synthesis.TtsEngine.TextFragment> object.</span></span>  
  
 <span data-ttu-id="3d58a-110">藉由實作中的語音合成器應用程式可以選擇性地提出要求的指定的輸出格式<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A>嘗試提供正確的音訊輸出時要呼叫由平台。</span><span class="sxs-lookup"><span data-stu-id="3d58a-110">A speech synthesizer application can optionally make requests for a specified output format by implementing <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A> to be called by the platform when it tries to provide the correct audio output.</span></span>  
  
 <span data-ttu-id="3d58a-111">實作者也可以提供支援的實作來管理外部定義的發音或詞典，<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>和<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="3d58a-111">An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TtsEngineSsml (string registryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string registryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (registryKey As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TtsEngineSsml(System::String ^ registryKey);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml : string -&gt; System.Speech.Synthesis.TtsEngine.TtsEngineSsml" Usage="new System.Speech.Synthesis.TtsEngine.TtsEngineSsml registryKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="registryKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="registryKey"><span data-ttu-id="3d58a-112">與 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 實作引擎相關聯之語音語彙基元的登錄機碼完整</span><span class="sxs-lookup"><span data-stu-id="3d58a-112">Full name of the registry key for the Voice Token associated with the <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> implementation.</span></span> <span data-ttu-id="3d58a-113">名稱。</span><span class="sxs-lookup"><span data-stu-id="3d58a-113">engine.</span></span></param>
        <summary><span data-ttu-id="3d58a-114">根據適當的語音語彙基元登錄機碼來建構<see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3d58a-114">Constructs a new instance of <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> based on an appropriate Voice Token registry key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-115">通常會產生對這個建構函式呼叫<xref:System.Speech.Synthesis>選取合成語音的應用程式的執行個體所要使用<xref:System.Speech.Synthesis.SpeechSynthesizer>。</span><span class="sxs-lookup"><span data-stu-id="3d58a-115">Calls to this constructor are typically generated by <xref:System.Speech.Synthesis> based applications selecting a synthesizer voice to be used by an instance of <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
 <span data-ttu-id="3d58a-116">A<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>必須是 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens 之下的暫存器。</span><span class="sxs-lookup"><span data-stu-id="3d58a-116">A <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLexicon">
      <MemberSignature Language="C#" Value="public abstract void AddLexicon (Uri uri, string mediaType, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLexicon(class System.Uri uri, string mediaType, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddLexicon(Uri ^ uri, System::String ^ mediaType, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member AddLexicon : Uri * string * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.AddLexicon (uri, mediaType, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="3d58a-117"><see langword="System.Uri" />的有效執行個體，指出詞典資訊的位置。</span><span class="sxs-lookup"><span data-stu-id="3d58a-117">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="mediaType"><span data-ttu-id="3d58a-118">字串，包含字典的媒體類型。</span><span class="sxs-lookup"><span data-stu-id="3d58a-118">A string containing the media type of the lexicon.</span></span> <span data-ttu-id="3d58a-119">媒體類型不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="3d58a-119">Media types are case insensitive.</span></span></param>
        <param name="site"><span data-ttu-id="3d58a-120">用來與平台基礎結構互動的<see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />介面參考。</span><span class="sxs-lookup"><span data-stu-id="3d58a-120">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface used to interact with the platform infrastructure.</span></span></param>
        <summary><span data-ttu-id="3d58a-121">將語彙加入至目前的 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 執行個體所實作的 <see langword="Synthesizer" /><see langword="Voice" />。</span><span class="sxs-lookup"><span data-stu-id="3d58a-121">Adds a lexicon to the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-122">發音字典是單字或片語，以及指定使用適當的發音英文字母及其發聲的集合。</span><span class="sxs-lookup"><span data-stu-id="3d58a-122">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="3d58a-123">這個方法通常會呼叫平台基礎結構，以回應<xref:System.Speech.Synthesis>呼叫的應用程式<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>並使用目前所實作的合成語音<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3d58a-123">This method is typically called by the platform infrastructure in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
 <span data-ttu-id="3d58a-124">值`mediaType`通常是 MIME 規格，因為 SSML 規格會使用 MIME 媒體規格。</span><span class="sxs-lookup"><span data-stu-id="3d58a-124">The value of `mediaType` is typically a MIME specification, as the SSML specification uses MIME for media specifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d58a-125">實作<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A>使用<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>介面傳遞至從資源載入字典。</span><span class="sxs-lookup"><span data-stu-id="3d58a-125">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A> uses the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interface passed in to load a lexicon from a resource.</span></span> <span data-ttu-id="3d58a-126">接著會儲存`System.IO.Stream`到 「 詞典 」 中`System.Collections.Generic.Dictionary`執行個體，以詞典 URI 編製索引。</span><span class="sxs-lookup"><span data-stu-id="3d58a-126">It then stores a `System.IO.Stream` to the lexicon in a `System.Collections.Generic.Dictionary` instance, indexed by the lexicon URI.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d58a-127">它是以完全熟悉，而且能夠處理儲存在字典實作的責任<paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="3d58a-127">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="3d58a-128">實作也必須追蹤並管理所有詞典，它會將新增的存留期。</span><span class="sxs-lookup"><span data-stu-id="3d58a-128">The implementation must also keep track and manage the lifetimes of all lexicons it adds.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public abstract IntPtr GetOutputFormat (System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetOutputFormat(valuetype System.Speech.Synthesis.TtsEngine.SpeakOutputFormat speakOutputFormat, native int targetWaveFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IntPtr GetOutputFormat(System::Speech::Synthesis::TtsEngine::SpeakOutputFormat speakOutputFormat, IntPtr targetWaveFormat);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputFormat : System.Speech.Synthesis.TtsEngine.SpeakOutputFormat * nativeint -&gt; nativeint" Usage="ttsEngineSsml.GetOutputFormat (speakOutputFormat, targetWaveFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speakOutputFormat" Type="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" />
        <Parameter Name="targetWaveFormat" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="speakOutputFormat"><span data-ttu-id="3d58a-129"><see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> 列舉的有效成員，表示要求的音訊輸出格式的型別。</span><span class="sxs-lookup"><span data-stu-id="3d58a-129">Valid member of the <see cref="T:System.Speech.Synthesis.TtsEngine.SpeakOutputFormat" /> enumeration indicating the type of requested audio output format.</span></span></param>
        <param name="targetWaveFormat"><span data-ttu-id="3d58a-130"><see langword="struct" />（其包含<paramref name="speakOutputFormat" />引數所要求的音訊格式類型的詳細設定）的指標。</span><span class="sxs-lookup"><span data-stu-id="3d58a-130">A pointer to a <see langword="struct" /> containing detail setting for the audio format type requested by the <paramref name="speakOutputFormat" /> argument.</span></span></param>
        <summary><span data-ttu-id="3d58a-131">傳回指定的合成引擎所支援的最符合音訊輸出，以回應合成器引擎支援特定輸出格式的要求。</span><span class="sxs-lookup"><span data-stu-id="3d58a-131">Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</span></span></summary>
        <returns><span data-ttu-id="3d58a-132">傳回有效的 <see langword="IntPtr" /> 執行個體，參考包含輸出格式詳細資訊的 <see langword="struct" />。</span><span class="sxs-lookup"><span data-stu-id="3d58a-132">Returns a valid <see langword="IntPtr" /> instance referring to a <see langword="struct" /> containing detailed information about the output format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-133">做為結構`targetWaveFormat`且傳回的方法應該與相容`WAVEFORMATEX`SAPI、 底下可使用，且傳回的值應該使用配置`CoTaskMemAlloc`。</span><span class="sxs-lookup"><span data-stu-id="3d58a-133">The structure used as `targetWaveFormat` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI, and the returned value should be allocated using `CoTaskMemAlloc`.</span></span>  
  
 <span data-ttu-id="3d58a-134">`struct`必須提供相當於的功能：</span><span class="sxs-lookup"><span data-stu-id="3d58a-134">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="3d58a-135">下列範例實作驗證選取的輸入，如果它們位於容錯使用它們，否則使用預設值。</span><span class="sxs-lookup"><span data-stu-id="3d58a-135">The sample implementation below validates selected inputs, using them if they are within tolerances, otherwise using default values.</span></span>  
  
```  
public IntPtr GetOutputFormat(SpeakOutputFormat format, IntPtr targetWaveFormat) {  
    WaveFormat waveFormat = new WaveFormat();  
    WaveFormat rq=new WaveFormat();  
    Marshal.PtrToStructure(targetWaveFormat,rq);  
  
    waveFormat.AvgBytesPerSec = AvgBytesPerSec Min < rq.AvgBytesPerSec && rq.AvgBytesPerSec < AvgBytesPerSecMax? rq.AvgBytesPerSec : 3200;  
    waveFormat.BitsPerSample = BitsPerSampleMin < rq.AvgBytesPerSec && rq.BitsPerSample < BitsPerSampleMax ? rq.AvgBytesPerSec : 3200; 16;  
    waveFormat.BlockAlign = 2;  
    waveFormat.Channels = 1;  
    waveFormat.FormatTag = 1;  
    waveFormat.SamplesPerSec = 16000;  
    waveFormat.Size = 0;  
  
    IntPtr wfx = Marshal.AllocCoTaskMem(Marshal.SizeOf(waveFormat));  
    Marshal.StructureToPtr(waveFormat, wfx, false);  
  
    //Console.WriteLine ("GetOutputFormat called");  
    return wfx;  
}  
internal struct WaveFormat {  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d58a-136">物件繼承自<see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />應該檢查要求的輸出格式所指定<paramref name="targetWaveFormat" />並傳回最接近它支援的格式。</span><span class="sxs-lookup"><span data-stu-id="3d58a-136">Object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> should examine the requested output format as specified by <paramref name="targetWaveFormat" /> and return the closest format that it supports.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveLexicon">
      <MemberSignature Language="C#" Value="public abstract void RemoveLexicon (Uri uri, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveLexicon(class System.Uri uri, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveLexicon(Uri ^ uri, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member RemoveLexicon : Uri * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.RemoveLexicon (uri, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="3d58a-137"><see langword="System.Uri" />的有效執行個體，指出詞典資訊的位置。</span><span class="sxs-lookup"><span data-stu-id="3d58a-137">A valid instance of <see langword="System.Uri" /> indicating the location of the lexicon information.</span></span></param>
        <param name="site"><span data-ttu-id="3d58a-138">由平台基礎結構傳入<see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />介面參考，以允許存取基礎結構資源。</span><span class="sxs-lookup"><span data-stu-id="3d58a-138">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="3d58a-139">將目前 <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> 執行個體所實作的 <see langword="Synthesizer" /><see langword="Voice" /> 目前載入的語彙移除。</span><span class="sxs-lookup"><span data-stu-id="3d58a-139">Removes a lexicon currently loaded by the <see langword="Synthesizer" /><see langword="Voice" /> implemented by the current <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-140">發音字典是單字或片語，以及指定使用適當的發音英文字母及其發聲的集合。</span><span class="sxs-lookup"><span data-stu-id="3d58a-140">A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</span></span>  
  
 <span data-ttu-id="3d58a-141">這個方法通常會呼叫以回應<xref:System.Speech.Synthesis>呼叫的應用程式<xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A>並使用目前所實作的合成語音<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3d58a-141">This method is typically called in response to a <xref:System.Speech.Synthesis> based applications calling <xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A> and using the synthesizer voice implemented by the current <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3d58a-142">實作<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A>會使用字典 URI 查詢執行個體`System.Collections.Generic.Dictionary`如`System.IO.Stream`、 關閉資料流，並移除指的字典的 uri。</span><span class="sxs-lookup"><span data-stu-id="3d58a-142">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A> uses the lexicon URI to query an instance `System.Collections.Generic.Dictionary` for the `System.IO.Stream`, closes the stream and removes the uri referring to the lexicon.</span></span>  
  
```  
public static Dictionary<Uri, Stream> _aLexicons = new Dictionary<Uri, Stream>();  
  
 public void AddLexicon(Uri uri, string mediaType, ITtsEngineSite site) {  
    Stream stream = site.LoadResource(uri, mediaType);  
    _aLexicons.Add(uri, stream);  
}  
  
 public void RemoveLexicon(Uri uri, ITtsEngineSite site) {  
     Stream stream;  
     if (_aLexicons.TryGetValue(uri, out stream)) {  
         stream.Close();  
         _aLexicons.Remove(uri);  
     }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d58a-143">它是以完全熟悉，而且能夠處理儲存在字典實作的責任<paramref name="uri" />。</span><span class="sxs-lookup"><span data-stu-id="3d58a-143">It is the responsibility of the implementation to be fully familiar with and be able to process the lexicon stored at <paramref name="uri" />.</span></span> <span data-ttu-id="3d58a-144">實作也必須追蹤並管理它會移除所有詞典的存留期。</span><span class="sxs-lookup"><span data-stu-id="3d58a-144">The implementation must also keep track and manage the lifetimes of all lexicons it removes.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public abstract void Speak (System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, IntPtr waveHeader, System.Speech.Synthesis.TtsEngine.ITtsEngineSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak(class System.Speech.Synthesis.TtsEngine.TextFragment[] fragment, native int waveHeader, class System.Speech.Synthesis.TtsEngine.ITtsEngineSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Speak (fragment As TextFragment(), waveHeader As IntPtr, site As ITtsEngineSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Speak(cli::array &lt;System::Speech::Synthesis::TtsEngine::TextFragment ^&gt; ^ fragment, IntPtr waveHeader, System::Speech::Synthesis::TtsEngine::ITtsEngineSite ^ site);" />
      <MemberSignature Language="F#" Value="abstract member Speak : System.Speech.Synthesis.TtsEngine.TextFragment[] * nativeint * System.Speech.Synthesis.TtsEngine.ITtsEngineSite -&gt; unit" Usage="ttsEngineSsml.Speak (fragment, waveHeader, site)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="System.Speech.Synthesis.TtsEngine.TextFragment[]" />
        <Parameter Name="waveHeader" Type="System.IntPtr" />
        <Parameter Name="site" Type="System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />
      </Parameters>
      <Docs>
        <param name="fragment"><span data-ttu-id="3d58a-145"><see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />執行個體的陣列，其中包含要轉換成語音的文字。</span><span class="sxs-lookup"><span data-stu-id="3d58a-145">An array of <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> instances containing the text to be rendered into speech.</span></span></param>
        <param name="waveHeader"><span data-ttu-id="3d58a-146"><see langword="IntPtr" />，指向包含音訊輸出格式的結構。</span><span class="sxs-lookup"><span data-stu-id="3d58a-146">An <see langword="IntPtr" /> pointing to a structure containing audio output format.</span></span></param>
        <param name="site"><span data-ttu-id="3d58a-147">由平台基礎結構傳入<see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />介面參考，以允許存取基礎結構資源。</span><span class="sxs-lookup"><span data-stu-id="3d58a-147">A reference to an <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</span></span></param>
        <summary><span data-ttu-id="3d58a-148">以指定的輸出格式來呈現指定的 <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="3d58a-148">Renders specified <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> array in the specified output format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d58a-149">做為結構`waveHeader`且傳回的方法應該與相容`WAVEFORMATEX`SAPI 底下可使用。</span><span class="sxs-lookup"><span data-stu-id="3d58a-149">The structure used as `waveHeader` and returned by the method should compatible with the `WAVEFORMATEX` available under SAPI.</span></span>  
  
 <span data-ttu-id="3d58a-150">`struct`必須提供相當於的功能：</span><span class="sxs-lookup"><span data-stu-id="3d58a-150">The `struct` must provide functionality equivalent to:</span></span>  
  
```  
internal struct WaveFormat  
{  
    public Int16 FormatTag;  
    public Int16 Channels;  
    public int SamplesPerSec;  
    public int AvgBytesPerSec;  
    public Int16 BlockAlign;  
    public Int16 BitsPerSample;  
    public Int16 Size;  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="3d58a-151">下列範例是繼承自客製化語音合成器實作的一部分<xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>，並使用將<xref:System.Speech.Synthesis.TtsEngine.TextFragment>， <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>， <xref:System.Speech.Synthesis.TtsEngine.FragmentState>，及 <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span><span class="sxs-lookup"><span data-stu-id="3d58a-151">The example below is part of a custom speech synthesis implementation inheriting from <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>, and using the use of <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, and <xref:System.Speech.Synthesis.TtsEngine.TtsEventId></span></span>  
  
 <span data-ttu-id="3d58a-152">實作 <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span><span class="sxs-lookup"><span data-stu-id="3d58a-152">The implementation of <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A></span></span>  
  
1.  <span data-ttu-id="3d58a-153">收到陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體，並建立新的陣列<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體傳遞至`Speak`基礎的合成引擎上的方法。</span><span class="sxs-lookup"><span data-stu-id="3d58a-153">Receives an array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances and creates a new array of <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instances to be passed to the `Speak` method on an underlying synthesis engine.</span></span>  
  
2.  <span data-ttu-id="3d58a-154">如果<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction>列舉值，藉由從找到<xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A>屬性上的<xref:System.Speech.Synthesis.TtsEngine.FragmentState>所傳回<xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A>屬性的每個<xref:System.Speech.Synthesis.TtsEngine.TextFragment>執行個體是<xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>，實作</span><span class="sxs-lookup"><span data-stu-id="3d58a-154">If the <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> enumeration value by found from the <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.FragmentState> returned by the <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> property of each <xref:System.Speech.Synthesis.TtsEngine.TextFragment> instance is <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, the implementation</span></span>  
  
    -   <span data-ttu-id="3d58a-155">將以 Britishisms Americanism 轉譯要讀出的文字中。</span><span class="sxs-lookup"><span data-stu-id="3d58a-155">Translates Americanism to Britishisms in the text to be spoken.</span></span>  
  
    -   <span data-ttu-id="3d58a-156">如果<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A>上的屬性<xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite>提供的實作支援介面<xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>事件類型、<xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>執行個體用來建立事件，以便建立合成進度計量表的磁碟機。</span><span class="sxs-lookup"><span data-stu-id="3d58a-156">If the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> property on the <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> interfaces provided to the implementation support the <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> event type, a <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> instance is used to create an event to drive a synthesizer progress meter is created.</span></span>  
  
3.  <span data-ttu-id="3d58a-157">然後會呼叫語音轉譯引擎使用修改後<xref:System.Speech.Synthesis.TtsEngine.TextFragment>陣列。</span><span class="sxs-lookup"><span data-stu-id="3d58a-157">A speech rendering engine is then called with the modified <xref:System.Speech.Synthesis.TtsEngine.TextFragment> array.</span></span>  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
    _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3d58a-158">客製化語音合成器可讓您實作使用<see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />並<see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />都是作為篩選條件或使用平台透過基礎結構的成員建構的合成器應用程式之間的媒介<see cref="N:System.Speech.Synthesis" />命名空間和基礎的系統語音合成引擎。</span><span class="sxs-lookup"><span data-stu-id="3d58a-158">Custom speech synthesizer implements using <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> work as filters or intermediaries between synthesizer applications constructed using the platform infrastructure through the members of the <see cref="N:System.Speech.Synthesis" /> namespace and underlying system speech synthesis engines.</span></span>  
  
<span data-ttu-id="3d58a-159">A<see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />實作：</span><span class="sxs-lookup"><span data-stu-id="3d58a-159">A <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" /> implementation:</span></span> 
<span data-ttu-id="3d58a-160">1.</span><span class="sxs-lookup"><span data-stu-id="3d58a-160">1.</span></span>  <span data-ttu-id="3d58a-161">設陷，或修改傳入的層面<see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" />物件</span><span class="sxs-lookup"><span data-stu-id="3d58a-161">Traps or modify aspects of the incoming <see cref="T:System.Speech.Synthesis.TtsEngine.TextFragment" /> objects</span></span> 
<span data-ttu-id="3d58a-162">2.</span><span class="sxs-lookup"><span data-stu-id="3d58a-162">2.</span></span>  <span data-ttu-id="3d58a-163">會產生任何必要的事件使用的站台參考<see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" />執行個體</span><span class="sxs-lookup"><span data-stu-id="3d58a-163">Generates any necessary events using the site reference to a <see cref="T:System.Speech.Synthesis.TtsEngine.ITtsEngineSite" /> instance</span></span> 
<span data-ttu-id="3d58a-164">3.</span><span class="sxs-lookup"><span data-stu-id="3d58a-164">3.</span></span>  <span data-ttu-id="3d58a-165">會產生實際的合成的語音。</span><span class="sxs-lookup"><span data-stu-id="3d58a-165">Generates the actual synthesized speech.</span></span>  
  
<span data-ttu-id="3d58a-166">產生語音最通常是藉由呼叫<c>唸出</c>語音轉譯引擎的作業系統所提供的其中一個上。</span><span class="sxs-lookup"><span data-stu-id="3d58a-166">Generation of speech is most typically done by calling <c>Speak</c> on one of the speech rendering engines provided by the operating system.</span></span>  
  
<span data-ttu-id="3d58a-167">如果其中一項可用的語音轉譯引擎不會，繼承自物件<see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />必須建立自己的語音轉譯引擎。</span><span class="sxs-lookup"><span data-stu-id="3d58a-167">If one of the available speech rendering engines is not used, a object inheriting from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" /> must create its own speech rendering engine.</span></span>  
  
<span data-ttu-id="3d58a-168">若要存取<c>唸出</c>上取得使用登錄和反映的方法。</span><span class="sxs-lookup"><span data-stu-id="3d58a-168">Access to the <c>Speak</c> method on obtained using the registry and reflection.</span></span> <span data-ttu-id="3d58a-169">。</span><span class="sxs-lookup"><span data-stu-id="3d58a-169">.</span></span>  
  
<span data-ttu-id="3d58a-170">當您繼承自<see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />，您必須覆寫下列成員： <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />， <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />， <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />， <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />，和<see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />。</span><span class="sxs-lookup"><span data-stu-id="3d58a-170">When you inherit from <see cref="T:System.Speech.Synthesis.TtsEngine.TtsEngineSsml" />, you must override the following members: <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.#ctor(System.String)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon(System.Uri,System.String,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon(System.Uri,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />, <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat(System.Speech.Synthesis.TtsEngine.SpeakOutputFormat,System.IntPtr)" />, and <see cref="M:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak(System.Speech.Synthesis.TtsEngine.TextFragment[],System.IntPtr,System.Speech.Synthesis.TtsEngine.ITtsEngineSite)" />.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>