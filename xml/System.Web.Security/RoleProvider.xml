<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="343897bda016eaed6078cde489e4b01f3daf654c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37750223" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義 ASP.NET 為使用自訂角色提供者提供角色管理服務所履行的合約。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 角色管理可讓您輕鬆地為您的 ASP.NET 應用程式使用許多不同的角色提供者。 您可以使用隨附於.NET Framework 中，提供的角色提供者，或者您可以實作自己的提供者。  
  
 在實作自訂角色提供者時，您必須繼承<xref:System.Web.Security.RoleProvider>抽象類別。  
  
 有兩個建立自訂角色提供者的主要原因。  
  
-   您要存放在隨附於.NET Framework 中，例如 FoxPro 資料庫、 Oracle 資料庫或其他資料來源的角色提供者不支援的資料來源中的角色資訊。  
  
-   您要管理使用不同於.NET Framework 所隨附的提供者所使用的資料庫結構描述的資料庫結構描述的角色資訊。 常見的例子，這是已經存在於 SQL Server 資料庫中的公司或網站的角色資料。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.RoleProvider" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您不需要實作繼承的類別的建構函式<xref:System.Web.Security.RoleProvider>抽象類別。 初始化值<xref:System.Web.Security.RoleProvider>實作會傳遞至<xref:System.Configuration.Provider.ProviderBase.Initialize%2A>方法實作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要加入指定角色中的使用者名稱字串陣列。</param>
        <param name="roleNames">要加入指定使用者名稱的角色名稱字串陣列。</param>
        <summary>為設定的 <see langword="applicationName" /> 將指定的使用者名稱加入指定的角色中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> 會呼叫<xref:System.Web.Security.Roles>指定的使用者與指定的角色，在資料來源建立關聯的類別。 角色加入至已設定<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。  
  
 指定的角色名稱是否有任何已設定找不到`applicationName`，我們建議您的提供者會擲回<xref:System.Configuration.Provider.ProviderException>。  
  
 如果任何指定的使用者名稱未與任何已設定指定的角色名稱相關聯`applicationName`，我們建議您的提供者會擲回<xref:System.Configuration.Provider.ProviderException>。  
  
 如果有任何指定的使用者名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
 如果有任何指定的角色名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
 如果您的資料來源支援交易，建議您包含每個作業在交易中加上您回復交易並擲回例外狀況，如果有任何加入作業將會失敗。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式的名稱，以儲存及擷取角色資訊。</summary>
        <value>要儲存和擷取角色資訊的應用程式名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.ApplicationName%2A>正由<xref:System.Web.Security.Roles>類別不同的應用程式相關聯的使用者和角色。 這可讓多個應用程式使用相同的資料庫來儲存使用者和角色資訊，而不重複的使用者名稱或角色名稱之間發生衝突。 多個 ASP.NET 應用程式可以藉由指定相同的值中使用相同的資料庫<xref:System.Web.Security.Roles.ApplicationName%2A>屬性。 <xref:System.Web.Security.Roles.ApplicationName%2A>屬性可以設定以程式設計的方式，或它的 Web 應用程式使用的組態檔中可以宣告方式設定`applicationName`屬性。  
  
 如果沒有<xref:System.Web.Security.RoleProvider.ApplicationName%2A>屬性已指定，我們建議<xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A>使用屬性的值。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.ApplicationName%2A>屬性。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要建立的角色名稱。</param>
        <summary>將新角色加入已設定 <see langword="applicationName" /> 的資料來源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> 會呼叫<xref:System.Web.Security.Roles.CreateRole%2A>方法<xref:System.Web.Security.Roles>類別將指定的角色新增至已設定的資料來源<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。  
  
 如果指定的角色名稱已存在於已設定`applicationName`，是`null`，或者是空的字串，我們建議您的提供者擲回例外狀況。  
  
 如果指定的角色名稱包含逗號，我們建議您的提供者擲回例外狀況。  
  
 如果您的資料來源會限制角色名稱的長度，比方說，透過固定長度資料行的資料表，以在資料庫中，我們建議如果角色名稱超過允許的資料來源的最大長度，擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.CreateRole%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">要刪除的角色名稱。</param>
        <param name="throwOnPopulatedRole">如果 <see langword="true" />，且如果 <c>roleName</c> 有一或多個成員則擲回例外狀況，且不刪除 <c>roleName</c>。</param>
        <summary>為已設定的 <see langword="applicationName" /> 移除資料來源中的角色。</summary>
        <returns>如果成功刪除角色，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> 會呼叫<xref:System.Web.Security.Roles.DeleteRole%2A>而<xref:System.Web.Security.Roles.DeleteRole%2A>方法<xref:System.Web.Security.Roles>類別來設定資料來源刪除指定的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>。  
  
 當您從資料來源刪除角色時，請確定，您也可以刪除任何使用者名稱和設定的已刪除的角色之間的關聯`applicationName`。  
  
 如果`throwOnPopulatedRole`是`true`，以及所識別的角色`roleName`參數具有一或多個成員，會擲回<xref:System.Configuration.Provider.ProviderException>且不刪除角色。 如果`throwOnPopulatedRole`是`false`，然後再刪除角色，無論或不是空白。  
  
 如果指定的角色名稱不存在，是`null`，或者是空的字串，我們建議您的提供者擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.DeleteRole%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要搜尋的角色。</param>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <summary>取得角色中的使用者名稱陣列，其中使用者名稱包含要符合的指定使用者名稱。</summary>
        <returns>字串陣列，包含所有使用者的名稱，其中使用者名稱符合 <paramref name="usernameToMatch" />，而且使用者是指定角色的成員。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別，並傳回在角色中的使用者清單，其中的使用者名稱包含提供的相符項目`usernameToMatch`已設定`applicationName`。 萬用字元的支援是根據資料來源。 使用者會傳回依字母順序，依使用者名稱。  
  
 我們建議您擲回<xref:System.Configuration.Provider.ProviderException>如果`roleName`不存在於資料來源。  
  
   
  
## Examples  
 下列程式碼範例顯示範例<xref:System.Web.Security.RoleProvider.FindUsersInRole%2A>實作。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得所設定 <see langword="applicationName" /> 的所有角色清單。</summary>
        <returns>字串陣列，包含存放在所設定 <see langword="applicationName" /> 的資料來源中所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> 會呼叫<xref:System.Web.Security.Roles.GetAllRoles%2A>方法的<xref:System.Web.Security.Roles>類別來擷取資料來源中的角色名稱的清單。 只有指定角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>擷取。  
  
 如果已設定的任何角色不存在`applicationName`，建議您的提供者傳回沒有任何項目的字串陣列。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.GetAllRoles%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要傳回角色清單的使用者。</param>
        <summary>取得所設定 <see langword="applicationName" /> 之指定使用者所屬的角色清單。</summary>
        <returns>字串陣列，其中包含所設定 <see langword="applicationName" /> 之指定使用者所屬的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 會呼叫<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法的<xref:System.Web.Security.Roles>類別來擷取指定的使用者是從資料來源相關聯的角色名稱。 已設定的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>擷取。  
  
 已設定指定之使用者如果有任何角色`applicationName`，建議您的提供者傳回沒有任何項目的字串陣列。  
  
 如果指定的使用者名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要取得使用者清單的角色名稱。</param>
        <summary>取得所設定 <see langword="applicationName" /> 之指定角色的使用者清單。</summary>
        <returns>字串陣列，包含屬於所設定 <see langword="applicationName" /> 之指定角色成員的所有使用者名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> 會呼叫<xref:System.Web.Security.Roles.GetUsersInRole%2A>方法的<xref:System.Web.Security.Roles>類別來擷取從資料來源的角色相關聯的使用者名稱。 已設定的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>擷取。  
  
 如果指定的角色名稱不存在已設定`applicationName`或者如果它是`null`或空字串，我們建議您，您的提供者會擲回例外狀況。  
  
 沒有任何使用者是否已設定的指定角色相關聯`applicationName`，建議您的提供者傳回沒有任何項目的字串陣列。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要搜尋的使用者名稱。</param>
        <param name="roleName">要搜尋的角色。</param>
        <summary>取得值，指出指定的使用者是否在所設定 <see langword="applicationName" /> 之指定的角色中。</summary>
        <returns>如果指定的使用者在所設定 <see langword="true" /> 的指定角色中，則為 <see langword="applicationName" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A>方法會呼叫<xref:System.Web.Security.Roles.IsUserInRole%2A>方法<xref:System.Web.Security.Roles>類別，以判斷目前的登入的使用者是否已設定資料來源的角色相關聯<xref:System.Web.Security.Roles.ApplicationName%2A>。  
  
 如果指定的使用者名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
 如果指定的角色名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要從指定角色中移除之使用者名稱的字串陣列。</param>
        <param name="roleNames">要從中移除指定使用者名稱之角色名稱的字串陣列。</param>
        <summary>從所設定 <see langword="applicationName" /> 的指定角色移除指定的使用者名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> 會呼叫<xref:System.Web.Security.Roles.RemoveUserFromRole%2A>， <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> ， <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> ，以及<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>方法<xref:System.Web.Security.Roles>類別，以從資料來源上的指定角色中移除指定的使用者。 只有已設定的角色<xref:System.Web.Security.RoleProvider.ApplicationName%2A>會修改。  
  
 指定的角色名稱是否有任何已設定找不到`applicationName`，我們建議您的提供者會擲回<xref:System.Configuration.Provider.ProviderException>。  
  
 如果任何指定的使用者名稱未與任何已設定指定的角色名稱相關聯`applicationName`，我們建議您的提供者會擲回<xref:System.Configuration.Provider.ProviderException>。  
  
 如果有任何指定的使用者名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
 如果有任何指定的角色名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
 如果您的資料來源支援交易，我們建議您在交易中包含每個移除的作業，以及您回復交易並擲回例外狀況，如果任何移除作業失敗。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要在資料來源中搜尋的角色名稱。</param>
        <summary>取得值，指出所設定 <see langword="applicationName" /> 之角色資料來源中是否已有指定的角色名稱。</summary>
        <returns>如果所設定 <see langword="true" /> 的資料來源中已有該角色名稱，則為 <see langword="applicationName" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> 會呼叫<xref:System.Web.Security.Roles.RoleExists%2A>方法<xref:System.Web.Security.Roles>類別，以判斷角色名稱是否存在於已設定的資料來源<xref:System.Web.Security.Roles.ApplicationName%2A>。  
  
 如果指定的角色名稱是`null`或為空字串，我們建議您的提供者擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例顯示的範例實作<xref:System.Web.Security.RoleProvider.RoleExists%2A>方法。  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>