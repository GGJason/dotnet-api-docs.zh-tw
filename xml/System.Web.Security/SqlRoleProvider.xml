<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ce9491ab9d65f35960b0c21f3b06af305bf5600b" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52252880" /></Metadata><TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在 SQL Server 資料庫中，管理 ASP.NET 應用程式的角色成員資格資訊儲存區。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此類別由<xref:System.Web.Security.Roles>和<xref:System.Web.Security.RolePrincipal>提供 ASP.NET 應用程式使用 SQL Server 資料庫的角色管理服務的類別。 您可以使用角色管理您的應用程式指定不同的層級的授權。  
  
 若要使用<xref:System.Web.Security.SqlRoleProvider>類別，您必須先建立所使用的 SQL Server 資料庫<xref:System.Web.Security.SqlRoleProvider>。 若要建立所使用的資料庫<xref:System.Web.Security.SqlRoleProvider>類別，執行`aspnet_regsql.exe`可執行檔位於 C:\WINDOWS\Microsoft.NET\Framework\`versionNumber`資料夾，並指定`-Ar`選項 (比方說， `aspnet_regsql.exe -Ar`)。 建立的資料庫稱為 Aspnetdb。 或者，執行 aspnet_regsql.exe，調出 GUI 設定模式，然後選擇要設定所有的 ASP.NET 功能。  
  
 如果角色提供者設定為使用整合式的安全性的連接字串，ASP.NET 應用程式的處理序帳戶必須具有連線到 SQL Server 資料庫權限。  
  
 Machine.config 檔案已使用<xref:System.Web.Security.SqlRoleProvider>名為 AspNetSqlProvider，連接到本機電腦上的 SQL Server 執行個體。 您可以使用的提供者，這個執行個體，或指定您自己的 Web.config 檔案中的 ASP.NET 應用程式。 若要使用 AspNetSqlProvider 執行個體，指定為 AspNetSqlProvider`defaultProvider`組態中。  
  
 您可以設定<xref:System.Web.Security.SqlRoleProvider>若要使用相同的資料庫和使用者資訊，做為<xref:System.Web.Security.SqlMembershipProvider>才能使用單一資料庫的驗證和授權資訊。 若要使用相同的資料庫為成員資格和角色資訊，請執行可執行 aspnet_regsql.exe 並安裝成員資格功能。 然後，在您設定兩個指定相同的連接字串您<xref:System.Web.Security.SqlRoleProvider>和<xref:System.Web.Security.SqlMembershipProvider>執行個體。 也請確定這兩個提供者執行個體都設有相同<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>。  
  
   
  
## Examples  
 下列範例示範設定為使用 ASP.NET 應用程式的 Web.config 檔案<xref:System.Web.Security.SqlRoleProvider>物件和<xref:System.Web.Security.SqlMembershipProvider>。 項目被設定為只允許系統管理員角色中的 已驗證使用者的存取權。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.Security.SqlRoleProvider" /> 類別的執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A>建構函式由 ASP.NET 呼叫來建立的執行個體<xref:System.Web.Security.SqlRoleProvider>類別做為應用程式組態中指定。 這個建構函式不是從您的程式碼使用。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要加入指定角色中的使用者名稱字串陣列。</param>
        <param name="roleNames">角色名稱的字串陣列，要在其中加入指定的使用者名稱。</param>
        <summary>將指定使用者加入每個指定的角色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>方法會呼叫<xref:System.Web.Security.Roles>一或多個使用者與 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的一個或多個角色建立關聯的類別。 這個方法會呼叫<xref:System.Web.Security.Roles.AddUserToRole%2A>， <xref:System.Web.Security.Roles.AddUserToRoles%2A>， <xref:System.Web.Security.Roles.AddUsersToRole%2A>，以及<xref:System.Web.Security.Roles.AddUsersToRoles%2A>方法<xref:System.Web.Security.Roles>類別。  
  
 會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱已在指定的角色，會回復交易，並會執行任何更新。  
  
 如果<xref:System.Web.Security.SqlRoleProvider>搭配使用<xref:System.Web.Security.SqlMembershipProvider>，和其中一個指定的使用者名稱不存在資料庫中、 使用者名稱將會自動加入至資料庫。  
  
 使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例的角色中加入一個或多個使用者，或從角色移除使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" /> 的其中一個角色為 <see langword="null" />。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" /> 的其中一個角色是空字串，或包含逗號。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者是空字串，或包含逗號。  
  
-或- 
<paramref name="roleNames" /> 的其中一個角色長度超過 256 個字元。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者長度超過 256 個字元。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">找不到一或多個指定的角色名稱。  
  
-或- 
找不到一或多個指定的使用者名稱。  
  
-或- 
一或多個指定的使用者名稱已經與一或多個指定的角色名稱關聯。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式的名稱，以儲存及擷取角色資訊。</summary>
        <value>要儲存和擷取角色資訊的應用程式名稱。 預設為目前 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> 的 <see cref="P:System.Web.HttpContext.Request" /> 屬性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>正由<xref:System.Web.Security.SqlRoleProvider>不同的應用程式相關聯的使用者和角色。 這可讓多個應用程式使用相同的資料庫來儲存使用者和角色資訊，而不重複的使用者名稱或角色名稱之間發生衝突。 多個 ASP.NET 應用程式可以藉由指定相同的值中使用相同的資料庫<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性。 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性可以設定以程式設計的方式，或它的 Web 應用程式使用的組態檔中可以宣告方式設定`applicationName`屬性。  
  
 如果未指定值`applicationName`Web 應用程式組態檔中的屬性則<xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType>目前的屬性值<xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType>物件使用。  
  
> [!CAUTION]
>  因為單一的預設角色提供者執行個體用來提供所要求的所有<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性值。 <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性不是執行緒安全的多個寫入與變更<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性值可能會導致非預期的行為，應用程式的多個使用者。 建議您避免撰寫程式碼，可讓使用者設定<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性除非必要，否則。 應用程式的範例設定<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性可能需要管理多個應用程式的角色資料的系統管理應用程式。 這類應用程式應該是單一使用者應用程式並不是 Web 應用程式。  
  
   
  
## Examples  
 下列範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlRoleProvider>執行個體和集合<xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>屬性設`MyApplication`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">不具 <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> ASP.NET 裝載使用權限的呼叫端嘗試設定 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 屬性。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">嘗試將 <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> 設定為長度超過 256 個字元的字串。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要建立的角色名稱。</param>
        <summary>將新角色加入角色資料庫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別來建立 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的角色。  
  
 角色名稱的最大長度為 256 個字元。 角色名稱不區分大小寫。 角色名稱中不允許逗號。  
  
   
  
## Examples  
 下列程式碼範例會在資料庫中建立新的角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> 已存在於資料庫中。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">要刪除的角色名稱。</param>
        <param name="throwOnPopulatedRole">如果為 <see langword="true" />，就會在 <paramref name="roleName" /> 有一或多個成員時，擲回例外狀況。</param>
        <summary>從角色資料庫中移除角色。</summary>
        <returns>如果成功刪除角色，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別以刪除角色，從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫。 刪除角色時，也會從資料庫刪除與該角色相關聯的使用者清單。 不會影響資料庫中的使用者資訊。  
  
 如果`throwOnPopulatedRole`已`true`則會擲回例外狀況，角色將不會刪除，如果所識別的角色`roleName`參數有一個或多個成員。 如果`throwOnPopulatedRole`是`false`，則無論是空白或不會刪除該角色。  
  
   
  
## Examples  
 下列範例會從資料庫刪除角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> 具有一或多個成員，且 <paramref name="throwOnPopulatedRole" /> 是 <see langword="true" />。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要搜尋的角色。</param>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <summary>取得角色中的使用者名稱陣列，其中使用者名稱包含要符合的指定使用者名稱。</summary>
        <returns>字串陣列，包含所有使用者的名稱，其中的使用者名稱符合 <paramref name="usernameToMatch" />，而且使用者是指定角色的成員。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別，並傳回在角色中的使用者清單，其中的使用者名稱包含提供的相符項目`usernameToMatch`已設定`applicationName`。 <xref:System.Web.Security.SqlRoleProvider>比對的使用者名稱搜尋`usernameToMatch`使用 LIKE 關鍵字和支援 SQL Server 萬用字元的參數值。 例如，如果`usernameToMatch`參數設定為"user1"，則會傳回"user1"身分的使用者名稱的使用者成員資格資訊，若有的話。 如果`usernameToMatch`參數設定為"user %"，則會傳回使用者的使用者名稱的"user1"、"user2"，稱為"user1"、"user2"、"user_admin"，等等的成員資格資訊。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.FindUsersInRole%2A>根據使用者輸入的方法，以顯示角色成員資格。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。  
  
-或- 
 <paramref name="usernameToMatch" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="usernameToMatch" /> 為空字串。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。  
  
-或- 
 <paramref name="usernameToMatch" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> 無法在資料庫中找到。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得應用程式所有角色的清單。</summary>
        <returns>字串陣列，包含儲存在特定應用程式之資料庫中的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A>方法會呼叫<xref:System.Web.Security.Roles>類別來擷取一份在 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的所有角色。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetAllRoles%2A>方法來取得應用程式的角色清單，並繫結至結果<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要傳回角色清單的使用者。</param>
        <summary>取得使用者所屬角色的清單。</summary>
        <returns>字串陣列，包含指定使用者所屬的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A>方法會呼叫<xref:System.Web.Security.Roles>類別從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中擷取指定的使用者角色的清單。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法來擷取指定使用者角色的清單並將它們繫結<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 包含逗號。  
  
-或- 
 <paramref name="username" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要取得使用者清單的角色名稱。</param>
        <summary>取得指定角色的使用者清單。</summary>
        <returns>字串陣列，包含屬於指定角色成員的所有使用者名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別來擷取與指定的角色，在 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中相關聯的使用者清單。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetUsersInRole%2A>方法來取得特定角色中的使用者清單，並繫結至結果<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="rolename" /> 無法在資料庫中找到。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Security.SqlRoleProvider" /> 執行個體之名稱。</param>
        <param name="config"><see cref="T:System.Collections.Specialized.NameValueCollection" />，包含角色提供者的組態選項名稱和值。</param>
        <summary>使用 ASP.NET 應用程式組態檔中指定的屬性值，初始化 SQL Server 角色提供者。 這個方法不能從程式碼直接使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會初始化<xref:System.Web.Security.SqlRoleProvider>屬性值在 ASP.NET 應用程式組態檔 (Web.config) 中指定與不是直接從您的程式碼使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ASP.NET 應用程式不是在 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 信任 (含) 以上執行。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><see langword="connectionStringName" /> 屬性是空的，或不存在於此 <see cref="T:System.Web.Security.SqlRoleProvider" /> 執行個體的應用程式組態檔中。  
  
-或- 
<see langword="applicationName" /> 屬性超過 256 個字元。  
  
-或- 
此 <see cref="T:System.Web.Security.SqlRoleProvider" /> 執行個體的應用程式組態檔包含無法辨認的屬性。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要搜尋的使用者名稱。</param>
        <param name="roleName">要搜尋的角色。</param>
        <summary>取得值，指出指定使用者是否在指定的角色中。</summary>
        <returns>如果指定使用者在指定的角色中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A>方法會呼叫<xref:System.Web.Security.Roles>類別和<xref:System.Security.Principal.IPrincipal.IsInRole%2A>方法<xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType>來判斷使用者是否為 ASP.NET 應用程式的組態檔中指定的 SQL Server 資料庫中的角色相關聯的屬性(Web.config)。  
  
   
  
## Examples  
 下列程式碼範例會以程式設計方式檢查登入的使用者是否在系統管理員角色中，然後才允許使用者檢視的使用者角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="username" /> 包含逗號。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。  
  
-或- 
 <paramref name="username" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要從指定角色中移除之使用者名稱的字串陣列。</param>
        <param name="roleNames">要從中移除指定使用者名稱之角色名稱的字串陣列。</param>
        <summary>從指定的角色移除指定的使用者名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>方法會呼叫<xref:System.Web.Security.Roles>類別，以從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的一或多個角色中移除一個或多個使用者。 這個方法會呼叫<xref:System.Web.Security.Roles.RemoveUserFromRole%2A>， <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>， <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>，以及<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>方法<xref:System.Web.Security.Roles>類別。  
  
 會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>會在交易內進行。 如果發生錯誤，例如不存在的使用者名稱或使用者名稱已在指定的角色，會回復交易，並會執行任何更新。  
  
 使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例的角色中加入一個或多個使用者，或從角色移除使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" /> 的其中一個角色為 <see langword="null" />。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" /> 的其中一個角色是空字串，或包含逗號。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者是空字串，或包含逗號。  
  
-或- 
<paramref name="roleNames" /> 的其中一個角色長度超過 256 個字元。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者長度超過 256 個字元。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">找不到一或多個指定的使用者名稱。  
  
-或- 
找不到一或多個指定的角色名稱。  
  
-或- 
一或多個指定的使用者名稱未與一或多個指定的角色名稱關聯。  
  
-或- 
與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要在資料庫中搜尋的角色名稱。</param>
        <summary>取得值，指出指定的角色名稱是否已存在於角色資料庫中。</summary>
        <returns>如果角色名稱已存在於資料庫中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A>方法會呼叫<xref:System.Web.Security.Roles>類別，以判斷角色名稱是否存在於 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.RoleExists%2A>方法，以判斷角色名稱是否已經存在之前建立的角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.SqlRoleProvider>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號。  
  
-或- 
 <paramref name="roleName" /> 的長度超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">與資料庫通訊時發生未知的錯誤。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
  </Members>
</Type>