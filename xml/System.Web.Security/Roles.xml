<Type Name="Roles" FullName="System.Web.Security.Roles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6aeea87b70ca3d51168d6273181b90b5725dc22" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58560934" /></Metadata><TypeSignature Language="C#" Value="public static class Roles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Roles extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Roles" />
  <TypeSignature Language="VB.NET" Value="Public Class Roles" />
  <TypeSignature Language="C++ CLI" Value="public ref class Roles abstract sealed" />
  <TypeSignature Language="F#" Value="type Roles = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理角色中的使用者成員資格，以在 ASP.NET 應用程式中執行授權檢查。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 角色管理可讓您管理使用者群組，稱為角色為基礎的應用程式授權。 將使用者指派給角色，您可以控制不同的組件或功能，而不是或，角色為基礎的 Web 應用程式的存取權來指定使用者名稱為基礎的授權。 例如，員工應用程式可能有角色，例如經理員工、 經理等等，其中每個角色指定不同的權限。  
  
 使用者可以屬於一個以上的角色。 例如，如果您的網站論壇，某些使用者可能是角色的成員和仲裁者。 您可以定義每個角色，才能在網站上，具有不同的權限，而這兩個角色的使用者會擁有兩組權限。  
  
 若要啟用角色管理 ASP.NET 應用程式，請使用[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))項目`system.web`在您的應用程式的 Web.config 檔案區段，如下列範例所示。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
  
  <roleManager defaultProvider="SqlProvider"   
    enabled="true"  
    cacheRolesInCookie="true"  
    cookieName=".ASPROLES"  
    cookieTimeout="30"  
    cookiePath="/"  
    cookieRequireSSL="false"  
    cookieSlidingExpiration="true"  
    cookieProtection="All" >  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlRoleProvider"  
        connectionStringName="SqlServices"  
        applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 在您的 Web 應用程式的組態檔中或以程式設計方式在程式碼中，您可以指定授權規則。 比方說，Web.config 檔案中的下列區段需要使用者登入 （藉由拒絕匿名使用者），並接著只允許使用者在系統管理員角色具有存取權。  
  
```  
<authorization>  
  <deny users="?" />  
  <allow roles="Administrators" />  
  <deny users="*" />  
</authorization>  
```  
  
 如果您使用`authorization`區段來指定角色，應用程式的使用者為基礎的授權的應用程式的 Web.config 檔案中必須提供已驗證的使用者身分識別。 您可以使用 Windows 或表單驗證驗證使用者。 匿名使用者無法指派給角色。 獨立的或與 ASP.NET 搭配使用，就可以使用角色<xref:System.Web.Security.Membership>類別。  
  
 若要以程式設計方式驗證角色成員資格，您可以使用<xref:System.Web.Security.Roles>類別或<xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType>屬性<xref:System.Web.Security.Roles.IsUserInRole%2A>方法，或者您可以使用<xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType>屬性與<xref:System.Security.Principal.IPrincipal.IsInRole%2A?displayProperty=nameWithType>方法。 以程式設計方式檢查角色成員資格的範例程式碼，請參閱本主題中的範例 > 一節。  
  
 <xref:System.Web.Security.Roles>類別也可讓您建立及刪除角色，以將使用者加入或移除角色的使用者。  
  
> [!NOTE]
>  如果您已設定您的應用程式使用<xref:System.Web.Security.WindowsTokenRoleProvider>類別，您不能修改角色或角色成員資格。 <xref:System.Web.Security.WindowsTokenRoleProvider> Classverifies Windows 中的成員資格只群組。 在此情況下，您必須使用 Windows 使用者帳戶管理，而不是 ASP.NET 角色建立和刪除群組及管理群組成員資格。  
  
 您可以將角色資訊儲存在數個資料來源。  
  
-   您可以使用<xref:System.Web.Security.WindowsTokenRoleProvider>擷取角色資訊的類別，根據 Windows 群組的成員資格。  
  
-   您也可以使用 SQL Server 資料庫中儲存角色資訊<xref:System.Web.Security.SqlRoleProvider>類別。  
  
-   如果您有現有的角色資訊，或想要儲存中的角色資訊，並從 Windows、 授權存放區或 SQL Server 以外的資料來源擷取角色資訊時，您可以藉由建立繼承實作自訂角色提供者<xref:System.Web.Security.RoleProvider>抽象類別。 如需詳細資訊，請參閱 <<c0> [ 實作角色提供者](https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d)。  
  
 如果使用者的瀏覽器接受 cookie，則您可以在使用者的電腦上的 cookie 中儲存該使用者的角色資訊。 每個頁面要求時，ASP.NET 會從 cookie 讀取該使用者的角色資訊。 這可以減少擷取角色資訊與資料來源所需的通訊，以改善應用程式的效能。 如果使用者的角色資訊太長而無法儲存在 cookie 中，ASP.NET 會就最近使用的角色資訊儲存在 cookie 中，並接著會尋找所需的資料來源中的其他角色資訊。 如果使用者的瀏覽器不支援 cookie，或停用 cookie，角色資訊不會快取 cookie。  
  
 您可以改善快取在 cookie 中，藉由指定的角色名稱的可靠性<xref:System.Web.Security.Roles.CookieProtectionValue%2A>屬性，當您設定 ASP.NET 角色。 預設值<xref:System.Web.Security.Roles.CookieProtectionValue%2A>是`All`，它會加密 cookie 中的角色名稱，並驗證尚未改變的 cookie 內容。  
  
   
  
## Examples  
 下列範例示範設定為使用 ASP.NET 成員資格和 ASP.NET 角色，並使用應用程式的 Web.config 檔案<xref:System.Web.Security.SqlRoleProvider>來儲存 SQL Server 資料庫中的成員資格和角色的資訊。 使用表單驗證驗證使用者，只有系統管理員角色的使用者，才允許存取應用程式。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Initial Catalog=aspnetdb;Integrated Security=SSPI;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
      <allow roles="Administrators" />  
      <deny users="*" />  
    </authorization>  
  
    <membership defaultProvider="AspNetSqlProvider" userIsOnlineTimeWindow="15">  
    </membership>  
  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
  
      <providers>  
        <clear />  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"  
          applicationName="SampleApplication" />  
        </providers>  
  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 下列程式碼範例以程式設計方式檢查登入的使用者是否在系統管理員角色中，然後才讓使用者能夠檢視其他使用者的角色。  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
  </Docs>
  <Members>
    <Member MemberName="AddUsersToRole">
      <MemberSignature Language="C#" Value="public static void AddUsersToRole (string[] usernames, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUsersToRole(string[] usernames, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUsersToRole(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUsersToRole (usernames As String(), roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUsersToRole(cli::array &lt;System::String ^&gt; ^ usernames, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member AddUsersToRole : string[] * string -&gt; unit" Usage="System.Web.Security.Roles.AddUsersToRole (usernames, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernames">要加入指定角色之使用者名稱的字串陣列。</param>
        <param name="roleName">要加入指定使用者名稱的角色。</param>
        <summary>將指定的使用者加入指定的角色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.AddUsersToRole%2A>方法會呼叫指定的使用者與指定的角色，在資料來源建立關聯的預設角色提供者。  
  
 如果您的應用程式會使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱已在指定的角色，會回復交易，並會執行任何更新。  
  
> [!NOTE]
>  使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例的角色中加入一個或多個使用者，或根據使用者輸入在角色中移除使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="usernames" /> 的其中一個項目為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。  
  
-或- 
<paramref name="usernames" /> 的其中一個項目是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public static void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="System.Web.Security.Roles.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要加入指定角色之使用者名稱的字串陣列。</param>
        <param name="roleNames">角色名稱的字串陣列，要在其中加入指定的使用者名稱。</param>
        <summary>將指定的使用者加入指定的角色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.AddUsersToRoles%2A>方法會呼叫指定的使用者與指定的角色，在資料來源建立關聯的預設角色提供者。  
  
 如果您的應用程式會使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱已在指定的角色，會回復交易，並會執行任何更新。  
  
> [!NOTE]
>  使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例會將一個或多個角色中的一個或多個使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/adduserstorolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Roles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/adduserstorolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" /> 的其中一個角色為 <see langword="null" />。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" /> 的其中一個角色是空字串，或包含逗號 (,)。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRole">
      <MemberSignature Language="C#" Value="public static void AddUserToRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUserToRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUserToRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUserToRole (username As String, roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUserToRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member AddUserToRole : string * string -&gt; unit" Usage="System.Web.Security.Roles.AddUserToRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要加入指定角色的使用者名稱。</param>
        <param name="roleName">要加入指定使用者名稱的角色。</param>
        <summary>將指定的使用者加入指定的角色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.AddUserToRole%2A>方法會呼叫指定的使用者相關聯的資料來源的指定角色的預設角色提供者。  
  
> [!NOTE]
>  使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例會將使用者加入至角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/addusertorolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Roles#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/addusertorolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="username" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。  
  
-或- 
已將使用者指派給指定的角色。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRoles">
      <MemberSignature Language="C#" Value="public static void AddUserToRoles (string username, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddUserToRoles(string username, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.AddUserToRoles(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddUserToRoles (username As String, roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddUserToRoles(System::String ^ username, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member AddUserToRoles : string * string[] -&gt; unit" Usage="System.Web.Security.Roles.AddUserToRoles (username, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="username">要加入指定角色的使用者名稱。</param>
        <param name="roleNames">要加入指定使用者名稱之角色的字串陣列。</param>
        <summary>將指定的使用者加入指定的角色。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.AddUserToRoles%2A>方法會呼叫指定的使用者相關聯資料來源的指定角色的預設角色提供者。  
  
 如果您的應用程式會使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.Roles.AddUserToRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱已在指定的角色，會回復交易，並會執行任何更新。  
  
> [!NOTE]
>  使用者名稱和角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例會將一個或多個角色中的使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/addusertorolescs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Roles#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/addusertorolesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" /> 的其中一個角色為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" /> 的其中一個角色是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="username" /> 是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.Roles.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式的名稱，以儲存及擷取角色資訊。</summary>
        <value>要儲存和擷取角色資訊的應用程式名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.ApplicationName%2A>屬性由<xref:System.Web.Security.Roles>類別不同的應用程式相關聯的使用者和角色。 這可讓多個應用程式使用相同的資料來源來儲存使用者和角色資訊，而不重複的使用者名稱或重複的角色名稱之間發生衝突。 多個 ASP.NET 應用程式可以藉由指定相同的值中使用相同的資料來源<xref:System.Web.Security.Roles.ApplicationName%2A>屬性。 您可以設定<xref:System.Web.Security.Roles.ApplicationName%2A>屬性以程式設計的方式，或者您可以設定它以宣告方式在 Web 應用程式的組態檔中使用`applicationName`屬性。  
  
 如果您的 Web 應用程式使用<xref:System.Web.Security.SqlRoleProvider>類別和值未指定`applicationName`組態檔中的屬性<xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType>目前的屬性值<xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType>屬性用。  
  
> [!CAUTION]
>  因為單一的預設角色提供者執行個體用來提供所要求的所有<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定<xref:System.Web.Security.Roles.ApplicationName%2A>屬性值。 <xref:System.Web.Security.Roles.ApplicationName%2A>屬性不是執行緒安全的多個寫入與變更<xref:System.Web.Security.Roles.ApplicationName%2A>屬性值可能會導致非預期的行為，應用程式的多個使用者。 您應該避免撰寫程式碼，以讓使用者能夠設定<xref:System.Web.Security.Roles.ApplicationName%2A>屬性，除非另有需要。 應用程式的範例設定<xref:System.Web.Security.Roles.ApplicationName%2A>屬性可能需要管理多個應用程式的角色資料的系統管理應用程式。 這類應用程式應該是單一使用者應用程式並不是 Web 應用程式。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合`applicationName`屬性設定為`MyApplication`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRolesInCookie">
      <MemberSignature Language="C#" Value="public static bool CacheRolesInCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CacheRolesInCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CacheRolesInCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CacheRolesInCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CacheRolesInCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRolesInCookie : bool" Usage="System.Web.Security.Roles.CacheRolesInCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前使用者的角色是否在 Cookie 中快取。</summary>
        <value>如果目前使用者的角色在 Cookie 中快取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>屬性設定為`true`在 Web.config 檔案中，每個使用者的角色資訊會儲存在 cookie 中。 當角色管理會檢查使用者是否具有特定角色時，角色提供者會檢查資料來源的角色清單在呼叫之前檢查角色 cookie。 Cookie 會動態更新快取最近驗證過的角色名稱。  
  
 您可以改善快取在 cookie 中，藉由指定的角色名稱的可靠性<xref:System.Web.Security.Roles.CookieProtectionValue%2A>屬性，當您設定 ASP.NET 角色。 預設值<xref:System.Web.Security.Roles.CookieProtectionValue%2A>是`All`，它會加密 cookie 中的角色名稱，並驗證尚未改變的 cookie 內容。  
  
> [!NOTE]
>  因為除了資料來源，可以在快取角色名稱，就可以變更在資料來源的角色管理不會反映在快取的值。 在此情況下，使用者必須關閉再重新開啟其瀏覽器，以清除快取的 cookie 值。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合`cacheRolesInCookie`屬性設定為`true`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
   </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookieName">
      <MemberSignature Language="C#" Value="public static string CookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieName : string" Usage="System.Web.Security.Roles.CookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取角色名稱之 Cookie 的名稱。</summary>
        <value>快取角色名稱之 Cookie 的名稱。 預設值為 .ASPXROLES。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您也可以設定您的應用程式指定的 cookie 會在快取角色名稱`cookieName`ASP.NET 應用程式的 Web.config 檔案中的屬性。 當您想要唯一識別您的應用程式的 cookie 或 cookie 會在多個應用程式，例如網域 cookie 之間共用，這非常有用。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和設定`cookieName`屬性。ASPROLES。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public static string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.Roles.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得快取角色名稱 Cookie 的路徑。</summary>
        <value>快取角色名稱之 Cookie 的路徑。 預設為 /。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您也可以設定您的應用程式指定會在快取角色 cookie 的路徑`cookiePath`ASP.NET 應用程式的 Web.config 檔案中的屬性。 如需有關 cookie 路徑的詳細資訊，請參閱<xref:System.Web.HttpCookie.Path%2A>。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和設定`cookiePath`/MyApplication 此屬性。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookieProtectionValue">
      <MemberSignature Language="C#" Value="public static System.Web.Security.CookieProtection CookieProtectionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Security.CookieProtection CookieProtectionValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieProtectionValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieProtectionValue As CookieProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::CookieProtection CookieProtectionValue { System::Web::Security::CookieProtection get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieProtectionValue : System.Web.Security.CookieProtection" Usage="System.Web.Security.Roles.CookieProtectionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.CookieProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，表示如何保護在 Cookie 中快取的角色名稱。</summary>
        <value>其中一個 <see cref="T:System.Web.Security.CookieProtection" /> 列舉值，表示如何保護在 Cookie 中快取的角色名稱。 預設為 <see langword="All" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您也可以設定您的應用程式指定的 cookie 會在快取角色保護`cookieProtection`ASP.NET 應用程式的 Web.config 檔案中的屬性。 `cookieProtection`屬性採用<xref:System.Web.Security.CookieProtection>列舉值，指出是否已加密的角色名稱，驗證，兩者皆非。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合`cookieProtection`屬性設定為`Encrypted`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookieRequireSSL">
      <MemberSignature Language="C#" Value="public static bool CookieRequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookieRequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieRequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieRequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookieRequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieRequireSSL : bool" Usage="System.Web.Security.Roles.CookieRequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出角色名稱 Cookie 是否需要 SSL 才能傳回至伺服器。</summary>
        <value>如果將角色名稱 Cookie 傳回至伺服器時需要 SSL，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以指定是否需要 SSL （安全通訊端層） 角色名稱 cookie 傳回至您的應用程式中的伺服器設定`cookieRequireSSL`ASP.NET 應用程式的 Web.config 檔案中的屬性。 如需詳細資訊，請參閱<xref:System.Web.HttpCookie.Secure%2A>。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合`cookieRequireSSL`至`true`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool CookieSlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookieSlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookieSlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSlidingExpiration : bool" Usage="System.Web.Security.Roles.CookieSlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出是否定期重設角色名稱 Cookie 的到期日和時間。</summary>
        <value>如果要定期重設角色名稱 Cookie 的到期日和時間，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以指定是否角色名稱 cookie 的到期日和時間將會重設與每個回應使用`cookieSlidingExpiration`ASP.NET 應用程式的 Web.config 檔案中的屬性。 如果`true`，cookie 到期日一開始會設定為目前的日期和時間加上<xref:System.Web.Security.Roles.CookieTimeout%2A>以分鐘為單位。 當使用者繼續積極地使用 ASP.NET 應用程式時的到期日期和時間的 cookie 會自動重新整理如果小於一半的<xref:System.Web.Security.Roles.CookieTimeout%2A>剩餘。 如需詳細資訊，請參閱 <xref:System.Web.HttpCookie.Expires%2A> 屬性 (Property)。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合<xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>屬性設`false`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="false"  
  cookieProtection="Encrypted" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CookieTimeout">
      <MemberSignature Language="C#" Value="public static int CookieTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CookieTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CookieTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CookieTimeout { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieTimeout : int" Usage="System.Web.Security.Roles.CookieTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得角色 Cookie 過期前的分鐘數。</summary>
        <value>指定角色 Cookie 過期前分鐘數的整數。 預設值是 30 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.CookieTimeout%2A>屬性使用時<xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>屬性是`true`，並指定以分鐘為單位的角色 cookie 的-存留時間。 若要設定<xref:System.Web.Security.Roles.CookieTimeout%2A>值，新增`cookieTimeout`屬性設定為[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100)) Web.config 中的項目檔案的 ASP.NET 應用程式，並指定整數值。  
  
 如果<xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>是`false`，會忽略這個屬性。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和設定<xref:System.Web.Security.Roles.CookieTimeout%2A>屬性設為 30 分鐘。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/MyApplication"  
  cookieRequireSSL="true"  
  cookieSlidingExpiration="true"  
  cookieProtection="Encrypted" >  
  <providers>  
  <add  
    name="SqlProvider"  
    type="System.Web.Security.SqlRoleProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentCookie">
      <MemberSignature Language="C#" Value="public static bool CreatePersistentCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CreatePersistentCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.CreatePersistentCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CreatePersistentCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CreatePersistentCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CreatePersistentCookie : bool" Usage="System.Web.Security.Roles.CreatePersistentCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出角色名稱 Cookie 是否以工作階段為基礎，或為永續性。</summary>
        <value>如果角色名稱 Cookie 是永續性 Cookie，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.CreatePersistentCookie%2A>屬性值會設定 ASP.NET 應用程式使用的組態中`createPersistentCookie`屬性[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))組態項目。  
  
 當`false`角色名稱 cookie 是工作階段 cookie，也就是 cookie 不會遺失瀏覽器關閉時。 當`true`，角色名稱 cookie 是永續性 cookie 可跨多個瀏覽器工作階段。 永續性 cookie 的到期日和時間設定為目前的日期和時間加上<xref:System.Web.Security.Roles.CookieTimeout%2A>以分鐘為單位的值。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public static void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member CreateRole : string -&gt; unit" Usage="System.Web.Security.Roles.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要建立的角色名稱。</param>
        <summary>將新角色加入資料來源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.CreateRole%2A>方法會將資料來源中的角色名稱。 <xref:System.Web.Security.Roles.CreateRole%2A> 呼叫<xref:System.Web.Security.RoleProvider.CreateRole%2A>預設角色提供者，將指定的角色新增至資料來源的方法。  
  
> [!NOTE]
>  角色名稱不能包含逗號。  
  
   
  
## Examples  
 下列程式碼範例會建立新的角色中的資料來源。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 為空字串。  
  
-或- 
 <paramref name="roleName" /> 包含逗號。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCookie">
      <MemberSignature Language="C#" Value="public static void DeleteCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteCookie ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteCookie();" />
      <MemberSignature Language="F#" Value="static member DeleteCookie : unit -&gt; unit" Usage="System.Web.Security.Roles.DeleteCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>刪除快取角色名稱的 Cookie。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.DeleteCookie%2A>方法會清除是用來快取存放角色名稱 cookie 的內容。 如需有關快取角色名稱的詳細資訊，請參閱<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>。  
  
   
  
## Examples  
 下列程式碼範例會呼叫<xref:System.Web.Security.Roles.DeleteCookie%2A>方法，以清除任何快取角色名稱，當使用者登入。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/logincs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Roles#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/loginvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料來源中移除角色。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public static bool DeleteRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteRole (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member DeleteRole : string -&gt; bool" Usage="System.Web.Security.Roles.DeleteRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要刪除的角色名稱。</param>
        <summary>從資料來源中移除角色。</summary>
        <returns>如果 <paramref name="roleName" /> 已從資料來源中刪除，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.DeleteRole%2A>方法會移除資料來源中的角色名稱。 <xref:System.Web.Security.Roles.DeleteRole%2A> 呼叫<xref:System.Web.Security.RoleProvider.DeleteRole%2A>方法的預設角色提供者，從資料來源中移除指定的角色。  
  
 如果所識別的角色`roleName`參數有一個或多個成員，則會擲回例外狀況和角色將不會刪除。  
  
   
  
## Examples  
 下列程式碼範例會從資料來源刪除角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> 具有一或多個成員。  
  
-或- 
未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public static bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="static member DeleteRole : string * bool -&gt; bool" Usage="System.Web.Security.Roles.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">要刪除的角色名稱。</param>
        <param name="throwOnPopulatedRole">如果為 <see langword="true" />，就會在 <paramref name="roleName" /> 有一或多個成員時，擲回例外狀況。</param>
        <summary>從資料來源中移除角色。</summary>
        <returns>如果 <paramref name="roleName" /> 已從資料來源中刪除，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.DeleteRole%2A>方法會移除資料來源中的角色名稱。 <xref:System.Web.Security.Roles.DeleteRole%2A> 呼叫<xref:System.Web.Security.RoleProvider.DeleteRole%2A>方法的預設角色提供者，從資料來源中移除指定的角色。  
  
 如果`throwOnPopulatedRole`已`true`則會擲回例外狀況，角色將不會刪除，如果所識別的角色`roleName`參數有一個或多個成員。 如果`throwOnPopulatedRole`是`false`，則無論是空白或不會刪除該角色。  
  
   
  
## Examples  
 下列程式碼範例會從資料來源刪除角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 為空字串。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> 具有一或多個成員，且 <paramref name="throwOnPopulatedRole" /> 是 <see langword="true" />。  
  
-或- 
未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public static string Domain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Domain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string" Usage="System.Web.Security.Roles.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得角色名稱 Cookie 的網域值。</summary>
        <value>角色名稱 Cookie 的 <see cref="P:System.Web.HttpCookie.Domain" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.Domain%2A>屬性值會設定 ASP.NET 應用程式使用的組態中`domain`屬性[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))組態項目。  
  
 如果未不指定任何值，在針對網域屬性，設定<xref:System.Web.Security.Roles.Domain%2A>屬性會傳回`null`且角色名稱 cookie 網域預設的行為<xref:System.Web.HttpCookie><xref:System.Web.HttpCookie.Domain%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.Security.Roles.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否已啟用目前 Web 應用程式的角色管理。</summary>
        <value>如果已啟用角色管理，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和集合`enabled`屬性設定為`true`。  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public static string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindUsersInRole : string * string -&gt; string[]" Usage="System.Web.Security.Roles.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要搜尋的角色。</param>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <summary>取得指定角色中的使用者清單，其中使用者名稱包含要符合的指定使用者名稱。</summary>
        <returns>字串陣列，包含所有使用者的名稱，這些使用者的使用者名稱符合 <paramref name="usernameToMatch" />，而且是指定角色的成員。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.FindUsersInRole%2A> 傳回在角色中的使用者清單，其中的使用者名稱包含提供的相符項目`usernameToMatch`已設定`applicationName`。 例如，如果`usernameToMatch`參數設定為 「 使用者 」，則"user1"，"user2，""user3，「 使用者，並傳回等。 使用者會傳回依字母順序，依使用者名稱。  
  
 <xref:System.Web.Security.SqlRoleProvider>會執行其搜尋服務中使用 LIKE 子句針對`usernameToMatch`參數。 子句可用於像是 SQL Server 中支援任何萬用字元`usernameToMatch`參數值。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.FindUsersInRole%2A>根據使用者輸入的方法，以顯示角色成員資格。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。  
  
-或- 
 <paramref name="usernameToMatch" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="usernameToMatch" /> 為空字串。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public static string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="static member GetAllRoles : unit -&gt; string[]" Usage="System.Web.Security.Roles.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得應用程式所有角色的清單。</summary>
        <returns>字串陣列，包含儲存在應用程式資料來源中的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.GetAllRoles%2A>方法呼叫<xref:System.Web.Security.RoleProvider.GetAllRoles%2A?displayProperty=nameWithType>方法來取得資料來源的所有角色的清單，應用程式的預設角色提供者。 應用程式中指定的角色<xref:System.Web.Security.Roles.ApplicationName%2A>擷取屬性。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetAllRoles%2A>方法來取得應用程式的角色清單，並繫結至結果<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRolesForUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得使用者所屬角色的清單。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public static string[] GetRolesForUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetRolesForUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetRolesForUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRolesForUser () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetRolesForUser();" />
      <MemberSignature Language="F#" Value="static member GetRolesForUser : unit -&gt; string[]" Usage="System.Web.Security.Roles.GetRolesForUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得目前登入的使用者所屬的角色清單。</summary>
        <returns>字串陣列，包含目前登入的使用者所屬的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.GetRolesForUser%2A>方法呼叫<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=nameWithType>方法的預設角色提供者，以擷取從資料來源的目前登入使用者的角色。 目前登入的使用者由<xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType>屬性的目前<xref:System.Web.HttpContext?displayProperty=nameWithType>，或由<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>非 http 裝載環境。 如果沒有使用者登入，就會擲回例外狀況。 應用程式中指定的角色<xref:System.Web.Security.Roles.ApplicationName%2A>擷取屬性。  
  
 如果<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>已`true`，然後將<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法可能會傳回從角色內快取，而不是指定的角色提供者。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法來擷取指定使用者角色的清單，並將傳回的角色，以繫結<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Roles#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">沒有目前登入的使用者。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public static string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member GetRolesForUser : string -&gt; string[]" Usage="System.Web.Security.Roles.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要傳回角色清單的使用者。</param>
        <summary>取得使用者所屬角色的清單。</summary>
        <returns>字串陣列，包含指定使用者所屬的所有角色名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.GetRolesForUser%2A>方法呼叫<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A?displayProperty=nameWithType>方法的預設角色提供者，以擷取從資料來源的使用者角色。 應用程式中指定的角色<xref:System.Web.Security.Roles.ApplicationName%2A>擷取屬性。  
  
 如果`username`是否等於目前的登入的使用者和<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>是`true`，結果<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法可能會傳回從角色內快取而非指定<xref:System.Web.Security.Roles.Provider%2A>。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetRolesForUser%2A>方法來擷取指定使用者角色的清單，並將傳回的角色，以繫結<xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Roles#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> 包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public static string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member GetUsersInRole : string -&gt; string[]" Usage="System.Web.Security.Roles.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要取得使用者清單的角色。</param>
        <summary>取得指定角色的使用者清單。</summary>
        <returns>字串陣列，包含屬於指定角色成員的所有使用者名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.GetUsersInRole%2A>方法呼叫<xref:System.Web.Security.RoleProvider.GetUsersInRole%2A>方法來擷取從資料來源的角色相關聯的使用者名稱的預設角色提供者。 應用程式中指定的角色<xref:System.Web.Security.Roles.ApplicationName%2A>擷取屬性。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.Security.Roles.GetUsersInRole%2A>方法來取得特定角色的使用者清單，並繫結至結果<xref:System.Web.UI.WebControls.GridView>控制項。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUserInRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得值，指出使用者是否在指定的角色中。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public static bool IsUserInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.IsUserInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserInRole (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member IsUserInRole : string -&gt; bool" Usage="System.Web.Security.Roles.IsUserInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要搜尋的角色名稱。</param>
        <summary>取得值，指出目前登入的使用者是否在指定的角色中。 API 僅適合在 ASP.NET 要求執行緒的內容當中呼叫，且在此種允許的使用案例中可保障執行緒安全。</summary>
        <returns>如果目前登入的使用者在指定的角色中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.IsUserInRole%2A>方法呼叫<xref:System.Web.Security.RoleProvider.IsUserInRole%2A?displayProperty=nameWithType>方法來判斷目前登入的使用者是否來自應用程式的資料來源中指定的角色相關聯的預設角色提供者<xref:System.Web.Security.Roles.ApplicationName%2A>屬性。 目前登入的使用者由<xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType>屬性的目前<xref:System.Web.HttpContext?displayProperty=nameWithType>，或由<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>非 http 裝載環境。 如果沒有使用者登入，就會擲回例外狀況。 應用程式中指定的角色<xref:System.Web.Security.Roles.ApplicationName%2A>擷取屬性。  
  
 如果<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>已`true`，然後`roleName`可能核對角色快取，而不是指定的角色提供者。  
  
   
  
## Examples  
 下列程式碼範例以程式設計方式檢查目前登入的使用者是否在系統管理員角色中，然後才允許使用者檢視應用程式的角色設定。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
沒有目前登入的使用者。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public static bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member IsUserInRole : string * string -&gt; bool" Usage="System.Web.Security.Roles.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要搜尋的使用者名稱。</param>
        <param name="roleName">要搜尋的角色名稱。</param>
        <summary>取得值，指出指定使用者是否在指定的角色中。 API 僅適合在 ASP.NET 要求執行緒的內容當中呼叫，且在此種允許的使用案例中可保障執行緒安全。</summary>
        <returns>如果指定的使用者在指定的角色中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.IsUserInRole%2A>方法呼叫<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>方法來判斷是否來自應用程式的資料來源中指定的角色相關聯的使用者名稱的預設角色提供者<xref:System.Web.Security.Roles.ApplicationName%2A>屬性。  
  
 如果`username`是否等於目前的登入的使用者和<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>屬性值是`true`，`roleName`可能核對角色快取，而非指定<xref:System.Web.Security.Roles.Provider%2A>。  
  
   
  
## Examples  
 下列程式碼範例以程式設計方式檢查使用者是否在系統管理員角色中，然後才允許使用者檢視應用程式的角色設定。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="username" /> 包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedResults">
      <MemberSignature Language="C#" Value="public static int MaxCachedResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxCachedResults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.MaxCachedResults" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxCachedResults As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxCachedResults { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedResults : int" Usage="System.Web.Security.Roles.MaxCachedResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要為使用者快取角色名稱的最大數目。</summary>
        <value>要為使用者快取角色名稱的最大數目。 預設值為 25。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.MaxCachedResults%2A>屬性設定使用`maxCachedResults`組態屬性。 值`maxCachedResults`組態屬性必須設為整數的值小於或等於零。  
  
   
  
## Examples  
 下列範例所示[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式會使用<xref:System.Web.Security.SqlRoleProvider>執行個體和設定`maxCachedResults`屬性設定為 10。  
  
```  
<roleManager  
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All"   
  maxCachedResults="10" />  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.RoleProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.RoleProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As RoleProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::RoleProvider ^ Provider { System::Web::Security::RoleProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.RoleProvider" Usage="System.Web.Security.Roles.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式的預設角色提供者。</summary>
        <value>應用程式的預設角色提供者，公開為繼承 <see cref="T:System.Web.Security.RoleProvider" /> 抽象類別的類別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.Provider%2A>屬性可讓您直接參考應用程式的預設角色提供者。 這通常用來存取自訂的角色提供者的成員不屬於<xref:System.Web.Security.RoleProvider>抽象類別。  
  
 例如，<xref:System.Web.Security.WindowsTokenRoleProvider>類別包含的多載<xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>方法，可讓您判斷使用者是否在常見的 Windows 角色中，使用<xref:System.Security.Principal.WindowsBuiltInRole>列舉值。 參考<xref:System.Web.Security.WindowsTokenRoleProvider>類別可取得應用程式，請使用<xref:System.Web.Security.Roles.Provider%2A>屬性，且可以轉換成<xref:System.Web.Security.WindowsTokenRoleProvider>為了參考<xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>多載。  
  
 如果多個角色提供者設定應用程式，您可以存取不同的角色提供者使用<xref:System.Web.Security.Roles.Providers%2A>集合。  
  
   
  
## Examples  
 下列程式碼範例會轉換為預設角色提供者<xref:System.Web.Security.WindowsTokenRoleProvider>並檢查目前登入的使用者是否在系統管理員角色中，然後才允許使用者檢視應用程式的角色設定。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.WindowsTokenRoleProvider>。  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/ViewRoles2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/ViewRoles2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.RoleProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.RoleProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Roles.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As RoleProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::RoleProviderCollection ^ Providers { System::Web::Security::RoleProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Security.RoleProviderCollection" Usage="System.Web.Security.Roles.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 ASP.NET 應用程式的角色提供者集合。</summary>
        <value><see cref="T:System.Web.Security.RoleProviderCollection" />，包含為 ASP.NET 應用程式所設定的角色提供者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.Providers%2A>屬性會參考所有啟用的應用程式的角色提供者，包括任何提供者加入 Web.config 檔案中。 您可以使用哪些角色提供者是適用於應用程式來控制`providers`項目[roleManager](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164660(v%3dvs.100))在您的應用程式的 Web.config 檔案中的區段。  
  
 下列範例顯示移除任何現有的提供者 （例如在 Machine.config 檔案中指定的那些） 區段，並將<xref:System.Web.Security.SqlRoleProvider>與應用程式的角色提供者執行個體。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="Encrypted">  
  
      <providers>  
        <clear/>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
         </providers>  
  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 您可以取得的提供者的強型別的參考<xref:System.Web.Security.Roles.Providers%2A>集合中依名稱編製索引的角色提供者，並將它轉型為所需的類型。  
  
 您可以取得應用程式使用的預設提供者的參考<xref:System.Web.Security.Roles.Provider%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會列出啟用應用程式和其各自的型別提供者。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Roles#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromRole">
      <MemberSignature Language="C#" Value="public static void RemoveUserFromRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUserFromRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUserFromRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUserFromRole (username As String, roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUserFromRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RemoveUserFromRole : string * string -&gt; unit" Usage="System.Web.Security.Roles.RemoveUserFromRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要從指定角色中移除的使用者。</param>
        <param name="roleName">要移除指定使用者的角色。</param>
        <summary>從指定角色中移除指定的使用者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>方法會呼叫預設角色提供者，從指定的角色，在資料來源中移除指定的使用者。  
  
   
  
## Examples  
 下列程式碼範例會從角色移除使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。 
 <paramref name="username" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromRoles">
      <MemberSignature Language="C#" Value="public static void RemoveUserFromRoles (string username, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUserFromRoles(string username, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUserFromRoles(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUserFromRoles (username As String, roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUserFromRoles(System::String ^ username, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member RemoveUserFromRoles : string * string[] -&gt; unit" Usage="System.Web.Security.Roles.RemoveUserFromRoles (username, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="username">從指定角色中移除的使用者。</param>
        <param name="roleNames">要移除指定使用者之角色名稱的字串陣列。</param>
        <summary>從指定角色中移除指定的使用者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>方法會呼叫預設角色提供者，從指定的角色，在資料來源中移除指定的使用者。  
  
 如果應用程式設定為使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱不在指定的角色中，會回復交易，並會執行任何更新。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>方法來移除一或多個角色的使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUserFromRolescs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Roles#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUserFromRolesvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleNames" /> 的其中一個角色為 <see langword="null" />。  
  
-或- 
 <paramref name="username" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleNames" /> 的其中一個角色是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="username" /> 是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRole">
      <MemberSignature Language="C#" Value="public static void RemoveUsersFromRole (string[] usernames, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUsersFromRole(string[] usernames, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUsersFromRole(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUsersFromRole (usernames As String(), roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUsersFromRole(cli::array &lt;System::String ^&gt; ^ usernames, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RemoveUsersFromRole : string[] * string -&gt; unit" Usage="System.Web.Security.Roles.RemoveUsersFromRole (usernames, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernames">要從指定角色中移除之使用者名稱的字串陣列。</param>
        <param name="roleName">要移除指定使用者之角色的名稱。</param>
        <summary>從指定角色中移除指定的使用者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>方法會呼叫預設角色提供者，從指定的角色，在資料來源中移除指定的使用者。  
  
 如果應用程式使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱不在指定的角色中，會回復交易，並會執行任何更新。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>方法來移除角色中的一個或多個使用者。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUsersFromRolecs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Roles#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUsersFromRolevb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" />。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者名稱為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。  
  
-或- 
<paramref name="usernames" /> 的其中一個使用者名稱是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public static void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="static member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="System.Web.Security.Roles.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">要從指定角色中移除之使用者名稱的字串陣列。</param>
        <param name="roleNames">要移除指定使用者之角色名稱的字串陣列。</param>
        <summary>從指定的角色移除指定的使用者名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>方法會呼叫預設角色提供者，從指定的角色，在資料來源中移除指定的使用者。  
  
 如果應用程式使用<xref:System.Web.Security.SqlRoleProvider>類別，會在呼叫期間執行資料庫更新<xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A>方法會在交易內進行。 如果發生錯誤，例如使用者名稱不在指定的角色中，會回復交易，並會執行任何更新。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>方法，以從一或多個角色中移除一個或多個使用者根據使用者輸入。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
 [!code-aspx-csharp[System.Web.Security.Roles#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/RemoveUsersFromRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Roles#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/RemoveUsersFromRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">在 <paramref name="roleNames" /> 中指定的其中一個角色為 <see langword="null" />。  
  
-或- 
在 <paramref name="usernames" /> 中指定的其中一個使用者為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">在 <paramref name="roleNames" /> 中指定的其中一個角色是空字串，或包含逗號 (,)。  
  
-或- 
在 <paramref name="usernames" /> 中指定的其中一個使用者是空字串，或包含逗號 (,)。  
  
-或- 
 <paramref name="roleNames" /> 包含重複的項目。  
  
-或- 
 <paramref name="usernames" /> 包含重複的項目。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public static bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Roles.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="static member RoleExists : string -&gt; bool" Usage="System.Web.Security.Roles.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">要在資料來源中搜尋的角色名稱。</param>
        <summary>取得值，指出指定的角色名稱是否已存在於角色資料來源中。</summary>
        <returns>如果角色名稱已存在於資料來源中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Roles.RoleExists%2A>方法呼叫`RoleExists`方法來判斷角色名稱是否存在於應用程式的資料來源中指定的預設角色提供者<xref:System.Web.Security.Roles.ApplicationName%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Roles.RoleExists%2A>方法，以判斷角色名稱是否已經存在之前建立的角色。 如需啟用角色管理的 Web.config 檔案的範例，請參閱<xref:System.Web.Security.Roles>。  
  
> [!IMPORTANT]
>  此範例包含一個文字方塊，接受使用者輸入，也就是潛在的安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> 為 <see langword="null" /> (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">未啟用角色管理。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">了解 ASP.NET 角色管理</related>
      </Docs>
    </Member>
  </Members>
</Type>