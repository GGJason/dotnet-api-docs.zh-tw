<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6b7b1cb4960fef8b1463c70904078cb547429fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30552052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>在 SQL Server 資料庫中，管理 ASP.NET 應用程式成員資格資訊的存放。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別由<xref:System.Web.Security.Membership>和<xref:System.Web.Security.MembershipUser>類別提供 ASP.NET 應用程式使用 SQL Server 資料庫的成員資格服務。 您無法使用<xref:System.Web.Security.SqlMembershipProvider>未搭配 SQL Server。 當您的電腦有 SQL Server Express 安裝到預設執行個體名稱和使用者執行個體已啟用，<xref:System.Web.Security.SqlMembershipProvider>物件將會建立一個稱為資料庫`aspnetdb`在應用程式的`App_Data`目錄第一次應用程式會執行。  
  
 若要手動建立資料庫，執行`Aspnet_regsql.exe`可執行檔中找到`%systemroot%\Microsoft.NET\Framework\ versionNumber`資料夾，並指定`-A m`選項 (例如`aspnet_regsql.exe -A m`)。 建立的資料庫稱為 Aspnetdb。 或者，執行`Aspnet_regsql.exe`提取該名 GUI 組態模式，並選擇設定所有的 ASP.NET 功能。  
  
 如果成員資格提供者的連接字串來使用整合式的安全性設定，ASP.NET 應用程式的處理序帳戶必須具有權限可以連線到 SQL Server 資料庫。  
  
 Machine.config 檔，定義預設值<xref:System.Web.Security.SqlMembershipProvider>名為執行個體`AspNetSqlMembershipProvider`連接至本機電腦上的預設 SQL Server Express 執行個體。 如果您安裝 SQL Server Express 預設執行個體名稱，或者您可以在 Web.config 檔案中定義您自己的執行個體，ASP.NET 應用程式，您可以使用提供者的這個執行個體。  
  
 如果您設定`passwordCompatMode`屬性<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>、 應用程式可以使用的雜湊及加密的成員資格選項的 ASP.NET 4 中所加入。 不過，如果`passwordCompatMode`屬性設為<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>只雜湊及加密的成員資格選項，從 ASP.NET 2.0，ASP.NET 3.5，可以使用 ASP.NET 3.5 SP1。 預設值是 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>。 如需詳細資訊，請參閱<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>。  
  
   
  
## Examples  
 下列程式碼範例示範設定為使用 ASP.NET 應用程式的 Web.config 檔案<xref:System.Web.Security.SqlMembershipProvider>。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A>建構函式由 ASP.NET 呼叫來建立的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別做為應用程式的組態中指定。 這個建構函式不是從您的程式碼使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式的名稱，以存放及擷取成員資格資訊。</summary>
        <value>要存放及擷取成員資格資訊的應用程式名稱。 預設為目前 <see cref="P:System.Web.HttpRequest.ApplicationPath" /> 的 <see cref="P:System.Web.HttpContext.Request" /> 屬性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>正由<xref:System.Web.Security.SqlMembershipProvider>群組使用者資訊。 來限定應用程式名稱的使用者資訊，您可以在單一資料庫中儲存多個應用程式的資訊而不重複的使用者名稱之間發生衝突。 此外，多個 ASP.NET 應用程式時，可以藉由指定相同的值中使用相同的使用者資料庫<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性可以透過程式設計的方式，設定或它的 Web 應用程式組態檔中可以宣告方式設定`applicationName`屬性。  
  
 如果未指定值`applicationName`Web 應用程式組態檔中的屬性則<xref:System.Web.HttpRequest.ApplicationPath%2A>使用應用程式所做的第一個要求的屬性值。  
  
> [!CAUTION]
>  因為所有由提供服務的要求會使用單一預設成員資格提供者執行個體<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性值。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性不是執行緒安全的多個寫入，且變更<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性值可能會導致非預期的行為，應用程式的多個使用者。 我們建議您避免撰寫程式碼以讓使用者能夠設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性除非必要，否則。 應用程式的範例設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性可能需要為系統管理的應用程式管理的多個應用程式成員資格資料。 這類應用程式應該在單一使用者應用程式並不是 Web 應用程式。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體和設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>至`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">嘗試將 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 屬性設為空字串或 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">嘗試將 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 屬性設定為超過 256 個字元的字串。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要更新密碼的使用者。</param>
        <param name="oldPassword">指定之使用者的目前密碼。</param>
        <param name="newPassword">指定之使用者的新密碼。</param>
        <summary>修改使用者的密碼。</summary>
        <returns>
          如果密碼更新成功，則為 <see langword="true" />。 如果所提供的舊密碼無效、使用者已鎖定，或資料庫中沒有該使用者，則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以更新 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的密碼。  
  
 密碼長度上限為 128 個字元。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>方法時，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者正在鎖定且無法登入，直到鎖定狀態的呼叫，以清除<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正確的密碼，且使用者目前並不遭到鎖定，則內部計數器該追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>方法，直接由第一次取得參考<xref:System.Web.Security.SqlMembershipProvider>透過執行個體<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 <xref:System.Web.Security.Membership.Provider%2A>屬性會公開`defaultProvider`應用程式的 Web.config 檔案中指定。 設定提供者不是預設提供者使用參考<xref:System.Web.Security.Membership.Providers%2A>屬性。  
  
 您也可以藉由變更使用者密碼<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會修改指定之使用者的密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 為空字串 ("")、包含逗號或超過 256 個字元。  
  
 \-或-  
  
 <paramref name="oldPassword" /> 是空字串或長於 128 個字元。  
  
 \-或-  
  
 <paramref name="newPassword" /> 是空字串或長於 128 個字元。  
  
 \-或-  
  
 <paramref name="newPassword" /> 的已編碼版本長度大於 128 個字元。  
  
 \-或-  
  
 變更密碼的動作是由 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的訂閱者取消，且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 屬性為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="newPassword" /> 的長度小於 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> 屬性中指定的最小長度。  
  
 \-或-  
  
 <paramref name="newPassword" /> 中的非字母字元數小於 <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> 屬性中指定的所需非字母字元數。  
  
 \-或-  
  
 <paramref name="newPassword" /> 不傳遞 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> 屬性中定義的規則運算式 (Regular Expression)。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="oldPassword" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="newPassword" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> 無法在資料庫中找到。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">在資料庫中設定新的密碼值時發生錯誤。</exception>
        <exception cref="T:System.Exception">發生未處理的例外狀況。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要為其變更密碼問題和解答的使用者。</param>
        <param name="password">指定之使用者的密碼。</param>
        <param name="newPasswordQuestion">指定之使用者的新密碼問題。</param>
        <param name="newPasswordAnswer">指定之使用者的新密碼解答。</param>
        <summary>為 SQL Server 成員資格資料庫中的使用者更新密碼問題和解答。</summary>
        <returns>
          如果更新成功，則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="password" /> 不正確、使用者遭到鎖定，或者資料庫中沒有該使用者，也會傳回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.MembershipUser>類別，以更新的密碼問題和解答的 ASP.NET 應用程式組態檔 (Web.config) 中指定 SQL Server 資料庫中的使用者。 使用中指定的格式來加密的密碼解答<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性。  
  
 需要密碼問題和解答，提供額外的安全性時擷取，或重設使用者的密碼。 建立使用者名稱時，使用者可以提供問題和解答，稍後可以用來擷取或重設忘記的密碼。 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法會更新的密碼問題和解答的成員資格使用者。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法]、 [內部追蹤無效的密碼嘗試次數都會加一的計數器。 這會導致使用者正在鎖定且無法登入，直到鎖定狀態都會藉由呼叫<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正確的密碼，且使用者目前並不遭到鎖定，則內部計數器該追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 密碼問題的最大長度為 256 個字元。 密碼解答的最大長度為 128 個字元。  
  
 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>和<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會更新的密碼問題和解答的使用者。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 為空字串 ("")、包含逗號或超過 256 個字元。  
  
 \-或-  
  
 <paramref name="password" /> 是空字串或長於 128 個字元。  
  
 \-或-  
  
 <paramref name="newPasswordQuestion" /> 是空字串或長於 256 個字元。  
  
 \-或-  
  
 <paramref name="newPasswordAnswer" /> 是空字串或長於 128 個字元。  
  
 \-或-  
  
 <paramref name="newPasswordAnswer" /> 的已編碼版本長於 128 個字元。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="password" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="newPasswordQuestion" /> 是 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 是 <see langword="true" />。  
  
 \-或-  
  
 <paramref name="newPasswordAnswer" /> 是 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 是 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">變更資料庫中的密碼問題和密碼解答時發生錯誤。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新使用者的使用者名稱。</param>
        <param name="password">新使用者的密碼。</param>
        <param name="email">新使用者的電子郵件地址。</param>
        <param name="passwordQuestion">新使用者的密碼問題。</param>
        <param name="passwordAnswer">新使用者的密碼解答。</param>
        <param name="isApproved">新的使用者是否核准為通過驗證。</param>
        <param name="providerUserKey">
          <see cref="T:System.Guid" />，可唯一識別 SQL Server 資料庫中的成員資格使用者。</param>
        <param name="status">其中一個 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值，指出使用者是否建立成功。</param>
        <summary>加入新使用者至 SQL Server 成員資格資料庫。</summary>
        <returns>新建立使用者的 <see cref="T:System.Web.Security.MembershipUser" /> 物件。 如果沒有建立使用者，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以在 ASP.NET 應用程式組態檔中指定的 SQL Server 資料庫中建立新的使用者。  
  
 會將新的使用者識別與已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性設定為`true`，和`null`或空字串 ("") 指定`email`參數，建立使用者將會失敗。 建立使用者也會失敗，如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性設定為`true`和指定的值`email`參數已設定的資料庫中現有的使用者之電子郵件地址重複<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 使用者名稱的最大長度為 256 個字元。 電子郵件地址的最大長度為 256 個字元。 以純文字或之後雜湊或加密的密碼的最大長度為 128 個字元。  
  
 讓使用者建立失敗的其他條件：  
  
-   `password`參數是`null`，或空字串修剪後的。  
  
-   長度`password`參數小於指定的值<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性。  
  
-   中的非字母字元數`password`參數小於指定的值<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
-   `password`參數未通過的規則運算式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。  
  
-   自訂密碼驗證程式碼取消使用者建立期間<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性是`true`和`passwordAnswer`參數為`null`或空字串修剪後的。  
  
-   `passwordAnswer` 參數為空字串。  
  
-   `passwordAnswer`參數長度超過 128 個字元。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性是`true`並且密碼問題是`null`或空字串修剪後的。  
  
-   `passwordQuestion` 參數為空字串。  
  
-   `passwordQuestion`參數長度超過 256 個字元。  
  
-   `providerUserKey`參數設定為型別的物件以外<xref:System.Guid?displayProperty=nameWithType>。  
  
-   `providerUserKey`參數是現有的使用者金鑰的複本。  
  
-   `username`參數是現有的使用者名稱重複。  
  
 修剪開頭和尾端空白是所有字串參數值。  
  
   
  
## Examples  
 下列程式碼範例會建立新的使用者，ASP.NET 應用程式設定為使用表單驗證和<xref:System.Web.Security.SqlMembershipProvider>。 如果使用者並未建立成功，訊息會顯示給使用者。 否則，使用者重新導向至應用程式的登入頁面。  
  
> [!NOTE]
>  這個範例會呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`的 Web.config 檔案中使用<xref:System.Web.Security.Membership>類別。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要刪除的使用者名稱。</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> 表示要從資料庫中刪除與使用者相關的資料，<see langword="false" /> 表示要保留資料庫中與使用者相關的資料。</param>
        <summary>從 SQL Server 成員資格資料庫中移除使用者的成員資格資訊。</summary>
        <returns>
          如果使用者已刪除，則為 <see langword="true" />，否則為 <see langword="false" />。 如果資料庫中沒有該使用者，也會傳回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以在 ASP.NET 應用程式組態檔中指定的 SQL Server 資料庫中移除的使用者。  
  
 已刪除的使用者只會刪除從設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果`deleteAllRelatedData`設`true`，然後儲存的所有使用者資料的資料庫中<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>個人化功能也會一併刪除設定的<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果不存在的成員資格使用者，這是在資料庫中，和`deleteAllRelatedData`是`true`，然後將相關的資料和儲存的使用者資訊<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>個人化功能仍將刪除的應用程式中指定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性。 如此一來，<xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A>方法可用來快速地刪除使用者的相關資訊，即使<xref:System.Web.Security.SqlMembershipProvider>物件不用來儲存已驗證的使用者資訊。  
  
 會修剪 `username` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例會刪除目前登入的使用者。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.SqlMembershipProvider>呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 為空字串 ("")、包含逗號或超過 256 個字元。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 SQL Server 成員資格提供者是否設定為允許使用者重設密碼。</summary>
        <value>
          如果成員資格提供者支援密碼重設，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密碼重設可讓成員資格提供者來取代目前的使用者名稱密碼與新的隨機產生的密碼。 這個方法特別有用時<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因為使用者無法擷取雜湊的密碼值。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，而且可讓您的密碼重設。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 SQL Server 成員資格提供者是否設定為允許使用者擷取密碼。</summary>
        <value>
          如果成員資格提供者支援密碼擷取，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，使用者將無法從資料庫擷取現有密碼。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密碼格式提供單向的編碼的密碼值。 密碼會隨機產生的 salt 值的雜湊，且相較於儲存在資料庫中進行驗證的值。 無法擷取原始的密碼值解碼雜湊的值。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，和<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>設`true`、<xref:System.Configuration.Provider.ProviderException>提供者初始化時，會擲回。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並可讓密碼擷取。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜尋的電子郵件地址。</param>
        <param name="pageIndex">要傳回的結果頁面索引。 <c>pageIndex</c> 以零為起始。</param>
        <param name="pageSize">要傳回的結果頁面大小。</param>
        <param name="totalRecords">相符的使用者總數。</param>
        <summary>傳回成員資格使用者的集合，其中的電子郵件地址欄位包含指定的電子郵件地址。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 物件的頁面，從 <paramref name="pageIndex" /> 指定的頁面開始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 傳回包含符合所提供之電子郵件地址的成員資格使用者的清單`emailToMatch`設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>符合使用者名稱搜尋`emailToMatch`使用 LIKE 子句的參數值。 SQL Server 萬用字元可以包含在參數值。 比方說，如果`emailToMatch`參數設定為"address@example.com"，然後以電子郵件地址的使用者資訊 」address@example.com"傳回，如果存在的話。 如果`emailToMatch`參數設定為"%@example.com"，然後電子郵件地址的使用者資訊 」address@example.com"，"address2@example.com"，"admin@example.com"等會傳回。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回其中零識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為所設定的成員資格使用者總數`applicationName`。 比方說，如果有設定 13 使用者`applicationName`，和`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords`參數會設定為 13。  
  
 會修剪 `emailToMatch` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>方法來擷取成員資格使用者資訊，並顯示結果頁面中的資料。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> 的長度超過 256 個字元。  
  
 \-或-  
  
 <paramref name="pageIndex" /> 小於零。  
  
 \-或-  
  
 <paramref name="pageSize" /> 小於一。  
  
 \-或-  
  
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，加上 <paramref name="pageSize" />，再減去一超過 <see cref="F:System.Int32.MaxValue" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <param name="pageIndex">要傳回的結果頁面索引。 <c>pageIndex</c> 以零為起始。</param>
        <param name="pageSize">要傳回的結果頁面大小。</param>
        <param name="totalRecords">傳回這個方法時，其中包含相符使用者的總數。</param>
        <summary>取得成員資格使用者集合，其中使用者名稱包含要符合的指定使用者名稱。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 物件的頁面，從 <paramref name="pageIndex" /> 指定的頁面開始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 傳回成員資格使用者的使用者名稱包含相符項目與所提供的清單`usernameToMatch`設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>符合使用者名稱搜尋`usernameToMatch`使用 LIKE 子句的參數值。 SQL Server 萬用字元可包含以參數值。 例如，如果`usernameToMatch`參數設定為"user1"，則會傳回具有使用者名稱的使用者稱為"user1"的使用者資訊，如果存在的話。 如果`usernameToMatch`參數設定為"user %"，則使用者資訊的使用者使用的使用者名稱"user1"、"user2"、"user_admin"，並傳回等等。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回其中零識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為所設定的成員資格使用者總數`applicationName`。 比方說，如果有設定 13 使用者`applicationName`，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords`參數會設定為 13。  
  
 會修剪 `usernameToMatch` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>方法來擷取成員資格使用者資訊，並顯示結果頁面中的資料。  
  
> [!NOTE]
>  這個範例會呼叫使用 System.Web.Security.SqlMembershipProvider<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 是空字串 ("") 或長於 256 個字元。  
  
 \-或-  
  
 <paramref name="pageIndex" /> 小於零。  
  
 \-或-  
  
 <paramref name="pageSize" /> 小於 1。  
  
 \-或-  
  
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，加上 <paramref name="pageSize" />，再減去一超過 <see cref="F:System.Int32.MaxValue" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>產生至少有 14 個字元長的隨機密碼。</summary>
        <returns>至少有 14 個字元長的隨機密碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>類別提供<xref:System.Web.Security.Membership.GeneratePassword%2A>方法，會產生密碼，以指定的大小至少指定的非字母的字元數。 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法<xref:System.Web.Security.SqlMembershipProvider>呼叫<xref:System.Web.Security.Membership.GeneratePassword%2A>方法<xref:System.Web.Security.Membership>類別來擷取至少 14 個字元長的隨機密碼。 如果<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性大於 14，傳回的密碼將會在指定的長度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性。  
  
 您可以特別呼叫<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法藉由參考<xref:System.Web.Security.SqlMembershipProvider>類別直接從<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。  
  
 產生的密碼只能包含英數字元以及下列標點符號： `!@#$%^&*()_-+=[{]};:<>|./?`。 沒有隱藏的或非可列印的控制字元會包含在產生的密碼。  
  
> [!NOTE]
>  所建立的隨機密碼<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法不保證傳遞規則運算式中的<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。 不過，隨機密碼將會符合所建立的準則<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會產生 10 個字元的隨機密碼。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要傳回的結果頁面索引。 <c>pageIndex</c> 以零為起始。</param>
        <param name="pageSize">要傳回的結果頁面大小。</param>
        <param name="totalRecords">使用者的總數。</param>
        <summary>取得 SQL Server 成員資格資料庫中所有使用者的集合。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" /> 物件的 <see cref="T:System.Web.Security.MembershipUser" />，表示已設定 <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> 之資料庫中的所有使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>從 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫擷取使用者資訊的類別。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回其中零識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為所設定的成員資格使用者總數`applicationName`。 比方說，如果有設定 13 使用者`applicationName`，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords`參數會設定為 13。  
  
   
  
## Examples  
 下列程式碼範例傳回一份使用者的使用者數目的計數資料頁面中目前在線上。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> 小於零。  
  
 \-或-  
  
 <paramref name="pageSize" /> 小於一。  
  
 \-或-  
  
 <paramref name="pageIndex" /> 乘以 <paramref name="pageSize" />，加上 <paramref name="pageSize" />，再減去一超過 <see cref="F:System.Int32.MaxValue" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目前存取應用程式的使用者數。</summary>
        <returns>目前存取應用程式的使用者數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別來擷取使用者視為在線上，從 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫數目。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 傳回其上次活動日期和時間大於目前的日期和時間的值小於目前的應用程式的使用者數目<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>屬性以分鐘為單位。  
  
 與設定相關聯的使用者<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>隨附的計數。  
  
   
  
## Examples  
 下列程式碼範例會傳回一份使用者的使用者計數目前在線上。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要為其擷取密碼的使用者。</param>
        <param name="passwordAnswer">使用者的密碼解答。</param>
        <summary>傳回 SQL Server 成員資格資料庫中所指定使用者名稱的密碼。</summary>
        <returns>受指定使用者的密碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.MembershipUser>類別來擷取使用者的密碼，從 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫。  
  
 如果不正確的密碼解答提供給<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法時，追蹤無效的密碼解答嘗試都會加一的內部計數器。 這會導致使用者正在鎖定且無法登入，直到鎖定狀態的呼叫，以清除<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正確的密碼解答，且使用者目前並不遭到鎖定，則會追蹤無效的密碼解答嘗試次數的內部計數器會重設為零。 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法，直接由第一次取得參考<xref:System.Web.Security.SqlMembershipProvider>透過執行個體<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>、<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法無法擷取密碼。 雜湊的密碼單向加密，而且無法解密。 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，和<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>設`true`、<xref:System.Configuration.Provider.ProviderException>提供者初始化時，會擲回。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的使用者名稱的密碼，並將它傳送給使用者的電子郵件訊息。  
  
> [!NOTE]
>  不建議針對需要較高的安全性等級的網站傳回使用電子郵件以純文字密碼。 高安全性的網站，我們建議您傳回密碼使用加密，例如 SSL。  
  
> [!NOTE]
>  這個範例會呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`在 Web.config 檔案中使用<xref:System.Web.Security.Membership>類別。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> 無效。  
  
 \-或-  
  
 <paramref name="username" /> 所識別的成員資格使用者已鎖定。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> 設定為 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> 在成員資格資料庫中找不到。  
  
 \-或-  
  
 從資料庫擷取密碼時發生錯誤。</exception>
        <exception cref="T:System.ArgumentException">其中一個參數值超過所允許的最大長度。  
  
 \-或-  
  
 <paramref name="username" /> 為空字串 ("")、包含逗號或超過 256 個字元。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 為空字串，且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 為 <see langword="true" />。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 大於 128 個字元。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 的已編碼版本長度大於 128 個字元。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 是 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 是 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料來源取得成員資格使用者的資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">使用者的唯一識別項。</param>
        <param name="userIsOnline">
          <see langword="true" /> 表示更新指定使用者的最後活動日期/時間戳記，否則為 <see langword="false" />。</param>
        <summary>從資料來源取得與指定唯一識別項相關聯成員資格使用者的資訊，並在指定時，更新使用者的最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示與指定唯一識別項相關聯的使用者。 如果資料庫中找不到指定 <paramref name="providerUserKey" /> 值的使用者，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 使用指定的唯一識別碼來識別使用者`providerUserKey`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> 不是 <see cref="T:System.Guid" /> 型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要取得資訊的使用者名稱。</param>
        <param name="userIsOnline">
          <see langword="true" /> 表示更新使用者的最後活動日期/時間戳記，而 <see langword="false" /> 則表示傳回使用者資訊，但不更新使用者的最後活動日期/時間戳記。</param>
        <summary>從 SQL Server 成員資格資料庫傳回使用者的資訊，並提供選項，以更新使用者的最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示指定的使用者。 如果資料庫中找不到指定 <paramref name="username" /> 值的使用者，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>從 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫擷取使用者資訊的類別。  
  
 如果`userIsOnline`是`true`，使用者的上次活動日期/時間戳記會更新為目前的日期和時間。 這會反映在<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>和<xref:System.Web.Security.MembershipUser.IsOnline%2A>屬性所傳回的值在<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>。  
  
 會修剪 `username` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.GetUser%2A>方法，以判斷使用者是否存在然後再擷取使用者的密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 超過 256 個字元。  
  
 \-或-  
  
 <paramref name="username" /> 包含逗號。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">要搜尋的電子郵件地址。</param>
        <summary>取得與所指定電子郵件地址建立關聯的使用者名稱。</summary>
        <returns>與所指定電子郵件地址建立關聯的使用者名稱。 如果找不到符合的項目，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>電子郵件地址，用來從 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中擷取相關聯的使用者名稱的類別。  
  
 如果成員資格資料庫中的多個使用者具有相同電子郵件地址，則會傳回第一個遇到的使用者名稱。 您可以設定`requiresUniqueEmail`屬性`true`中應用程式組態檔，請確認每個電子郵件位址在資料庫中的是唯一的。  
  
 會修剪 `email` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的電子郵件地址的使用者名稱。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> 超過 256 個字元。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">資料庫中有多個電子郵件地址相同的使用者，而且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 為 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">要初始化的 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 執行個體之名稱。</param>
        <param name="config">
          <see cref="T:System.Collections.Specialized.NameValueCollection" />，包含成員資格提供者之組態選項的名稱和值。</param>
        <summary>使用 ASP.NET 應用程式組態檔中指定的屬性值，初始化 SQL Server 成員資格提供者。 這個方法不能從程式碼直接使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會初始化<xref:System.Web.Security.SqlMembershipProvider>屬性指定值 ASP.NET 應用程式組態檔 (Web.config) 中，而且不是直接從您的程式碼使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <see langword="enablePasswordRetrieval" />、<see langword="enablePasswordReset" />、<see langword="requiresQuestionAndAnswer" /> 或 <see langword="requiresUniqueEmail" /> 屬性設定為 <see langword="Boolean" /> 以外的值。  
  
 \-或-  
  
 <see langword="maxInvalidPasswordAttempts" /> 或 <see langword="passwordAttemptWindow" /> 屬性設定為正整數以外的值。  
  
 \-或-  
  
 <see langword="minRequiredPasswordLength" /> 屬性設定為正整數以外的值，或大於 128 的值。  
  
 \-或-  
  
 <see langword="minRequiredNonalphanumericCharacters" />  屬性設定為零或正整數以外的值，或大於 128 的值。  
  
 \-或-  
  
 <see langword="passwordStrengthRegularExpression" /> 屬性的值不是有效的規則運算式。  
  
 \-或-  
  
 <see langword="applicationName" /> 屬性設定為大於 256 個字元的值。  
  
 \-或-  
  
 在應用程式組態檔中指定的 <see langword="passwordFormat" /> 屬性是無效的 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 列舉型別。  
  
 \-或-  
  
 在應用程式組態中，<see langword="passwordFormat" /> 屬性設定為 <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />，而 <see langword="enablePasswordRetrieval" /> 屬性設定為 <see langword="true" />。  
  
 \-或-  
  
 <see langword="passwordFormat" /> 屬性設定為 <see langword="Encrypted" />，而組態元素為 <see langword="decryptionKey" /> 屬性指定 <see langword="AutoGenerate" />。  
  
 \-或-  
  
 <see langword="connectionStringName" /> 屬性是空的，或不在應用程式組態中。  
  
 \-或-  
  
 <see langword="connectionStringName" /> 屬性值的連接字串值是空的，或指定的 <see langword="connectionStringName" /> 值不在應用程式組態檔中。  
  
 \-或-  
  
 <see langword="commandTimeout" /> 屬性值設定為零或正整數以外的值。  
  
 \-或-  
  
 此 <see cref="T:System.Web.Security.SqlMembershipProvider" /> 執行個體的應用程式組態檔包含無法辨認的屬性。</exception>
        <exception cref="T:System.Web.HttpException">目前信任的層級小於 <see langword="Low" />。</exception>
        <exception cref="T:System.InvalidOperationException">提供者已經在目前呼叫 <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法之前進行初始化。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得鎖定成員資格使用者以前，所允許的無效密碼或密碼解答嘗試次數。</summary>
        <value>鎖定成員資格使用者以前，所允許的無效密碼或密碼解答嘗試次數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>可搭配<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>為了防範不必要的來源的密碼或密碼解答的重複嘗試透過成員資格使用者的猜測。 如果的無效密碼或提供成員資格使用者的密碼問題數目大於或等於值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性的值所識別的分鐘數內<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，則成員資格使用者藉由設定鎖定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`直到使用者才能解除鎖定與<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果之前提供有效的密碼，則<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>到達值時，追蹤無效的密碼和密碼解答嘗試次數的計數器會重設為零。 如果之前提供有效的密碼解答<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>到達值時，只會追蹤無效的密碼解答嘗試次數的計數器會重設為零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>分別保留無效的密碼嘗試次數與無效的密碼解答嘗試計數。 無效的密碼嘗試只在遞增密碼嘗試計數器中的結果。 無效的密碼解答嘗試只在遞增密碼解答計數器中的結果。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性值會設定在應用程式組態中，使用`maxInvalidPasswordAttempts`組態區段的屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並設定`maxInvalidPasswordAttempts`屬性設定為五個無效的嘗試次數和`passwordAttemptWindow`為 30 分鐘。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得有效的密碼中必須要有的特殊字元數目下限。</summary>
        <value>有效的密碼中必須要有的特殊字元數目下限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性會傳回必須輸入要建立的有效密碼的特殊、 非字母字元的最小數目<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性值會設定在應用程式組態中，使用`minRequiredNonalphanumericCharacters`屬性[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
 非英數字元是字元的<xref:System.Char.IsLetterOrDigit%2A>方法會傳回`false`。  
  
   
  
## Examples  
 下列範例所示[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`minRequiredNonalphanumericCharacters`屬性設定為一個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得密碼所需的最小長度。</summary>
        <value>密碼所需的最小長度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 屬性會取得必須輸入要建立的有效密碼的字元數目下限<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性值會設定在應用程式組態中，使用`minRequiredPasswordLength`屬性[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
   
  
## Examples  
 下列範例所示[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`minRequiredPasswordLength`屬性設定為七個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得時間範圍，在此時間範圍內會追蹤提供有效密碼或密碼解答的連續失敗嘗試。</summary>
        <value>時間範圍 (以分鐘為單位)，在此時間範圍內會追蹤提供有效密碼或密碼解答的連續失敗嘗試。 預設為 10 分鐘。 如果目前失敗嘗試與上一次失敗嘗試之間的時間間隔超過 <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> 屬性設定，則會將每次失敗嘗試都視為初次失敗嘗試。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性可搭配<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>內容，協助防範不必要的來源，破解的密碼或密碼解答，透過成員資格使用者的重複次數。 當使用者嘗試登入、 變更其密碼，或重設其密碼時，請指定的時間間隔內允許只有特定數目的連續嘗試。 所指定的時間間隔長度<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性，其可識別允許無效嘗試之間的分鐘數。 如果連續嘗試失敗次數，可讓使用者重設他或她密碼等於中儲存的值<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>屬性，以及時間後經過無效上次小於指定的分鐘數<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性，則成員資格使用者已鎖定設定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`。 使用者可以藉由呼叫解除鎖定<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果目前的失敗的嘗試和上一次的失敗的嘗試之間的間隔超過<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>視為第一個屬性的設定，目前的嘗試無效。 如果之前允許的無效嘗試次數上限為止，請提供有效的密碼解答，無效的密碼解答嘗試計數是設定為零。 如果允許無效的最大數目之前提供有效的密碼嘗試次數達到時，不正確的密碼嘗試次數的計數和無效的密碼解答嘗試計數設定為零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>分別保留無效的密碼嘗試次數和無效的密碼解答嘗試計數。 無效的密碼嘗試只在遞增密碼嘗試計數器中的結果。 無效的密碼解答嘗試只在遞增密碼解答計數器中的結果。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性值會設定在應用程式組態中，使用`passwordAttemptWindow`組態區段的屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並設定`maxInvalidPasswordAttempts`屬性設定為五個無效的嘗試次數和`passwordAttemptWindow`為 30 分鐘。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可指出在 SQL Server 成員資格資料庫中用來儲存密碼之格式的值。</summary>
        <value>其中一個 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值，指出在 SQL Server 資料庫中用來儲存密碼之格式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用`Hashed`僅`Clear`和`Encrypted`並未受到保護。 `Hashed` 密碼已雜湊使用單向雜湊演算法和隨機產生的 salt 值儲存在資料庫中。 驗證密碼時，它會將雜湊驗證的資料庫中的 salt 值。 無法擷取雜湊的密碼。 `Encrypted` 密碼不安全的因為的缺口都可顯示您的資料庫內容，也可以公開加密金鑰。 這表示可以解密加密的密碼，並且公開。  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> ASP.NET 應用程式的 Web.config 檔案的區段中指定值。  
  
 `Encrypted` 和`Hashed`密碼會加密，或您的組態中的項目中所提供的資訊為基礎的預設雜湊。 請注意，如果您指定的值`3DES`如`validation`屬性，或如果未不指定任何值，雜湊的密碼將會使用雜湊<xref:System.Security.Cryptography.SHA1>演算法。  
  
 可以使用來定義自訂的雜湊演算法`hashAlgorithmType`屬性[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。 如果您選擇加密時，預設的密碼加密使用 AES。 您可以變更加密演算法設定`decryption`組態項目的屬性。 如果您要加密的密碼，您必須提供明確的值為`decryptionKey`項目中的屬性。 預設值`AutoGenerate`如`decryptionKey`使用加密密碼與 ASP.NET 成員資格時，不支援屬性。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將其密碼格式設定為`Hashed`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來評估密碼的規則運算式。</summary>
        <value>用來評估密碼的規則運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性會取得用來評估密碼複雜度的規則運算式<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性設定在應用程式組態中，使用`passwordStrengthRegularExpression`屬性[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
   
  
## Examples  
 下列範例所示[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`passwordStrengthRegularExpression`屬性驗證的密碼是否符合下列條件的規則運算式：  
  
-   為至少需要七個字元。  
  
-   包含至少一個數字。  
  
-   包含至少一個特殊的 （非英數） 字元。  
  
 如果密碼不符合這些準則，成員資格提供者不接受的密碼。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 SQL Server 成員資格提供者是否設定為要求使用者回答密碼問題，才能重設及擷取密碼。</summary>
        <value>
          如果密碼重設及擷取需要密碼解答，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 需要密碼問題和解答，提供額外的安全性時擷取，或重設使用者的密碼。 建立使用者名稱時，使用者可以提供問題和解答，稍後可以用來擷取或重設忘記的密碼。 如果<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>屬性和<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>屬性都`false`，值<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性無關。  
  
 如需詳細資訊，請參閱 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 與 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將它設定為需要有密碼解答的密碼重設或重建。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出 SQL Server 成員資格提供者是否設定為要求每一個使用者名稱具有唯一的電子郵件地址。</summary>
        <value>
          <see langword="true" /> 如果成員資格提供者需要唯一的電子郵件地址;否則， <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將它設定為每個使用者名稱需要唯一的電子郵件地址。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要為其重設密碼的使用者。</param>
        <param name="passwordAnswer">指定之使用者的密碼解答。</param>
        <summary>將使用者的密碼重設為自動產生的新密碼。</summary>
        <returns>指定之使用者的新密碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>重設為新的 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的密碼類別隨機產生的值。 傳回新的密碼。  
  
> [!NOTE]
>  所建立的隨機密碼<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法不保證傳遞規則運算式中的<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。 不過，隨機密碼將會符合所建立的準則<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法是大多數常用時<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為`Hashed`。 如果使用者忘記的密碼雜湊，則無法擷取密碼。 不過，提供者可以將密碼重設為自動產生新密碼如果使用者提供正確的密碼解答。  
  
 如果不正確的密碼解答提供給<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法時，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者正在鎖定且無法登入，直到鎖定狀態的呼叫，以清除<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正確的密碼解答，且使用者目前並不遭到鎖定，則會追蹤無效的密碼解答嘗試次數的內部計數器會重設為零。 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法，直接由第一次取得參考<xref:System.Web.Security.SqlMembershipProvider>的執行個體<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 產生的密碼將會至少 14 個字元長，或在指定長度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性，而且會包含在指定的非英數字元數目<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。 不保證傳遞規則運算式中包含密碼<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性，如果指定的其中一個。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會重設使用者的密碼，並傳回新的自動產生密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> 無效。  
  
 \-或-  
  
 目前已鎖定的使用者帳戶。</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> 設定為 <see langword="false" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> 在成員資格資料庫中找不到。  
  
 \-或-  
  
 變更密碼的動作是由 <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> 事件的訂閱者取消，且 <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> 屬性為 <see langword="null" />。  
  
 \-或-  
  
 從資料庫擷取密碼時發生錯誤。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 為空字串 ("")、包含逗號或超過 256 個字元。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 是空字串或長度超過 128 個字元，而且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 為 <see langword="true" />。  
  
 \-或-  
  
 編碼以後，<paramref name="passwordAnswer" /> 長於 128 個字元。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="passwordAnswer" /> 是 <see langword="null" />，而 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> 是 <see langword="true" />。</exception>
        <exception cref="T:System.Exception">發生未處理的例外狀況。</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要清除鎖定狀態的成員資格使用者名稱。</param>
        <summary>清除使用者的鎖定狀態，以便驗證成員資格使用者。</summary>
        <returns>
          如果成功解除鎖定成員資格使用者，則為 <see langword="true" />，否則為 <see langword="false" />。 如果資料庫中沒有該使用者，也會傳回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者最常鎖定且無法驗證所<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法時<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>超過內<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>。  
  
 會修剪 `username` 參數值中的前置空格和後端空格。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 是空字串、長於 256 個字元，或包含逗號。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示要更新的使用者，以及該使用者的已更新資訊。</param>
        <summary>更新 SQL Server 成員資格資料庫中使用者的資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>更新 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的使用者資訊的類別。 <xref:System.Web.Security.MembershipUser.Email%2A>， <xref:System.Web.Security.MembershipUser.Comment%2A>， <xref:System.Web.Security.MembershipUser.IsApproved%2A>， <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>，和<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>屬性值也會更新指定的成員資格使用者。  
  
 最大長度<xref:System.Web.Security.MembershipUser.UserName%2A>屬性為 256 個字元。 最大長度<xref:System.Web.Security.MembershipUser.Email%2A>屬性為 256 個字元。  
  
 成員資格使用者的密碼不能使用更新<xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A>方法。 若要更新成員資格使用者的密碼，請使用<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法<xref:System.Web.Security.MembershipUser>類別。  
  
   
  
## Examples  
 下列程式碼範例會更新使用者的電子郵件地址。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> 為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 屬性為 <see langword="null" />。  
  
 \-或-  
  
 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 屬性為 <see langword="null" />，而且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 設定為 <see langword="true" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 屬性是空字串 ("")、包含逗號，或長於 256 個字元。  
  
 \-或-  
  
 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 屬性長於 256 個字元。  
  
 \-或-  
  
 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 屬性為空字串，而且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 設定為 <see langword="true" />。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">資料庫中找不到 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.UserName" /> 屬性。  
  
 \-或-  
  
 <paramref name="user" /> 的 <see cref="P:System.Web.Security.MembershipUser.Email" /> 屬性等於資料庫中現有的電子郵件地址，而且 <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> 設定為 true。  
  
 \-或-  
  
 使用者更新失敗。</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要驗證的使用者名稱。</param>
        <param name="password">指定之使用者的密碼。</param>
        <summary>驗證指定的使用者名稱和密碼是否存在 SQL Server 成員資格資料庫中。</summary>
        <returns>
          如果指定的使用者名稱和密碼有效，則為 <see langword="true" />，否則為 <see langword="false" />。 如果資料庫中沒有該使用者，也會傳回 <see langword="false" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>驗證 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的使用者資訊的類別。  
  
 成功驗證使用者，也會為目前的日期和時間在資料庫中的更新的上次活動日期和最後一個登入日期值。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法時，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者正在鎖定且無法登入，直到鎖定狀態的呼叫，以清除<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供正確的密碼，且使用者目前並不遭到鎖定，則內部計數器該追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會顯示 ASP.NET 應用程式設定為使用表單驗證的登入頁面和<xref:System.Web.Security.SqlMembershipProvider>。 如果提供的使用者認證無效，會向使用者顯示的訊息。 否則，使用者重新導向至原本要求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您需要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定提供者為特定的提供者類型、 您可以依其設定的名稱和存取這些<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>