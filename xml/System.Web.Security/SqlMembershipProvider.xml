<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41e95d545c6677119ab43c2aebd2b8da174e738c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37750707" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此類別由<xref:System.Web.Security.Membership>和<xref:System.Web.Security.MembershipUser>提供 ASP.NET 應用程式使用 SQL Server 資料庫的成員資格服務的類別。 您無法使用<xref:System.Web.Security.SqlMembershipProvider>未搭配 SQL Server。 SQL Server Express 安裝預設執行個體名稱和使用者執行個體已啟用，您的電腦何時<xref:System.Web.Security.SqlMembershipProvider>物件會建立名為的資料庫`aspnetdb`應用程式的`App_Data`目錄第一次應用程式會執行。  
  
 若要以手動方式建立資料庫，執行`Aspnet_regsql.exe`可執行檔中找到`%systemroot%\Microsoft.NET\Framework\ versionNumber`資料夾，並指定`-A m`選項 (例如`aspnet_regsql.exe -A m`)。 建立的資料庫稱為 Aspnetdb。 或者，執行`Aspnet_regsql.exe`提取 GUI 組態模式啟動，並選擇設定所有的 ASP.NET 功能。  
  
 如果成員資格提供者設定為使用整合式的安全性的連接字串，ASP.NET 應用程式的處理序帳戶必須具有連線到 SQL Server 資料庫權限。  
  
 Machine.config 檔案中定義預設值<xref:System.Web.Security.SqlMembershipProvider>執行個體名為`AspNetSqlMembershipProvider`連接至本機電腦上的預設 SQL Server Express 執行個體。 如果您安裝 SQL Server Express 預設執行個體名稱，或您可以在 Web.config 檔案中定義您自己的執行個體，讓 ASP.NET 應用程式，您可以使用提供者的這個執行個體。  
  
 如果您設定`passwordCompatMode`屬性設定為<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>，應用程式可以使用的雜湊，以及加密成員資格選項，在 ASP.NET 4 中所新增。 不過，如果`passwordCompatMode`屬性設為<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>，只有雜湊及加密成員資格選項，從 ASP.NET 2.0 中，ASP.NET 3.5 中，可以使用 ASP.NET 3.5 SP1。 預設值是 <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>。 如需詳細資訊，請參閱<xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>。  
  
   
  
## Examples  
 下列程式碼範例顯示設定為使用 ASP.NET 應用程式的 Web.config 檔案<xref:System.Web.Security.SqlMembershipProvider>。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A>建構函式由 ASP.NET 呼叫來建立的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別做為應用程式組態中指定。 這個建構函式不是從您的程式碼使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>要儲存和擷取成員資格資訊的應用程式名稱。 預設值是<see cref="P:System.Web.HttpRequest.ApplicationPath" />目前的屬性值<see cref="P:System.Web.HttpContext.Request" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>正由<xref:System.Web.Security.SqlMembershipProvider>群組的使用者資訊。 限定名稱與應用程式名稱的使用者資訊，您可以在單一資料庫中儲存多個應用程式的資訊不會重複的使用者名稱之間發生衝突。 此外，多個 ASP.NET 應用程式時，可以藉由指定相同的值中使用相同的使用者資料庫<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性可以設定以程式設計的方式，或是可以設定以宣告方式將 Web 應用程式的組態檔中`applicationName`屬性。  
  
 如果未指定值`applicationName`Web 應用程式組態檔中的屬性則<xref:System.Web.HttpRequest.ApplicationPath%2A>使用應用程式所做的第一個要求的屬性值。  
  
> [!CAUTION]
>  因為單一的預設成員資格提供者執行個體用來提供所要求的所有<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性值。 <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性不是執行緒安全的多個寫入與變更<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性值可能會導致非預期的行為，應用程式的多個使用者。 我們建議您避免撰寫程式碼，以讓使用者能夠設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性除非必要，否則。 應用程式的範例設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性可能需要管理多個應用程式的成員資格資料的系統管理應用程式。 這類應用程式應該是單一使用者應用程式並不是 Web 應用程式。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體和集合<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>至`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以更新的 ASP.NET 應用程式組態檔 (Web.config) 中指定的 SQL Server 資料庫中的使用者的密碼。  
  
 密碼長度上限為 128 個字元。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>方法中，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者遭到鎖定且無法登入，直到呼叫，以清除鎖定狀態<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供了正確的密碼，且使用者目前並未遭到鎖定，則內部的計數器，追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A>直接方法首先取得的參考<xref:System.Web.Security.SqlMembershipProvider>執行個體透過<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 <xref:System.Web.Security.Membership.Provider%2A>屬性會公開`defaultProvider`應用程式的 Web.config 檔案中指定。 設定不會參考使用的預設提供者的提供者<xref:System.Web.Security.Membership.Providers%2A>屬性。  
  
 您也可以藉由變更使用者密碼<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法。  
  
 中所有參數值的開頭和尾端空白會被去除。  
  
   
  
## Examples  
 下列程式碼範例會修改指定之使用者的密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership.Provider%2A>的屬性<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.MembershipUser>類別來更新密碼問題和解答，以便在 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的使用者。 使用中指定的格式來加密的密碼解答<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性。  
  
 需要密碼問題和答案提供一層額外的安全性時擷取，或重設使用者的密碼。 建立使用者名稱時，使用者可以提供一組問題和解答，稍後可用來擷取或重設遺忘的密碼。 <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法更新密碼問題和成員資格使用者的回應。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A>方法中，追蹤無效的密碼嘗試次數都會加一的內部計數器。 這會導致使用者遭到鎖定且無法登入，藉由呼叫清除鎖定狀態之前<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供了正確的密碼，且使用者目前並未遭到鎖定，則內部的計數器，追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 密碼問題的最大長度為 256 個字元。 密碼解答的最大長度為 128 個字元。  
  
 如需詳細資訊，請參閱<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>、<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>和<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
 中所有參數值的開頭和尾端空白會被去除。  
  
   
  
## Examples  
 下列程式碼範例會更新密碼問題和使用者的回應。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership.Provider%2A>的屬性<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以在 ASP.NET 應用程式的組態檔中指定的 SQL Server 資料庫中建立新的使用者。  
  
 會將新的使用者識別已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性設定為`true`，並`null`或空字串 ("") 指定`email`參數，建立使用者將會失敗。 如果使用者建立也會失敗<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性設定為`true`和指定的值`email`參數是設定的資料庫中現有的使用者之電子郵件地址重複<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 使用者名稱的最大長度為 256 個字元。 電子郵件地址的最大長度為 256 個字元。 以純文字，或之後進行雜湊或加密的密碼的最大長度為 128 個字元。  
  
 其他會造成失敗的使用者建立的條件：  
  
-   `password`參數是`null`，或於修剪後的為空字串。  
  
-   長度`password`參數是在指定的值小於<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性。  
  
-   中的非字母字元數目`password`參數是在指定的值小於<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
-   `password`參數未通過中的規則運算式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。  
  
-   自訂的密碼驗證程式碼取消期間的使用者建立<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性是`true`並`passwordAnswer`參數為`null`或於修剪後的為空字串。  
  
-   `passwordAnswer`參數為空字串。  
  
-   `passwordAnswer`參數的長度超過 128 個字元。  
  
-   <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性是`true`和密碼的問題是`null`或於修剪後的為空字串。  
  
-   `passwordQuestion`參數為空字串。  
  
-   `passwordQuestion`參數的長度超過 256 個字元。  
  
-   `providerUserKey`參數設定為型別的物件以外的其他<xref:System.Guid?displayProperty=nameWithType>。  
  
-   `providerUserKey`參數是現有的使用者金鑰的複本。  
  
-   `username`參數是現有的使用者名稱重複。  
  
 開頭和尾端空白會刪減所有字串參數值。  
  
   
  
## Examples  
 下列程式碼範例會建立新的使用者設定為使用表單驗證的 ASP.NET 應用程式和<xref:System.Web.Security.SqlMembershipProvider>。 如果未成功建立使用者，就是向使用者顯示訊息。 否則，將使用者重新導向的應用程式的登入頁面。  
  
> [!NOTE]
>  此範例會呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`的 Web.config 檔案中使用<xref:System.Web.Security.Membership>類別。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別，以移除 ASP.NET 應用程式的組態檔中指定的 SQL Server 資料庫中的使用者。  
  
 已刪除的使用者只會刪除從已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果`deleteAllRelatedData`設定為`true`，然後儲存的所有使用者資料的資料庫中<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>個人化功能，也會刪除已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 如果不存在的成員資格使用者，這是在資料庫中，並`deleteAllRelatedData`是`true`，然後相關的資料和儲存的使用者資訊<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>個人化功能將仍然會刪除應用程式中指定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>屬性。 如此一來，<xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A>方法可用來快速刪除使用者的相關資訊，即使<xref:System.Web.Security.SqlMembershipProvider>物件不用來儲存已驗證的使用者資訊。  
  
 開頭和尾端空白會刪減`username`參數值。  
  
   
  
## Examples  
 下列程式碼範例會刪除目前登入的使用者。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.SqlMembershipProvider>來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>如果成員資格提供者支援密碼重設，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密碼重設可讓成員資格提供者，來取代目前的使用者名稱密碼與新，隨機產生的密碼。 這會特別有用的時機<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因為使用者無法擷取雜湊的密碼值。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，而且可讓您的密碼重設。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> 如果成員資格提供者支援密碼擷取;否則， <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，使用者將無法擷取資料庫中的現有密碼。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密碼格式提供單向密碼值的編碼方式。 密碼是隨機產生的 salt 值進行雜湊，且相較於儲存在資料庫中進行驗證的值。 雜湊的值不能解除編碼，以擷取原始的密碼值。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，並<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>設定為`true`、<xref:System.Configuration.Provider.ProviderException>初始化提供者時，會擲回。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並可讓密碼擷取。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> 傳回包含相符項目與所提供之電子郵件地址的成員資格使用者的清單`emailToMatch`已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>比對的使用者名稱搜尋`emailToMatch`使用 LIKE 子句的參數值。 SQL Server 萬用字元可以包含在參數值。 比方說，如果`emailToMatch`參數設定為"address@example.com"，然後電子郵件地址的使用者資訊 」address@example.com"會傳回，如果有的話。 如果`emailToMatch`參數設定為"%@example.com"，然後電子郵件地址的使用者資訊 」address@example.com"，"address2@example.com"，"admin@example.com"等會傳回。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>會受限於`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數會識別哪一頁要傳回，其中的零識別的第一頁的結果。 `totalRecords`參數是`out`參數設為 已設定的成員資格使用者總數`applicationName`。 比方說，如果有 13 個使用者已設定`applicationName`，而`pageIndex`的值為 1`pageSize`為 5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到第 10 位使用者傳回。 `totalRecords`參數會設定為 13。  
  
 開頭和尾端空白會刪減`emailToMatch`參數值。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A>方法來擷取成員資格使用者資訊並顯示結果頁面中的資料。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 傳回成員資格使用者的使用者名稱包含相符項目與所提供的清單`usernameToMatch`已設定<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。  
  
 <xref:System.Web.Security.SqlMembershipProvider>比對的使用者名稱搜尋`usernameToMatch`使用 LIKE 子句的參數值。 SQL Server 萬用字元可以包含參數值。 例如，如果`usernameToMatch`參數設定為"user1"，則會傳回使用者資訊的使用者名稱的使用者稱為"user1"，若有的話。 如果`usernameToMatch`參數設定為"user %"，則使用者的使用者名稱的使用者資訊"user1"、"user2 」 稱為"user1"、"user2"、"user_admin"，並傳回等等。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>會受限於`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數會識別哪一頁要傳回，其中的零識別的第一頁的結果。 `totalRecords`參數是`out`參數設為 已設定的成員資格使用者總數`applicationName`。 比方說，如果有 13 個使用者已設定`applicationName`，而`pageIndex`的值為 1`pageSize`為 5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords`參數會設定為 13。  
  
 開頭和尾端空白會刪減`usernameToMatch`參數值。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>方法來擷取成員資格使用者資訊並顯示結果頁面中的資料。  
  
> [!NOTE]
>  此範例會呼叫使用 System.Web.Security.SqlMembershipProvider<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>類別提供<xref:System.Web.Security.Membership.GeneratePassword%2A>方法，以產生密碼，以指定的大小與至少指定的非字母的字元數。 <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法<xref:System.Web.Security.SqlMembershipProvider>呼叫<xref:System.Web.Security.Membership.GeneratePassword%2A>方法<xref:System.Web.Security.Membership>類別來擷取至少 14 個字元長的隨機密碼。 如果<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性大於 14、 傳回的密碼將會在指定的長度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性。  
  
 您可以特別呼叫<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法，藉由參考<xref:System.Web.Security.SqlMembershipProvider>直接從類別<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。  
  
 產生的密碼只能包含英數字元及下列標點符號： `!@#$%^&*()_-+=[{]};:<>|./?`。 沒有隱藏或非可列印的控制字元會包含在產生的密碼。  
  
> [!NOTE]
>  藉由建立隨機密碼<xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A>方法不保證傳遞中的規則運算式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。 不過，隨機的密碼將會符合所建立的準則<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例會產生隨機的 10 個字元密碼。  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別來擷取從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫的使用者資訊。  
  
 所傳回的結果<xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A>會受限於`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數會識別哪一頁要傳回，其中的零識別的第一頁的結果。 `totalRecords`參數是`out`參數設為 已設定的成員資格使用者總數`applicationName`。 比方說，如果有 13 個使用者已設定`applicationName`，而`pageIndex`的值為 1`pageSize`為 5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords`參數會設定為 13。  
  
   
  
## Examples  
 下列程式碼範例會傳回一份使用者的使用者數目的計數資料頁面中目前在線上。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別來擷取視為在線上從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫的使用者數目。  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 傳回其上次活動日期和時間大於目前的日期和時間的值小於目前的應用程式的使用者數目<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>以分鐘為單位的屬性。  
  
 只有已設定相關聯的使用者<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>包含在計數。  
  
   
  
## Examples  
 下列程式碼範例會傳回一份使用者的使用者計數目前在線上。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.MembershipUser>類別從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中擷取使用者的密碼。  
  
 如果不正確的密碼回應提供給<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法中，追蹤無效的密碼解答嘗試都會加一的內部計數器。 這會導致使用者遭到鎖定且無法登入，直到呼叫，以清除鎖定狀態<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供了正確的密碼解答，且使用者目前並未遭到鎖定，則會追蹤無效的密碼解答嘗試的內部計數器會重設為零。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>直接方法首先取得的參考<xref:System.Web.Security.SqlMembershipProvider>執行個體透過<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。  
  
 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，則<xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>方法無法擷取密碼。 雜湊的密碼單向加密，且無法解密。 如果<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，並<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>設定為`true`、<xref:System.Configuration.Provider.ProviderException>初始化提供者時，會擲回。  
  
 中所有參數值的開頭和尾端空白會被去除。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的使用者名稱密碼，並將它傳送給使用者的電子郵件訊息。  
  
> [!NOTE]
>  適用於需要高的安全性層級的網站，不建議使用電子郵件以純文字傳回密碼。 高安全性的網站，我們建議您傳回使用加密，例如 SSL 密碼。  
  
> [!NOTE]
>  此範例會呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`在 Web.config 檔案中使用<xref:System.Web.Security.Membership>類別。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> 從資料來源擷取使用者資訊，並建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 使用指定的唯一識別碼來識別使用者`providerUserKey`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別來擷取從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫的使用者資訊。  
  
 如果`userIsOnline`是`true`，使用者的上次活動日期/時間戳記會更新為目前的日期和時間。 這會反映在<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>並<xref:System.Web.Security.MembershipUser.IsOnline%2A>屬性所傳回的值在<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>。  
  
 開頭和尾端空白會刪減`username`參數值。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.SqlMembershipProvider.GetUser%2A>方法，以判斷使用者是否存在然後再擷取使用者的密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>電子郵件地址，用來擷取從 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫的相關聯的使用者名稱的類別。  
  
 如果成員資格資料庫中的多個使用者具有相同的電子郵件地址，則會傳回第一個遇到的使用者名稱。 您可以設定`requiresUniqueEmail`屬性設定為`true`中應用程式組態檔，請確認每封電子郵件位址在資料庫中的是唯一的。  
  
 開頭和尾端空白會刪減`email`參數值。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的電子郵件地址的使用者名稱。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會初始化<xref:System.Web.Security.SqlMembershipProvider>屬性值在 ASP.NET 應用程式組態檔 (Web.config) 中指定與不是直接從您的程式碼使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>鎖定成員資格使用者以前，所允許的無效密碼或密碼解答嘗試次數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>可搭配<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>防範不必要的來源，猜測密碼或密碼解答的重複嘗試透過成員資格使用者。 無效的密碼或提供成員資格使用者的密碼問題的數目是否大於或等於值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性的值所識別的分鐘數內<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，則成員資格使用者藉由設定鎖定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性，以`true`直到使用者解除鎖定使用<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果之前提供有效的密碼，則<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>達到值時，追蹤無效的密碼和密碼解答嘗試次數的計數器會重設為零。 如果之前提供有效的密碼解答<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>達到值時，只會追蹤無效的密碼解答嘗試次數的計數器會重設為零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>分別保留無效的密碼嘗試次數和無效的密碼解答嘗試次數的計數。 無效的密碼嘗試會導致只嘗試密碼計數器遞增。 無效的密碼解答嘗試會導致只有密碼解答計數器遞增。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性值會設定在應用程式組態中使用`maxInvalidPasswordAttempts`組態區段的屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>，並設定`maxInvalidPasswordAttempts`屬性設定為五個的無效嘗試和`passwordAttemptWindow`30 分鐘的時間。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>有效的密碼中必須要有的特殊字元數目下限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性會傳回特殊的非字母字元，必須輸入，才能建立有效的密碼最小數目<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性值會設定在應用程式組態中使用`minRequiredNonalphanumericCharacters`屬性[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
 非英數的字元是字元，<xref:System.Char.IsLetterOrDigit%2A>方法會傳回`false`。  
  
   
  
## Examples  
 下列範例所示[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別，以提供成員資格服務和集`minRequiredNonalphanumericCharacters`屬性設定為一個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>密碼所需的最小長度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> 屬性會取得必須建立有效的密碼輸入的字元數目下限<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性值會設定在應用程式組態中使用`minRequiredPasswordLength`屬性[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
   
  
## Examples  
 下列範例所示[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別，以提供成員資格服務和集`minRequiredPasswordLength`屬性設定為七個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>時間範圍內，以分鐘為單位，期間的連續失敗嘗試提供有效密碼或密碼解答會追蹤。 預設值為 10 分鐘。 如果目前失敗的嘗試和上一次失敗的嘗試之間的間隔大於<see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />屬性設定，則每次失敗嘗試會被視為是第一次失敗的嘗試。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性可搭配<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>屬性，以協助您抵禦猜測密碼或密碼解答的成員資格使用者執行不必要的來源的重複嘗試。 當使用者嘗試登入、 變更其密碼，或重設其密碼時，只有特定數目的連續嘗試可以在指定的時間範圍內。 所指定的時間間隔長度<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性，識別允許的無效嘗試之間的分鐘數。 如果連續失敗次數，可讓使用者重設他或她的密碼等於中儲存的值<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>屬性，而時間後所經過的最後一個的無效嘗試小於指定的分鐘數<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性，則成員資格使用者遭到鎖定 splittunneling<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性設`true`。 使用者可以藉由呼叫來解除鎖定<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。 如果目前失敗的嘗試和上一次失敗的嘗試之間的間隔大於<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性設定，則目前的無效嘗試會視為第一個。 如果達到允許的無效嘗試次數上限之前提供有效的密碼解答，則會不正確的密碼解答嘗試次數設定為零。 如果允許無效的最大數目之前提供有效的密碼嘗試次數達到時，不正確的密碼嘗試次數的計數和無效的密碼解答嘗試計數設定為零。  
  
 <xref:System.Web.Security.SqlMembershipProvider>分別保留的無效密碼嘗試次數和無效的密碼解答嘗試計數。 無效的密碼嘗試會導致只嘗試密碼計數器遞增。 無效的密碼解答嘗試會導致只有密碼解答計數器遞增。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性值會設定在應用程式組態中使用`passwordAttemptWindow`組態區段的屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>，並設定`maxInvalidPasswordAttempts`屬性設定為五個的無效嘗試和`passwordAttemptWindow`30 分鐘的時間。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>其中一個 <see cref="T:System.Web.Security.MembershipPasswordFormat" /> 值，指出在 SQL Server 資料庫中用來儲存密碼之格式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用`Hashed`僅`Clear`和`Encrypted`不安全。 `Hashed` 密碼已雜湊使用單向雜湊演算法和隨機產生的 salt 值儲存在資料庫時。 密碼驗證時，它會雜湊驗證的資料庫中的 salt 值。 無法擷取雜湊的密碼。 `Encrypted` 密碼不視為安全的會顯示您的資料庫內容的入侵也可以公開加密金鑰。 這表示您已加密的密碼無法解密和公開。  
  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> ASP.NET 應用程式的 Web.config 檔案的區段中指定值。  
  
 `Encrypted` 和`Hashed`加密或根據您的組態中的項目中所提供的資訊的預設雜湊密碼。 請注意，如果您指定的值`3DES`for`validation`屬性，或如果未不指定任何值，雜湊的密碼會雜湊使用<xref:System.Security.Cryptography.SHA1>演算法。  
  
 可以使用來定義自訂的雜湊演算法`hashAlgorithmType`的屬性[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。 如果您選擇加密時，預設的密碼加密會使用 AES。 您可以設定來變更加密演算法`decryption`組態項目的屬性。 如果您要加密的密碼，您必須提供明確的值`decryptionKey`元素中的屬性。 預設值`AutoGenerate`針對`decryptionKey`使用加密密碼與 ASP.NET 成員資格時，不支援屬性。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將其密碼的格式設定為`Hashed`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>用來評估密碼的規則運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性會取得用來評估密碼複雜度的規則運算式<xref:System.Web.Security.SqlMembershipProvider>物件。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性設定在應用程式組態中使用`passwordStrengthRegularExpression`屬性[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)組態項目。  
  
   
  
## Examples  
 下列範例所示[項目 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別，以提供成員資格服務和集`passwordStrengthRegularExpression`屬性驗證的密碼是否符合下列準則的規則運算式：  
  
-   是至少七個字元。  
  
-   包含至少一個數字。  
  
-   包含至少一個特殊的 （非英數） 字元。  
  
 如果密碼不符合這些準則，成員資格提供者不接受密碼。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> 如果有密碼解答才能重設密碼和擷取;否則， <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 需要密碼問題和答案提供一層額外的安全性時擷取，或重設使用者的密碼。 建立使用者名稱時，使用者可以提供一組問題和解答，稍後可用來擷取或重設遺忘的密碼。 如果<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>屬性和<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>屬性都`false`，值<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>屬性無關。  
  
 如需詳細資訊，請參閱 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> 與 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。  
  
   
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式的<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將它設定為針對密碼重設或擷取需要有密碼解答。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> 如果成員資格提供者需要唯一的電子郵件地址;否則， <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例顯示中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定<xref:System.Web.Security.SqlMembershipProvider>執行個體，並將它設定為每個使用者名稱需要唯一的電子郵件地址。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別至全新的 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的密碼重設隨機產生的值。 傳回新的密碼。  
  
> [!NOTE]
>  藉由建立隨機密碼<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法不保證傳遞中的規則運算式<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>屬性。 不過，隨機的密碼將會符合所建立的準則<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>和<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。  
  
 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法是最常使用的時機<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>屬性設定為`Hashed`。 如果使用者忘記的密碼雜湊，則無法擷取的密碼。 不過，提供者可以將密碼重設自動產生的新密碼如果使用者提供正確的密碼解答。  
  
 如果不正確的密碼回應提供給<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>方法中，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者遭到鎖定且無法登入，直到呼叫，以清除鎖定狀態<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供了正確的密碼解答，且使用者目前並未遭到鎖定，則會追蹤無效的密碼解答嘗試的內部計數器會重設為零。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 您可以呼叫<xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>直接方法首先取得的參考<xref:System.Web.Security.SqlMembershipProvider>執行個體<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 產生的密碼會是至少 14 個字元，或在指定的長度<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>屬性，而且會包含在指定的非英數字元數目<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>屬性。 密碼不保證傳遞規則運算式中包含<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>如果有指定的屬性。  
  
 中所有參數值的開頭和尾端空白會被去除。  
  
   
  
## Examples  
 下列程式碼範例會重設使用者的密碼，並傳回新的、 自動產生密碼。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者最常遭到鎖定且無法驗證所<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法時<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>超出內<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>。  
  
 開頭和尾端空白會刪減`username`參數值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>更新 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中使用者的使用者資訊的類別。 <xref:System.Web.Security.MembershipUser.Email%2A>， <xref:System.Web.Security.MembershipUser.Comment%2A>， <xref:System.Web.Security.MembershipUser.IsApproved%2A>， <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>，和<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>屬性值會更新指定的成員資格使用者。  
  
 最大長度<xref:System.Web.Security.MembershipUser.UserName%2A>為 256 個字元。 最大長度<xref:System.Web.Security.MembershipUser.Email%2A>為 256 個字元。  
  
 無法更新成員資格使用者的密碼，使用<xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A>方法。 若要更新成員資格使用者的密碼，請使用<xref:System.Web.Security.MembershipUser.ChangePassword%2A>方法的<xref:System.Web.Security.MembershipUser>類別。  
  
   
  
## Examples  
 下列程式碼範例會更新使用者的電子郵件地址。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.Security.Membership>類別來驗證使用者，以在 ASP.NET 應用程式的組態檔 (Web.config) 中指定的 SQL Server 資料庫中的使用者資訊。  
  
 成功驗證使用者，也會為目前的日期和時間在資料庫中的更新的上次活動日期和最後一個登入日期值。  
  
 如果不正確的密碼提供給<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>方法中，追蹤無效的密碼嘗試都會加一的內部計數器。 這會導致使用者遭到鎖定且無法登入，直到呼叫，以清除鎖定狀態<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>方法。 如果提供了正確的密碼，且使用者目前並未遭到鎖定，則內部的計數器，追蹤無效的密碼和密碼解答嘗試重設為零。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 和<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>屬性。  
  
 中所有參數值的開頭和尾端空白會被去除。  
  
   
  
## Examples  
 下列程式碼範例顯示 ASP.NET 應用程式設定為使用表單驗證的登入頁面和<xref:System.Web.Security.SqlMembershipProvider>。 如果提供的使用者認證無效，則會向使用者顯示的訊息。 否則，使用者重新導向至原來要求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  這個範例會使用<xref:System.Web.Security.Membership>類別來呼叫<xref:System.Web.Security.SqlMembershipProvider>指定為`defaultProvider`Web.config 檔案中。 如果您要存取預設提供者，做為類型<xref:System.Web.Security.SqlMembershipProvider>，您可以轉型<xref:System.Web.Security.Membership.Provider%2A>屬性<xref:System.Web.Security.Membership>類別。 若要存取其他設定的提供者做為特定提供者類型，您可以依其設定的名稱和存取它們<xref:System.Web.Security.Membership.Providers%2A>屬性<xref:System.Web.Security.Membership>類別，並將參數轉換成特定的提供者類型。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>