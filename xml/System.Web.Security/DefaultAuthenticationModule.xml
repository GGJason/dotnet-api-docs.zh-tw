<Type Name="DefaultAuthenticationModule" FullName="System.Web.Security.DefaultAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="08d35fed294b10cf83376a42a57b41f7800f5dde" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37544739" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DefaultAuthenticationModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DefaultAuthenticationModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.DefaultAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DefaultAuthenticationModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAuthenticationModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type DefaultAuthenticationModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>確定內容中有驗證 (Authentication) 物件。 此類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationModule>可確保<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>執行個體設定為<xref:System.Security.Principal.IPrincipal>針對每個要求的物件。 <xref:System.Web.Security.DefaultAuthenticationModule>會檢查<xref:System.Web.HttpContext.User%2A>屬性之後<xref:System.Web.HttpApplication.AuthenticateRequest>事件，以及之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如果<xref:System.Web.HttpContext.User%2A>屬性是`null`，則<xref:System.Web.Security.DefaultAuthenticationModule>設定<xref:System.Web.HttpContext.User%2A>屬性設<xref:System.Security.Principal.GenericPrincipal>不包含任何使用者資訊的物件。  
  
 如果設定的驗證模組<xref:System.Web.HttpResponse.StatusCode%2A>屬性為 401，<xref:System.Web.Security.DefaultAuthenticationModule>將轉譯的拒絕存取時的錯誤頁面。 如果值<xref:System.Web.HttpResponse.StatusCode%2A>屬性設定為值大於 200，<xref:System.Web.Security.DefaultAuthenticationModule>物件會結束要求。 在此情況下，只有 HTTP 模組的訂閱<xref:System.Web.HttpApplication.EndRequest>目前要求完成之前會呼叫事件。  
  
 <xref:System.Web.Security.DefaultAuthenticationModule>公開<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件。 您可以使用這個事件來提供自訂<xref:System.Security.Principal.IPrincipal>物件<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體。 <xref:System.Web.Security.WindowsAuthenticationModule.Authenticate>藉由指定事件，名為存取事件**DefaultAuthentication_OnAuthenticate**應用程式的 Global.asax 檔中。  
  
   
  
## Examples  
 下列範例會使用**DefaultAuthentication_OnAuthenticate**事件，以測試是否<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體是`null`。 如果<xref:System.Web.HttpContext.User%2A>屬性是`null`，則範例集<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體<xref:System.Security.Principal.GenericPrincipal>物件位置<xref:System.Security.Principal.GenericPrincipal.Identity%2A>的<xref:System.Security.Principal.GenericPrincipal>物件是<xref:System.Security.Principal.GenericIdentity>與<xref:System.Security.Principal.GenericIdentity.Name%2A>值為"default"。  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate**就會引發事件之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如此一來，如果您設定<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體的自訂身分識別，它可能會影響您的應用程式的行為。 比方說，如果您使用<xref:System.Web.Security.FormsAuthentication>類別，並且指定`<deny users="?" />`中要確保只有經過驗證的使用者可以存取您的網站，此範例會造成的項目受到忽略，因為使用者都會有名稱的組態區段，這是"default"。 相反地，您會指定`<deny users="default" />`以確保只有已驗證的使用者可以存取您的網站。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式不是從應用程式程式碼呼叫。  
  
 ASP.NET 會呼叫這個建構函式建立的執行個體<xref:System.Web.Security.DefaultAuthenticationModule>類別。 在呼叫建構函式之後, 它會呼叫<xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>方法來初始化新<xref:System.Web.Security.DefaultAuthenticationModule>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public event System.Web.Security.DefaultAuthenticationEventHandler Authenticate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.DefaultAuthenticationEventHandler Authenticate" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.DefaultAuthenticationModule.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Authenticate As DefaultAuthenticationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Security::DefaultAuthenticationEventHandler ^ Authenticate;" />
      <MemberSignature Language="F#" Value="member this.Authenticate : System.Web.Security.DefaultAuthenticationEventHandler " Usage="member this.Authenticate : System.Web.Security.DefaultAuthenticationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.DefaultAuthenticationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在要求已經驗證之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>之後，就會引發事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件。 它用來確保<xref:System.Web.HttpContext.User%2A>屬性的目前<xref:System.Web.HttpContext>執行個體填入<xref:System.Security.Principal.IPrincipal>物件。  
  
 您可以存取<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件的<xref:System.Web.Security.DefaultAuthenticationModule>類別，藉由指定名為副程式**DefaultAuthentication_OnAuthenticate**應用程式的 Global.asax 檔中。  
  
 您可以使用<xref:System.Web.Security.DefaultAuthenticationEventArgs.Context%2A>的屬性<xref:System.Web.Security.DefaultAuthenticationEventArgs>物件中**DefaultAuthentication_OnAuthenticate**事件設定<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體，以自訂<xref:System.Security.Principal.IPrincipal>物件。 如果您未指定的值<xref:System.Web.HttpContext.User%2A>屬性，<xref:System.Web.Security.DefaultAuthenticationModule>設定<xref:System.Web.HttpContext.User%2A>屬性<xref:System.Web.HttpContext>執行個體<xref:System.Security.Principal.GenericPrincipal>不包含任何使用者資訊的物件。  
  
 **DefaultAuthentication_OnAuthenticate**之後，就會引發事件<xref:System.Web.HttpApplication.AuthenticateRequest>事件，以及之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如果您有以拒絕或允許存取您的應用程式的使用者名稱而定的區段，修改<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體可能會影響您的應用程式的行為。 務必讓您設定期間的使用者名稱**DefaultAuthentication_OnAuthenticate**事件會被視為當組態中指定的區段。  
  
> [!NOTE]
>  如果 Web 應用程式在整合模式中，在 IIS 7.0 中執行<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件的<xref:System.Web.Security.DefaultAuthenticationModule>就不會引發。 如果`mode`屬性的組態項目設為 [無]，應用程式訂閱<xref:System.Web.Security.DefaultAuthenticationModule.Authenticate>事件，<xref:System.PlatformNotSupportedException>就會引發錯誤。 在此案例中，若要接收驗證通知，訂閱<xref:System.Web.HttpApplication.AuthenticateRequest>事件的<xref:System.Web.HttpApplication>執行個體。 如需在整合模式的相容性問題的詳細資訊，請參閱[從 IIS 6.0 的 ASP.NET 應用程式移轉至 IIS 7.0](http://msdn.microsoft.com/library/76f9cc78-f978-4837-b1c8-51d642ec4847)。  
  
   
  
## Examples  
 下列程式碼範例會使用**DefaultAuthentication_OnAuthenticate**事件，以測試是否<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體是`null`。 如果<xref:System.Web.HttpContext.User%2A>屬性是`null`，則範例集<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體<xref:System.Security.Principal.GenericPrincipal>物件位置<xref:System.Security.Principal.GenericPrincipal.Identity%2A>的<xref:System.Security.Principal.GenericPrincipal>物件是<xref:System.Security.Principal.GenericIdentity>與<xref:System.Security.Principal.GenericIdentity.Name%2A>值為"default"。  
  
> [!NOTE]
>  **DefaultAuthentication_OnAuthenticate**就會引發事件之前<xref:System.Web.HttpApplication.AuthorizeRequest>事件。 如此一來，如果您設定<xref:System.Web.HttpContext.User%2A>屬性與目前<xref:System.Web.HttpContext>執行個體的自訂身分識別，它可能會影響您的應用程式的行為。 比方說，如果您使用<xref:System.Web.Security.FormsAuthentication>類別，並且指定`<deny users="?" />`中要確保只有經過驗證的使用者可以存取您的網站，此範例會造成的項目受到忽略，因為使用者都會有名稱的組態區段，這是"default"。 相反地，您會指定`<deny users="default" />`以確保只有已驗證的使用者可以存取您的網站。  
  
 [!code-csharp[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/CS/global.asax#1)]
 [!code-vb[System.Web.Security.DefaultAuthenticationModule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.DefaultAuthenticationModule/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="defaultAuthenticationModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>除了記憶體之外，釋放 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.DefaultAuthenticationModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="defaultAuthenticationModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">目前的 <see cref="T:System.Web.HttpApplication" /> 執行個體。</param>
        <summary>初始化 <see cref="T:System.Web.Security.DefaultAuthenticationModule" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不是從應用程式程式碼呼叫。  
  
 <xref:System.Web.Security.DefaultAuthenticationModule.Init%2A>方法可確保<xref:System.Web.Security.DefaultAuthenticationModule>包含在事件的處理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>