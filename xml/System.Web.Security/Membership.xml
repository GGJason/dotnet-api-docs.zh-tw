<Type Name="Membership" FullName="System.Web.Security.Membership">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="154b580fad2f113d6f9ace11e7f2e904f5c253df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30551212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Membership" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Membership extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.Membership" />
  <TypeSignature Language="VB.NET" Value="Public Class Membership" />
  <TypeSignature Language="C++ CLI" Value="public ref class Membership abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>驗證使用者認證，並管理使用者設定。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership>類別用於在 ASP.NET 應用程式驗證使用者認證及管理使用者設定，例如密碼和電子郵件地址。 <xref:System.Web.Security.Membership>類別可以用其本身，或搭配<xref:System.Web.Security.FormsAuthentication>建立完整的系統來驗證 Web 應用程式或網站的使用者。 <xref:System.Web.UI.WebControls.Login>控制項封裝<xref:System.Web.Security.Membership>類別提供方便的機制，來驗證使用者。  
  
> [!NOTE]
>  如果您不熟悉的 ASP.NET 成員資格功能，請參閱[成員資格簡介](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980)才能繼續。 如需與成員資格相關的其他主題的清單，請參閱[使用成員資格管理使用者](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd)。  
  
 <xref:System.Web.Security.Membership>類別提供了功能：  
  
-   建立新的使用者。  
  
-   Microsoft SQL Server 中或替代資料存放區中儲存成員資格資訊 （使用者名稱、 密碼、 電子郵件地址和支援的資料）。  
  
-   驗證使用者造訪您的網站。 您可以驗證使用者，以程式設計的方式，或者您可以使用<xref:System.Web.UI.WebControls.Login>控制項來建立需要少量或沒有程式碼的完整驗證系統。  
  
-   管理密碼，其中包括建立、 變更、 擷取和重設，等等。 您可以選擇性地設定為需要密碼問題和解答，以驗證忘記密碼的使用者的密碼重設或擷取要求的 ASP.NET 成員資格。  
  
 雖然 ASP.NET 成員資格為 ASP.NET 用於驗證的獨立功能，它可以與 ASP.NET 角色管理可提供您的網站的授權服務整合。 成員資格也可以與 ASP.NET 使用者整合<xref:System.Web.Profile>提供可調整的應用程式專屬自訂個別的使用者。 如需詳細資訊，請參閱[了解角色管理](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)和[ASP.NET 設定檔屬性概觀](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d)。  
  
 <xref:System.Web.Security.Membership>類別必須仰賴成員資格提供者進行通訊與資料來源。 .NET Framework 包含<xref:System.Web.Security.SqlMembershipProvider>，它會將使用者資訊儲存在 Microsoft SQL Server 資料庫中，和<xref:System.Web.Security.ActiveDirectoryMembershipProvider>，可讓您將 Active Directory 或 Active Directory 應用程式模式 (ADAM) 的伺服器上儲存使用者資訊。 您也可以實作自訂成員資格提供者與可用的替代的資料來源通訊<xref:System.Web.Security.Membership>類別。 自訂成員資格提供者繼承<xref:System.Web.Security.MembershipProvider>抽象類別。 如需詳細資訊，請參閱[實作成員資格提供者](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582)。  
  
 根據預設，ASP.NET 成員資格會啟用所有 ASP.NET 應用程式。 預設成員資格提供者是<xref:System.Web.Security.SqlMembershipProvider>和名稱的機器組態中指定`AspNetSqlProvider`。 預設執行個體<xref:System.Web.Security.SqlMembershipProvider>設定為連接到 Microsoft SQL Server 的本機執行個體。  
  
 您可以修改預設設定，以指定<xref:System.Web.Security.SqlMembershipProvider>以外`AspNetSqlProvider`執行個體標示為預設的提供者，或指定為使用 Web.config 檔案的 ASP.NET 應用程式的預設提供者的自訂提供者執行個體。 您可以指定 ASP.NET 成員資格設定 Web 應用程式的 Web.config 檔案中使用的組態區段。 您可以使用`providers`子區段的區段，以指定其中一個預設提供者以外的成員資格提供者。 下列章節，例如從目前的應用程式組態中移除預設的成員資格提供者並新增新的提供者的名稱`SqlProvider`連接至具名的 SQL Server 執行個體`AspSqlServer`。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 下列程式碼範例顯示設定為使用表單驗證和 ASP.NET 成員資格的 ASP.NET 應用程式的登入頁面。 如果提供的使用者認證無效，會向使用者顯示的訊息。 否則，使用者重新導向至原本要求的 URL 使用<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!NOTE]
>  ASP.NET 登入控制項 (<xref:System.Web.UI.WebControls.Login>， <xref:System.Web.UI.WebControls.LoginView>， <xref:System.Web.UI.WebControls.LoginStatus>， <xref:System.Web.UI.WebControls.LoginName>，和<xref:System.Web.UI.WebControls.PasswordRecovery>) 封裝幾乎所有提示使用者提供認證和驗證認證中的成員資格系統所需的邏輯，而且可以是用來取代以程式設計方式檢查使用<xref:System.Web.Security.Membership>類別。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應用程式的名稱。</summary>
        <value>應用程式的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ApplicationName%2A>用來識別應用程式特定的使用者。 也就是相同的使用者名稱可以指定不同的多個 ASP.NET 應用程式的資料庫中存在<xref:System.Web.Security.Membership.ApplicationName%2A>。 這可讓多個應用程式使用相同的資料庫來儲存使用者資訊而不發生重複的使用者名稱衝突。 或者，多個 ASP.NET 應用程式可以使用相同的使用者資料庫中藉由指定相同<xref:System.Web.Security.Membership.ApplicationName%2A>。 <xref:System.Web.Security.Membership.ApplicationName%2A>可以在 Web 應用程式組態中設定以程式設計方式或以宣告方式。  
  
> [!CAUTION]
>  因為所有由提供服務的要求會使用單一預設成員資格提供者執行個體<xref:System.Web.HttpApplication>物件，您可以有多個要求同時執行，而且嘗試設定<xref:System.Web.Security.Membership.ApplicationName%2A>屬性值。 <xref:System.Web.Security.Membership.ApplicationName%2A>屬性不是執行緒安全的多個寫入，且變更<xref:System.Web.Security.Membership.ApplicationName%2A>屬性值可能會導致非預期的行為，應用程式的多個使用者。 我們建議您避免撰寫程式碼，讓使用者設定<xref:System.Web.Security.Membership.ApplicationName%2A>屬性，除非必要，否則。 應用程式的範例設定<xref:System.Web.Security.Membership.ApplicationName%2A>屬性可能需要為系統管理的應用程式管理的多個應用程式成員資格資料。 這類應用程式應該在單一使用者應用程式並不是 Web 應用程式。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用<xref:System.Web.Security.SqlMembershipProvider>執行個體和設定<xref:System.Web.Security.Membership.ApplicationName%2A>至`MyApplication`。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>加入新的使用者至資料存放區。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新使用者的使用者名稱。</param>
        <param name="password">新使用者的密碼。</param>
        <summary>加入新的使用者至資料存放區。</summary>
        <returns>新建立使用者的 <see cref="T:System.Web.Security.MembershipUser" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 將新的使用者加入至資料存放區，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。 如果使用者建立失敗，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。 您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>屬性<xref:System.Web.Security.MembershipCreateUserException>，指出使用者建立失敗的原因。  
  
 當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法，例如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>應用程式其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或藉由設定的屬性值<xref:System.Web.Security.MembershipUser>物件並將其傳遞至<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 <xref:System.Web.Security.SqlMembershipProvider>提供選項，以針對每個使用者需要唯一的電子郵件地址。 如果<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性是`true`，您必須使用其中一種<xref:System.Web.Security.Membership.CreateUser%2A>的多載，可讓您指定要建立的使用者電子郵件地址。 否則，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會建立新的使用者，ASP.NET 應用程式設定為使用表單驗證和 ASP.NET 成員資格。 如果使用者並未建立成功，訊息會顯示給使用者。 否則，使用者會重新導向應用程式的登入頁面。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">未建立使用者。 檢查 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> 屬性，以取得 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">新使用者的使用者名稱。</param>
        <param name="password">新使用者的密碼。</param>
        <param name="email">新使用者的電子郵件地址。</param>
        <summary>新增具有指定電子郵件地址的新使用者至資料存放區。</summary>
        <returns>新建立使用者的 <see cref="T:System.Web.Security.MembershipUser" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 將新的使用者加入至資料存放區，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。 如果使用者建立失敗，<xref:System.Web.Security.MembershipCreateUserException>就會擲回。 您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值<xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>屬性<xref:System.Web.Security.MembershipCreateUserException>，指出使用者建立失敗的原因。  
  
 當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法，例如<xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>應用程式其中<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`，或藉由設定的屬性值<xref:System.Web.Security.MembershipUser>物件並將其傳遞至<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會建立新的使用者，ASP.NET 應用程式設定為使用表單驗證和 ASP.NET 成員資格。 如果使用者並未建立成功，訊息會顯示給使用者。 否則，使用者會重新導向應用程式的登入頁面。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipCreateUserException">未建立使用者。 檢查 <see cref="P:System.Web.Security.MembershipCreateUserException.StatusCode" /> 屬性，以取得 <see cref="T:System.Web.Security.MembershipCreateStatus" /> 值。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新使用者的使用者名稱。</param>
        <param name="password">新使用者的密碼。</param>
        <param name="email">新使用者的電子郵件地址。</param>
        <param name="passwordQuestion">成員資格使用者的密碼問題值。</param>
        <param name="passwordAnswer">成員資格使用者的密碼解答值。</param>
        <param name="isApproved">布林值 (Boolean)，指出是否核准新使用者登入。</param>
        <param name="status">
          <see cref="T:System.Web.Security.MembershipCreateStatus" />，指出該使用者建立成功，或是建立失敗的原因。</param>
        <summary>加入具有指定屬性值的新使用者至資料存放區中，並傳回狀態參數，指出該使用者建立成功，或是使用者建立失敗的原因。</summary>
        <returns>新建立使用者的 <see cref="T:System.Web.Security.MembershipUser" /> 物件。 如果沒有建立使用者，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 將新的使用者加入至資料存放區，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。 如果使用者建立失敗時，您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值`status`輸出參數，指出使用者建立失敗的原因。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法會傳回`null`如果`password`為空字串或`null`，`username`為空字串或`null`，或包含逗號 （，）、`passwordQuestion`不`null`並為空字串，或`passwordAnswer`不`null`和包含空字串。  
  
 當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法和設定的屬性值<xref:System.Web.Security.MembershipUser>物件，然後再將傳遞<xref:System.Web.Security.MembershipUser>物件<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 修剪開頭和尾端空白是所有字串參數值。  
  
   
  
## Examples  
 下列程式碼範例會建立新的使用者，ASP.NET 應用程式設定為使用表單驗證和 ASP.NET 成員資格。 如果使用者並未建立成功，訊息會顯示給使用者。 否則，使用者會重新導向應用程式的登入頁面。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">新使用者的使用者名稱。</param>
        <param name="password">新使用者的密碼。</param>
        <param name="email">新使用者的電子郵件地址。</param>
        <param name="passwordQuestion">成員資格使用者的密碼問題值。</param>
        <param name="passwordAnswer">成員資格使用者的密碼解答值。</param>
        <param name="isApproved">布林值 (Boolean)，指出是否核准新使用者登入。</param>
        <param name="providerUserKey">使用者的使用者識別項，應該要存放在成員資格資料存放區中。</param>
        <param name="status">
          <see cref="T:System.Web.Security.MembershipCreateStatus" />，指出該使用者建立成功，或是建立失敗的原因。</param>
        <summary>加入具有指定屬性值和唯一識別項的新使用者至資料存放區中，並傳回狀態參數，指出該使用者建立成功，或是使用者建立失敗的原因。</summary>
        <returns>新建立使用者的 <see cref="T:System.Web.Security.MembershipUser" /> 物件。 如果沒有建立使用者，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.CreateUser%2A> 將新的使用者加入至資料存放區，並傳回<xref:System.Web.Security.MembershipUser>新建立的使用者物件。 如果使用者建立失敗時，您可以擷取<xref:System.Web.Security.MembershipCreateStatus>值`status`輸出參數，指出使用者建立失敗的原因。 您可以藉由指定使用者，例如資料庫中，主索引鍵值的唯一識別碼`providerUserKey`參數。  
  
 <xref:System.Web.Security.Membership.CreateUser%2A>方法會傳回`null`如果`password`為空字串或`null`，`username`為空字串或`null`，或包含逗號 （，）、`passwordQuestion`不`null`且包含空白字串，或`passwordAnswer`不`null`和包含空字串。  
  
 當已建立成員資格使用者，而且您擁有的參考<xref:System.Web.Security.MembershipUser>物件為該使用者，您可以修改該使用者的設定與<xref:System.Web.Security.MembershipUser>公用方法和設定的屬性值<xref:System.Web.Security.MembershipUser>物件，然後再將傳遞<xref:System.Web.Security.MembershipUser>物件<xref:System.Web.Security.Membership.UpdateUser%2A>方法。  
  
 如果使用者已存在於應用程式的資料來源，您可以取得<xref:System.Web.Security.MembershipUser>與現有的使用者物件<xref:System.Web.Security.Membership.GetUser%2A>方法。  
  
 修剪開頭和尾端空白是所有字串參數值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料庫刪除使用者。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要刪除的使用者名稱。</param>
        <summary>從資料庫刪除使用者和任何相關的使用者資料。</summary>
        <returns>
          如果使用者已刪除，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者資料儲存在資料庫中的<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>您正在使用時，會一併刪除個人化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>儲存資料的物件。  
  
   
  
## Examples  
 下列程式碼範例會刪除目前登入的使用者及所有相關資料。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 是 <see langword="null." /></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public static bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要刪除的使用者名稱。</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> 表示要從資料庫中刪除與使用者相關的資料，<see langword="false" /> 表示要保留資料庫中與使用者相關的資料。</param>
        <summary>從資料庫刪除使用者。</summary>
        <returns>
          如果使用者已刪除，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從資料庫中刪除的使用者只會刪除從設定`applicationName`。  
  
 如果`deleteAllRelatedData`是`true`，使用者資料儲存在資料庫中的<xref:System.Web.Security.Roles>， <xref:System.Web.HttpContext.Profile%2A>，或<xref:System.Web.UI.WebControls.WebParts.WebPart>您正在使用時，會一併刪除個人化<xref:System.Web.Security.SqlRoleProvider>， <xref:System.Web.Profile.SqlProfileProvider>，和<xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>物件資料存放區。  
  
   
  
## Examples  
 下列程式碼範例會刪除目前登入的使用者及所有相關資料。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 是空字串，或包含逗號 (,)。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordReset { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前成員資格提供者是否設定為允許使用者重設密碼。</summary>
        <value>
          如果成員資格提供者支援密碼重設，則為 <see langword="true" />；否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 密碼重設是 ASP.NET 成員資格來取代目前的使用者名稱密碼與新的隨機產生的密碼，當使用者忘記其密碼，或目前的密碼不再有效的功能。 這是特別有用，當密碼格式設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，因為使用者無法擷取雜湊的密碼值。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並啟用密碼重設。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下列程式碼範例會先確認，<xref:System.Web.Security.Membership.EnablePasswordReset%2A>是`true`，然後重設使用者的密碼，並傳回新的自動產生密碼。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public static bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出目前成員資格提供者是否設定為允許使用者擷取密碼。</summary>
        <value>
          如果成員資格提供者支援密碼擷取，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`false`，基礎的成員資格提供者可能會擲回<xref:System.Web.HttpException>。  
  
 隨附於.NET Framework 提供者支援增強的密碼安全性的多個密碼格式。 如果密碼格式設定為<xref:System.Web.Security.MembershipPasswordFormat.Hashed>，則使用者不能從資料庫擷取現有的密碼。 <xref:System.Web.Security.MembershipPasswordFormat.Hashed>密碼格式提供單向的編碼的密碼值。 密碼是 「 雜湊 」，且相較於儲存在資料庫中進行驗證的值。 「 雜湊 」 的值不能未編碼來擷取原始的密碼值。 如需詳細資訊，請參閱<xref:System.Web.Security.MembershipPasswordFormat>。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並啟用密碼擷取。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下列程式碼範例會先確認，<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>是`true`，擷取指定的使用者名稱的密碼，然後將指定之使用者的電子郵件地址傳送。  
  
> [!IMPORTANT]
>  不建議針對需要較高的安全性等級的網站傳回使用電子郵件以純文字密碼。 高安全性的網站，我們建議您傳回密碼使用加密，例如 SSL。  
>   
>  此範例包含一個可接受使用者輸入，可能會造成安全性威脅文字方塊。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByEmail">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得成員資格使用者集合，其中電子郵件地址包含要符合的指定電子郵件地址。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜尋的電子郵件地址。</param>
        <summary>取得成員資格使用者集合，其中電子郵件地址包含要符合的指定電子郵件地址。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含與 <paramref name="emailToMatch" /> 參數相符的所有使用者。  
  
 會修剪 <paramref name="emailToMatch" /> 參數值中的前置空格和後端空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 傳回清單成員資格使用者的電子郵件地址符合所提供的其中`emailToMatch`設定`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`emailToMatch`參數。 LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`emailToMatch`參數值。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法來從成員資格資料庫中擷取成員資格使用者資訊會根據使用者輸入，並將結果顯示資料頁面中。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]
 [!code-aspx-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜尋的電子郵件地址。</param>
        <param name="pageIndex">要傳回的結果頁面索引。 <c>pageIndex</c> 以零為起始。</param>
        <param name="pageSize">要傳回的結果頁面大小。</param>
        <param name="totalRecords">相符的使用者總數。</param>
        <summary>以分頁資料的方式取得成員資格使用者的集合，其中的電子郵件地址包含必須符合的指定電子郵件地址。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 物件的頁面，從 <paramref name="pageIndex" /> 指定的頁面開始。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.FindUsersByEmail%2A> 傳回清單成員資格使用者的電子郵件地址符合所提供的其中`emailToMatch`設定`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`emailToMatch`參數。 LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`emailToMatch`參數值。  
  
 所傳回的結果<xref:System.Web.Security.Membership.FindUsersByEmail%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為相符的成員資格使用者總數`emailToMatch`值。 比方說，如果 13 找不到使用者的位置`emailToMatch`比對的一部分或整個電子郵件地址，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords` 會設定為 13。  
  
 會修剪 `emailToMatch` 參數值中的前置空格和後端空格。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法來從成員資格資料庫中擷取成員資格使用者資訊會根據使用者輸入，並將結果顯示資料頁面中。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> 小於零。  
  
 -或-  
  
 <paramref name="pageSize" /> 小於 1。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindUsersByName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得成員資格使用者集合，其中使用者名稱包含要符合的指定使用者名稱。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <summary>取得成員資格使用者集合，其中使用者名稱包含要符合的指定使用者名稱。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含與 <paramref name="usernameToMatch" /> 參數相符的所有使用者。  
  
 會修剪 <paramref name="usernameToMatch" /> 參數值中的前置空格和後端空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 傳回清單的成員資格使用者的使用者名稱符合所提供的其中`usernameToMatch`設定`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`usernameToMatch`參數。 LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`usernameToMatch`參數值。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>方法來從成員資格資料庫中擷取成員資格使用者資訊會根據使用者輸入，並將結果顯示資料頁面中。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 為空字串。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">要搜尋的使用者名稱。</param>
        <param name="pageIndex">要傳回的結果頁面索引。 <c>pageIndex</c> 以零為起始。</param>
        <param name="pageSize">要傳回的結果頁面大小。</param>
        <param name="totalRecords">相符的使用者總數。</param>
        <summary>以分頁資料的方式取得成員資格使用者的集合，其中的使用者名稱包含必須符合的指定使用者名稱。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" />，其中包含 <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> 物件的頁面，從 <paramref name="pageIndex" /> 指定的頁面開始。  
  
 會修剪 <paramref name="usernameToMatch" /> 參數值中的前置空格和後端空格。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> 傳回清單的成員資格使用者的使用者名稱符合所提供的其中`usernameToMatch`設定`applicationName`。  
  
 <xref:System.Web.Security.SqlMembershipProvider>執行使用 LIKE 子句針對其搜尋`usernameToMatch`參數。 LIKE 子句可用於中的 SQL Server 所支援任何萬用字元`usernameToMatch`參數值。  
  
 所傳回的結果<xref:System.Web.Security.Membership.FindUsersByName%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為相符的成員資格使用者總數`usernameToMatch`值。 比方說，如果 13 找不到使用者的位置`usernameToMatch`比對的一部分或整個使用者名稱，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords` 會設定為 13。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Membership.FindUsersByName%2A>方法來從成員資格資料庫中擷取成員資格使用者資訊會根據使用者輸入，並將結果顯示資料頁面中。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> 為空字串。  
  
 -或-  
  
 <paramref name="pageIndex" /> 小於零。  
  
 -或-  
  
 <paramref name="pageSize" /> 小於 1。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GeneratePassword(int32 length, int32 numberOfNonAlphanumericCharacters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GeneratePassword (length As Integer, numberOfNonAlphanumericCharacters As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GeneratePassword(int length, int numberOfNonAlphanumericCharacters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="numberOfNonAlphanumericCharacters" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">所產生密碼中的字元數。 長度必須介於 1 和 128 個字元之間。</param>
        <param name="numberOfNonAlphanumericCharacters">所產生密碼中的非英數字元數目下限 (例如 @、#、!、%、&amp; 等等)。</param>
        <summary>產生指定長度的隨機密碼。</summary>
        <returns>指定長度的隨機密碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GeneratePassword%2A>方法用來產生隨機密碼，而且最常用的<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>設為新暫時密碼重設使用者密碼的成員資格提供者所實作的方法。  
  
 產生的密碼只能包含英數字元以及下列標點符號： `!@#$%^&*()_-+=[{]};:<>|./?`。 沒有隱藏的或非可列印的控制字元會包含在產生的密碼。  
  
> [!NOTE]
>  所建立的隨機密碼<xref:System.Web.Security.Membership.GeneratePassword%2A>方法不保證傳遞規則運算式中的<xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性。 不過，隨機密碼將會符合所建立的準則<xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性和`numberOfNonAlphanumericCharacters`參數。  
  
   
  
## Examples  
 下列程式碼範例會建立新的成員資格使用者，並使用<xref:System.Web.Security.Membership.GeneratePassword%2A>方法來初始化新的使用者設為隨機的值，顯示給使用者的密碼。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="length" /> 小於 1 或大於 128 -或-  
  
 <paramref name="numberOfNonAlphanumericCharacters" /> 小於 0 或大於 <paramref name="length" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllUsers">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得資料庫中使用者的集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers () As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得資料庫中所有使用者的集合。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" /> 物件的 <see cref="T:System.Web.Security.MembershipUser" />，表示資料庫中的所有使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetAllUsers%2A> 傳回做為集合的應用程式的所有成員資格使用者的資訊<xref:System.Web.Security.MembershipUser>物件。 在使用時特別<xref:System.Web.Security.Membership.GetAllUsers%2A>方法非常大型使用者資料庫，以產生<xref:System.Web.Security.MembershipUserCollection>在您的 ASP.NET 頁面可能會降低應用程式的效能。  
  
   
  
## Examples  
 下列程式碼範例會傳回一份使用者的使用者數目的計數目前在線上。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">要傳回的結果頁面索引。 使用 0 來表示第一頁。</param>
        <param name="pageSize">要傳回的結果頁面大小。 <c>pageIndex</c> 以零為起始。</param>
        <param name="totalRecords">使用者的總數。</param>
        <summary>以分頁資料的方式取得資料庫中所有使用者集合。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUserCollection" /> 物件的 <see cref="T:System.Web.Security.MembershipUser" />，表示已設定 <see langword="applicationName" /> 之資料庫中的所有使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所傳回的結果<xref:System.Web.Security.Membership.GetAllUsers%2A>受到`pageIndex`和`pageSize`參數。 `pageSize`參數識別的最大數目<xref:System.Web.Security.MembershipUser>物件中傳回<xref:System.Web.Security.MembershipUserCollection>。 `pageIndex`參數識別要傳回，其中 0 識別的第一頁的結果的頁面。 `totalRecords`參數是`out`參數設為所設定的成員資格使用者總數`applicationName`。 比方說，如果有設定 13 使用者`applicationName`，而`pageIndex`值為 1 以`pageSize`5，<xref:System.Web.Security.MembershipUserCollection>傳回會包含第 6 到傳回的第十個使用者。 `totalRecords` 會設定為 13。  
  
   
  
## Examples  
 下列程式碼範例傳回一份使用者的使用者數目的計數資料頁面中目前在線上。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> 小於零。  
  
 -或-  
  
 <paramref name="pageSize" /> 小於 1。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public static int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfUsersOnline();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得目前存取應用程式的使用者數。</summary>
        <returns>目前存取應用程式的使用者數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> 傳回目前的使用者數目<xref:System.Web.Security.Membership.ApplicationName%2A>上次活動日期大於目前的時間較少<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>。 上次活動日期/時間戳記更新為目前的日期和時間的項目，當會藉由驗證使用者認證<xref:System.Web.Security.Membership.ValidateUser%2A>或<xref:System.Web.Security.Membership.UpdateUser%2A>方法或呼叫<xref:System.Web.Security.Membership.GetUser%2A>多載會採用任何參數，或使用`userIsOnline`參數來指定應該要更新的日期/時間戳記。  
  
   
  
## Examples  
 下列程式碼範例會傳回一份使用者的使用者數目的計數目前在線上。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從資料來源取得成員資格使用者的資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser () As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從資料來源取得資訊，並為目前登入的成員資格使用者，更新最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示目前登入的使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser> 從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者由<xref:System.Security.Principal.IIdentity.Name%2A>中目前的使用者<xref:System.Web.HttpContext>。  
  
 您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記使用者正在使用擷取`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。 `GetUser(System.String)` 和`GetUser(System.Object)`不這麼做。  
  
   
  
## Examples  
 下列程式碼範例會更新上次活動日期/時間戳記，以顯示 ASP.NET 網頁中的使用者名稱與目前登入的成員資格使用者。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">目前沒有任何成員使用者登入。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userIsOnline">如果 <see langword="true" />，則更新指定使用者的最後活動日期/時間戳記。</param>
        <summary>從資料來源取得目前登入成員資格使用者的資訊。 如果已指定，會為目前登入的成員資格使用者，更新最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示目前登入的使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者由<xref:System.Security.Principal.IIdentity.Name%2A>中目前的使用者<xref:System.Web.HttpContext>。  
  
 您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記使用者正在使用擷取`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。 `GetUser(System.String)` 和`GetUser(System.Object)`不這麼做。  
  
   
  
## Examples  
 程式碼範例會顯示下列 ASP.NET 網頁中目前的登入的成員資格使用者的使用者名稱，而無須更新上次活動日期/時間戳記，有使用者。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">目前沒有任何成員使用者登入。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">使用者成員資格資料來源中的唯一使用者識別項。</param>
        <summary>從資料來源取得與指定唯一識別項相關聯之成員資格使用者的資訊。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示與指定唯一識別項相關聯的使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 使用指定的資料來源使用的唯一識別碼來識別使用者`providerUserKey`參數。  
  
 您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，`GetUser()`隱含地更新上次活動日期/時間戳記的使用者。 `GetUser(System.String)` 和`GetUser(System.Object)`不相符  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要擷取的使用者名稱。</param>
        <summary>從資料來源取得指定成員資格使用者的資訊。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示指定的使用者。 如果 <paramref name="username" /> 參數未對應現有的使用者，此方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者由<xref:System.Security.Principal.IIdentity.Name%2A>中目前的使用者<xref:System.Web.HttpContext>。  
  
 您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隱含地更新上次活動日期/時間戳記的使用者。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不這麼做。  
  
   
  
## Examples  
 下列程式碼範例使用<xref:System.Web.Security.Membership.GetUser%2A>方法以傳回<xref:System.Web.Security.MembershipUser>目前登入的使用者和更新電子郵件地址的使用者物件。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 包含逗號 (,)。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">使用者成員資格資料來源中的唯一使用者識別項。</param>
        <param name="userIsOnline">如果 <see langword="true" />，則更新指定使用者的最後活動日期/時間戳記。</param>
        <summary>從資料來源取得與指定唯一識別項相關聯之成員資格使用者的資訊。 如果已指定，則更新使用者的最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示與指定唯一識別項相關聯的使用者。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。 從指定的資料來源的唯一識別碼與用來識別使用者`providerUserKey`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要擷取的使用者名稱。</param>
        <param name="userIsOnline">如果 <see langword="true" />，則更新指定使用者的最後活動日期/時間戳記。</param>
        <summary>從資料來源取得指定成員資格使用者的資訊。 如果已指定，則更新使用者的最後活動日期/時間戳記。</summary>
        <returns>
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示指定的使用者。 如果 <paramref name="username" /> 參數未對應現有的使用者，此方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A>方法從資料來源擷取使用者資訊，以及建立<xref:System.Web.Security.MembershipUser>物件填入傳回的資料。  
  
 如果您使用其中一個<xref:System.Web.Security.Membership.GetUser%2A>未採用多載`username`參數，<xref:System.Web.Security.Membership.GetUser%2A>傳回目前的登入的成員資格使用者的資訊。 目前的登入的成員資格使用者由<xref:System.Security.Principal.IIdentity.Name%2A>中目前的使用者<xref:System.Web.HttpContext>。  
  
 您也可以指定是否要<xref:System.Web.Security.Membership.GetUser%2A>更新上次活動日期/時間戳記，以擷取使用者`userIsOnline`參數。 <xref:System.Web.Security.Membership.GetUser%2A>多載不接受`userIsOnline`參數，<xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType>隱含地更新上次活動日期/時間戳記的使用者。 <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=nameWithType> 和<xref:System.Web.Security.Membership.GetUser%2A>不這麼做。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的使用者名稱的密碼，並將指定之使用者的電子郵件地址傳送。 若要呼叫<xref:System.Web.Security.Membership.GetUser%2A>指定的上次活動日期/時間戳記的使用者不會更新。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 包含逗號 (,)。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public static string GetUserNameByEmail (string emailToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUserNameByEmail(string emailToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserNameByEmail (emailToMatch As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetUserNameByEmail(System::String ^ emailToMatch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">要搜尋的電子郵件地址。</param>
        <summary>取得使用者名稱，其中使用者的電子郵件地址與指定的電子郵件地址相符。</summary>
        <returns>使用者電子郵件地址與指定之電子郵件地址相符的使用者名稱。 如果找不到符合的項目，就會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUserNameByEmail%2A> 可用來擷取在使用者不知道他們的使用者名稱，但知道電子郵件地址的情況下的成員資格使用者的使用者名稱。 如果資料存放區中的多個使用者具有相同電子郵件地址，則會傳回第一個遇到的使用者名稱。  
  
 所有參數值會都修剪開頭和尾端空白。  
  
   
  
## Examples  
 下列程式碼範例會擷取指定的電子郵件地址的使用者名稱。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithmType">
      <MemberSignature Language="C#" Value="public static string HashAlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string HashAlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.HashAlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property HashAlgorithmType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ HashAlgorithmType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>演算法的識別項，用於雜湊密碼。</summary>
        <value>演算法的識別項，用於雜湊密碼或空白，以使用預設雜湊演算法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>屬性會識別所使用之自訂的雜湊演算法<xref:System.Web.Security.Membership>類別。 您設定<xref:System.Web.Security.Membership.HashAlgorithmType%2A>屬性使用`hashAlgorithmType`項目的屬性。  
  
 .NET Framework 可讓您設定自訂密碼編譯類別使用的項目組態區段。 <xref:System.Web.Security.Membership.HashAlgorithmType%2A>屬性必須符合`name`項目中項目的屬性。 如需詳細資訊，請參閱[將演算法名稱對應至密碼編譯類別](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md)。  
  
 如果<xref:System.Web.Security.Membership.HashAlgorithmType%2A>未設定屬性，<xref:System.Web.Security.Membership>類別使用中設定的雜湊演算法`validation`項目的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public static int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得鎖定成員資格使用者以前，所允許的無效密碼或密碼解答嘗試次數。</summary>
        <value>鎖定成員資格使用者以前，所允許的無效密碼或密碼解答嘗試次數。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性可搭配<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>嘗試猜測密碼或密碼解答的成員資格使用者的屬性，以防範不必要的來源使用重複。  
  
 如果成員資格使用者是大於或等於的值，輸入數目不正確的密碼或密碼解答<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性所指定的分鐘數內<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，則使用者會遭到鎖定而無法由網站設定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`直到呼叫解除鎖定使用者<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果提供有效的密碼或密碼解答值之前<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性為止，追蹤無效嘗試次數的計數器就會設定為零。  
  
 無效的密碼和密碼解答嘗試都會個別追蹤。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性設定為 5、 使用者最多五個嘗試輸入正確的密碼，並最多五個嘗試輸入正確的密碼解答，而不被鎖定。  
  
 <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性值會設定在應用程式組態中，使用`maxInvalidPasswordAttempts`組態項目的屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性是`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`maxInvalidPasswordAttempts`屬性設定為五個無效的嘗試次數和`passwordAttemptWindow`為 30 分鐘。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public static int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得有效的密碼中必須要有的特殊字元數目下限。</summary>
        <value>有效的密碼中必須要有的特殊字元數目下限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>屬性會傳回特殊的非英數字元，必須輸入中指定的成員資格提供者建立有效的密碼最小數目<xref:System.Web.Security.Membership.Provider%2A>屬性。  
  
 <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>屬性值會設定在應用程式組態中，使用`minRequiredNonAlphanumericCharacters`組態項目的屬性。  
  
 非英數字元是字元的<xref:System.Char.IsLetterOrDigit%2A>方法會傳回`false`。  
  
   
  
## Examples  
 下列程式碼範例示範中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`minRequiredNonAlphanumericCharacters`屬性設為 1 個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonAlphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public static int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int MinRequiredPasswordLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得密碼所需的最小長度。</summary>
        <value>密碼所需的最小長度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性會取得必須在指定的成員資格提供者建立有效的密碼輸入的字元數目下限<xref:System.Web.Security.Membership.Provider%2A>屬性。  
  
 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>屬性值會設定在應用程式組態中，使用`minRequiredPasswordLength`組態項目的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`minRequiredPasswordLength`屬性設定為七個字元。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredPasswordLength="7"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public static int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int PasswordAttemptWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得時間範圍，在此時間範圍內會追蹤提供有效密碼或密碼解答的連續失敗嘗試。</summary>
        <value>時間範圍 (以分鐘為單位)，在此時間範圍內會追蹤提供有效密碼或密碼解答的連續失敗嘗試。 預設為 10 分鐘。 如果目前失敗嘗試與上一次失敗嘗試之間的時間間隔超過 <see cref="P:System.Web.Security.Membership.PasswordAttemptWindow" /> 屬性設定，則會將每次失敗嘗試都視為初次失敗嘗試。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性可搭配<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>內容，協助防範不必要的來源，破解的密碼或密碼解答的成員資格使用者，透過重複嘗試。 當使用者嘗試登入、 變更或重設其密碼時，只有特定數目的連續嘗試允許指定的時間間隔內。 此時間窗口長度指定為<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，其可識別允許無效嘗試之間的分鐘數。  
  
 如果連續嘗試失敗次數，可讓使用者重設他或她密碼等於中儲存的值<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>屬性，以及時間後經過無效上次小於中指定的分鐘數<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>屬性，則成員資格使用者已鎖定。使用者鎖定藉由設定<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>屬性`true`直到呼叫解除鎖定使用者<xref:System.Web.Security.MembershipUser.UnlockUser%2A>方法。  
  
 如果目前的失敗的嘗試和上一次的失敗的嘗試之間的間隔超過<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>視為第一個屬性的設定，目前的嘗試無效。 如果之前允許的無效嘗試次數上限為止，請提供有效的密碼解答，無效的密碼解答嘗試計數是設定為 0 （零）。 如果允許無效的最大數目之前提供有效的密碼嘗試次數達到時，不正確的密碼嘗試次數的計數和無效的密碼解答嘗試計數會設定為 0 （零）。  
  
 無效的密碼和密碼解答嘗試累積彼此獨立。 例如，如果<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>設定為 5，而且後面接著兩個無效的密碼解答嘗試進行三個無效的密碼嘗試次數，內，則必須進行兩個的多個無效的密碼嘗試次數 （或三個多個無效的密碼解答嘗試次數） <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>成員資格使用者遭到鎖定。  
  
 <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>應用程式組態中設定屬性值使用`passwordAttemptWindow`區段的組態項目屬性。  
  
 如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>屬性設定為`false`，不會追蹤無效的密碼解答嘗試。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並設定`maxInvalidPasswordAttempts`屬性設定為五個無效的嘗試次數和`passwordAttemptWindow`為 30 分鐘。  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      maxInvalidPasswordAttempts="5"  
      passwordAttemptWindow="30"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public static string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來評估密碼的規則運算式。</summary>
        <value>用來評估密碼的規則運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性會取得用來評估密碼複雜度中指定的提供者的規則運算式<xref:System.Web.Security.Membership.Provider%2A>屬性。  
  
 <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>屬性設定在應用程式組態中，使用`passwordStrengthRegularExpression`組態項目的屬性。  
  
 如需有關規則運算式的詳細資訊，請參閱[.NET Framework 規則運算式](~/docs/standard/base-types/regular-expressions.md)。  
  
   
  
## Examples  
 下列程式碼範例示範中的組態項目`system.web`應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>類別提供成員資格服務與集`passwordStrengthRegularExpression`屬性，以驗證密碼的規則運算式符合下列準則：  
  
-   Is greater than 七個字元。  
  
-   包含至少一個數字。  
  
-   包含至少一個特殊的 （非英數） 字元。  
  
 如果密碼不符合這些準則，成員資格提供者不接受的密碼。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20>  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression=" @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
   </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得應用程式預設成員資格提供者的參考。</summary>
        <value>使用 <see cref="T:System.Web.Security.MembershipProvider" /> 抽象基底類別公開之應用程式的預設成員資格提供者。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Provider%2A>屬性可讓您直接參考應用程式的預設成員資格提供者。 這通常用來存取自訂成員資格提供者的成員不屬於<xref:System.Web.Security.MembershipProvider>抽象基底類別。  
  
   
  
## Examples  
 下列程式碼範例會存取預設<xref:System.Web.Security.SqlMembershipProvider>啟用應用程式使用<xref:System.Web.Security.Membership.Provider%2A>屬性，就可以判斷值的自訂<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>屬性。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Security.MembershipProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Security.MembershipProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As MembershipProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Security::MembershipProviderCollection ^ Providers { System::Web::Security::MembershipProviderCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 ASP.NET 應用程式的成員資格提供者集合。</summary>
        <value>針對 ASP.NET 應用程式所設定之成員資格提供者的 <see cref="T:System.Web.Security.MembershipProviderCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.Providers%2A>屬性會參考所有啟用的應用程式的成員資格提供者，包括提供者加入應用程式的 Web.config 檔案和 Machine.config 檔案中的所有應用程式。 您可以控制其成員資格提供者可以使用應用程式使用`providers`中您的應用程式的組態區段的項目。 例如，下列範例會示範一節中移除的應用程式的 Web.config 檔案<xref:System.Web.Security.SqlMembershipProvider>執行個體 (`AspNetSqlProvider`) 電腦組態檔中指定，並將<xref:System.Web.Security.SqlMembershipProvider>名為執行個體`SqlProvider`為應用程式的預設成員資格提供者。  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <remove name="AspNetSqlProvider" />  
          <add name="SqlProvider"  
            type="System.Web.Security.SqlMembershipProvider"  
            connectionStringName="SqlServices"  
            enablePasswordRetrieval="false"  
            enablePasswordReset="true"  
            requiresQuestionAndAnswer="true"  
            passwordFormat="Hashed"  
            applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 當指定[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) 區段中，您必須指定`defaultProvider`屬性。 如果您未指定[元素 （ASP.NET 設定結構描述） 的成員資格](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049)用您的 Web.config 中的機器組態的值區段和<xref:System.Web.Security.SqlMembershipProvider>名為執行個體`AspNetSqlProvider`建立為`defaultProvider`.  
  
 您可以取得的提供者的強型別的參考<xref:System.Web.Security.Membership.Providers%2A>索引名稱的成員資格提供者，並將它轉型為所需的型別集合。  
  
   
  
## Examples  
 下列程式碼範例會列出啟用應用程式和其各自的型別提供者。  
  
 [!code-aspx-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public static bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出預設成員資格提供者是否要求使用者解答密碼問題，以便重設及擷取密碼。</summary>
        <value>
          如果密碼重設及擷取需要密碼解答，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 需要密碼問題和解答，提供額外的安全性時擷取，或重設使用者的密碼。 使用者可以提供問題和答案建立他們的使用者名稱時，他們稍後可以使用來擷取或重設忘記的密碼。  
  
 <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> 當勾選<xref:System.Web.Security.MembershipUser.ResetPassword%2A>或<xref:System.Web.Security.MembershipUser.GetPassword%2A>呼叫。 .NET Framework 所隨附的提供者會擲回<xref:System.NotSupportedException>如果<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>是`true`和提供的密碼解答`null`。  
  
 如果<xref:System.Web.Security.Membership.EnablePasswordReset%2A>和<xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>都`false`，<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>仍可用來建立新使用者時，強制執行的問題和答案建立; 不過，問題和答案就不會使用。 您可以使用擷取問題<xref:System.Web.Security.MembershipUser>類別。  
  
 如需詳細資訊，請參閱 <xref:System.Web.Security.MembershipUser.ResetPassword%2A> 與 <xref:System.Web.Security.MembershipUser.GetPassword%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>、 啟用密碼重設，以及執行重設時，需要有密碼解答。  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 下列程式碼範例會檢查值<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>並新增必要的密碼問題和答案時建立的使用者提供的控制項。  
  
> [!IMPORTANT]
>  此範例包含一個可接受使用者輸入，可能會造成安全性威脅文字方塊。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public static void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">
          <see cref="T:System.Web.Security.MembershipUser" /> 物件，表示要更新的使用者，以及該使用者的已更新資訊。</param>
        <summary>以指定使用者的資訊更新資料庫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UpdateUser%2A> 做為輸入，會採用<xref:System.Web.Security.MembershipUser>物件填入成員資格使用者的目前資訊，並更新資料來源的屬性值<xref:System.Web.Security.MembershipUser>物件。 您可以建構新<xref:System.Web.Security.MembershipUser>，或擷取<xref:System.Web.Security.MembershipUser>物件填入目前的值，在資料來源使用<xref:System.Web.Security.Membership.GetUser%2A>， <xref:System.Web.Security.Membership.GetAllUsers%2A>， <xref:System.Web.Security.Membership.FindUsersByName%2A>，或<xref:System.Web.Security.Membership.FindUsersByEmail%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會更新目前的登入之使用者的電子郵件地址。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UserIsOnlineTimeWindow">
      <MemberSignature Language="C#" Value="public static int UserIsOnlineTimeWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 UserIsOnlineTimeWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.Membership.UserIsOnlineTimeWindow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UserIsOnlineTimeWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int UserIsOnlineTimeWindow { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定使用者最後活動日期/時間戳記之後的分鐘數，在其間使用者會視為在線上。</summary>
        <value>使用者最後活動日期/時間戳記之後的分鐘數，在其間使用者會視為在線上。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>屬性值會在呼叫期間檢查<xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>。 如果<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>使用者為大於目前的日期和時間減去<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>值以分鐘為單位，則使用者會視為在線上。 您可以判斷成員資格使用者是否視為與線上<xref:System.Web.Security.MembershipUser.IsOnline%2A>屬性<xref:System.Web.Security.MembershipUser>類別。  
  
 <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>的成功驗證使用者的認證時，會更新使用者的<xref:System.Web.Security.Membership.ValidateUser%2A>方法。 您也可以更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>成員資格使用者，當您呼叫其中一個<xref:System.Web.Security.Membership.GetUser%2A>多載。 如果您呼叫<xref:System.Web.Security.Membership.GetUser%2A>採用多載`userIsOnline`參數，指定其值為`true`更新<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>使用者。  
  
   
  
## Examples  
 下列程式碼範例示範中的項目`system.web`的 ASP.NET 應用程式的 Web.config 檔案區段。 它會指定應用程式使用的執行個體<xref:System.Web.Security.SqlMembershipProvider>並設定`userIsOnlineTimeWindow`屬性設定為 20 分鐘。  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public static bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要驗證的使用者名稱。</param>
        <param name="password">指定之使用者的密碼。</param>
        <summary>驗證所提供的使用者名稱和密碼是否有效。</summary>
        <returns>
          如果所提供的使用者名稱和密碼有效，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.ValidateUser%2A> 提供簡單的方法來驗證使用者名稱和密碼，從資料來源。 請注意，如果`username`參數是空的或`null`、<xref:System.Web.HttpException>就會擲回。  
  
   
  
## Examples  
 下列程式碼範例示範 ASP.NET 應用程式設定為使用表單驗證的登入頁面和<xref:System.Web.Security.Membership>類別。 如果提供的使用者認證無效，會向使用者顯示的訊息。 否則，使用者重新導向至原本要求的 URL，由<xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>方法。  
  
> [!IMPORTANT]
>  這個範例包含一個文字方塊，可接受使用者輸入，可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatingPassword">
      <MemberSignature Language="C#" Value="public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.Security.Membership.ValidatingPassword" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ValidatingPassword As MembershipValidatePasswordEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Web::Security::MembershipValidatePasswordEventHandler ^ ValidatingPassword;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipValidatePasswordEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當建立使用者、變更密碼或重設密碼時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.MembershipProvider.ValidatingPassword>就會引發事件時<xref:System.Web.Security.MembershipProvider.CreateUser%2A>方法，<xref:System.Web.Security.MembershipProvider.ChangePassword%2A>方法，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>呼叫方法的成員資格提供者。  
  
 您可以使用<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，以驗證密碼格式和成員資格使用者的值。  
  
 您可以取消目前<xref:System.Web.Security.MembershipProvider.CreateUser%2A>， <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>，或<xref:System.Web.Security.MembershipProvider.ResetPassword%2A>藉由設定動作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>屬性提供<xref:System.Web.Security.ValidatePasswordEventArgs>至`true`期間<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件。  
  
 如果您藉由設定取消目前動作<xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>屬性`true`，您可以設定<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性提供<xref:System.Web.Security.ValidatePasswordEventArgs>描述密碼驗證失敗之原因的例外狀況。 呼叫方法將會擲回例外狀況，<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性設定為。 如果<xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>屬性是`null`，呼叫端將會擲回泛型密碼驗證失敗例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範<xref:System.Web.Security.MembershipProvider.ValidatingPassword>事件，它會驗證使用者的密碼格式取消動作，如果密碼不符合所需的格式。  
  
 [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]
 [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>